{
  "active": true,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "List Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "workflows": {
      "main": [
        [
          {
            "node": "kindev",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Workflows": {
      "main": [
        [
          {
            "node": "workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Workflow": {
      "main": [
        [
          {
            "node": "code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Condenseur de code",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "code": {
      "main": [
        [
          {
            "node": "Condenseur de code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Condenseur de code": {
      "main": [
        [
          {
            "node": "kindev1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send  Notifications": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "nouveau message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kindev1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send  Notifications",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kindev": {
      "main": [
        [
          {
            "node": "Get Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-21T09:51:22.321Z",
  "id": "kLKx8F1dt8gfkjry",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "QC - Questionneur de Code",
  "nodes": [
    {
      "parameters": {},
      "id": "052f1b77-51a2-43b5-9f1b-e2edd5c7e60e",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        1800,
        180
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "if ($node[\"entree\"].json.chatInput != null) {\n  return {\"output\": $json.output};\n}\n\nreturn {\"json\":{\"response\": $json.output}};"
      },
      "id": "a812ebb3-7896-4667-94bd-17adeb53636d",
      "name": "nouveau message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3760,
        380
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nif (json.chatInput) {\n json.query = json.chatInput;\n}\n\nif (!json.query) {\n  json.query = \"Je souhaite une explication générale du Workflow.\"\n}\n\nreturn {\"json\": json};"
      },
      "id": "afca539c-72b3-4b55-8f58-34b42e918c6a",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        180
      ]
    },
    {
      "parameters": {
        "jsCode": "let workflows = \"\";\n\n// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  workflows += item.json.id + \":\" +item.json.name + \"\\n\";\n}\n\nreturn {\"json\": {\"workflows\": workflows}};"
      },
      "id": "235c1de3-311b-4917-b531-aded134b1635",
      "name": "workflows",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2440,
        180
      ]
    },
    {
      "parameters": {
        "filters": {}
      },
      "id": "0e6f1815-bb2f-48ec-910a-e7e25874e5d0",
      "name": "List Workflows",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        2220,
        180
      ],
      "credentials": {
        "n8nApi": {
          "id": "fqjkS9ijdeXvE4BY",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "workflowId": {
          "__rl": true,
          "value": "={{ $node[\"kindev\"].json.output.match(/ID:\\s(\\w+)/)[1] }}",
          "mode": "id"
        }
      },
      "id": "87967b61-ef6e-4d56-a6f5-e8b12ce345ae",
      "name": "Get Workflow",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        2220,
        380
      ],
      "credentials": {
        "n8nApi": {
          "id": "fqjkS9ijdeXvE4BY",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4-0125-preview",
        "options": {
          "timeout": 600000
        }
      },
      "id": "dffe0cfc-a22a-42a2-93f0-549d33eec980",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2660,
        600
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "code",
              "stringValue": "={{ JSON.stringify($node[\"Get Workflow\"].json)}}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "62f7095e-e49f-49c5-85dd-baf5858c56f0",
      "name": "code",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2440,
        380
      ]
    },
    {
      "parameters": {
        "chunkSize": 20000,
        "chunkOverlap": 2000,
        "options": {
          "summarizationMethodAndPrompts": {
            "values": {
              "combineMapPrompt": "=# Instructions du condenseur de code\n\nTon objectif est de répondre au mieux au besoin informationnel à partir des textes proposés issus du code d'un Workflow n8n.io (JSON).\nTa réponse doit être la plus détaillée possible.\n\n# Mission Globale\n\n{{ $node[\"entree\"].json.mission }}\n\n# Demande Spécifique (Query)\n\n{{ $node[\"entree\"].json.query }}\n\n# Extraits\n\n\"{text}\"",
              "prompt": "=# Instructions du condenseur de code\n\nTon objectif est de répondre au mieux au besoin informationnel à partir des textes proposés issus du code d'un Workflow n8n.io (JSON).\nTa réponse doit être la plus détaillée possible.\n\n# Mission Globale\n\n{{ $node[\"entree\"].json.mission }}\n\n# Demande Spécifique (Query)\n\n{{ $node[\"entree\"].json.query }}\n\n# Extraits\n\n\"{text}\""
            }
          }
        }
      },
      "id": "dc0f2686-9d5a-41d9-9b37-f4caa40ed0f9",
      "name": "Condenseur de code",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2,
      "position": [
        2660,
        380
      ],
      "disabled": true
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Le Questionneur de code retourne une réponse issue de la codebase n8n de DigitalKin à partir d'une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage : où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.\n\nEx : Comment fonctionne le Workflow \"Recherche Google Scholar\" ?",
        "options": {
          "inputPlaceholder": "Comment fonctionne le Workflow \"Recherche Google Scholar\" ?",
          "responseMode": "lastNode",
          "subtitle": "Le Questionneur de code retourne une réponse issue de la codebase n8n de DigitalKin à partir d'une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage : où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.",
          "title": "={{ $workflow.name }}"
        }
      },
      "id": "87ae172e-3b9e-41d9-b0a6-51346d3f41ea",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [
        1800,
        -20
      ],
      "webhookId": "7c2faa4c-71d7-4509-affc-4c68158b7d9f"
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "0bfeddf1-b1bf-4ad6-b558-4b2261cc511f",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3540,
        380
      ]
    },
    {
      "parameters": {
        "workflowId": "=EYWde6gUS9Qq2ok7",
        "options": {}
      },
      "id": "0a0d6856-b4da-4d00-bbac-31a6a3079783",
      "name": "Send  Notifications",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3380,
        520
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_KEwBhc34Qsh3dcu2Gu8bgFne",
        "text": "=# Mission Globale\n\n{{ $node[\"entree\"].json.mission }}\n\n# Demande Spécifique (Query)\n\n{{ $node[\"entree\"].json.query }}\n\n# Code du Workflow n8n {{ $node[\"Get Workflow\"].json.name}} (ID : {{ $node[\"Get Workflow\"].json.name}})\n\n{{ JSON.stringify($node[\"Get Workflow\"].json)}}\n\n# Instruction - Réponse au besoin informationnel\n\nA partir des informations disponibles, formule la meilleure réponse possible au besoin informationnel.",
        "options": {}
      },
      "id": "3284a7f3-ee1e-4ea9-b863-70561122bbb3",
      "name": "kindev1",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        3040,
        380
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_KEwBhc34Qsh3dcu2Gu8bgFne",
        "text": "=# Mission Globale\n\n{{ $node[\"entree\"].json.mission }}\n\n# Demande Spécifique (Query)\n\n{{ $node[\"entree\"].json.query }}\n\n# Workflows n8n disponibles\n\n{{ $node[\"workflows\"].json.workflows }}\n\n# Instruction - Sélection de Workflow\n\nParmi les Workflows disponibles, lequel semble le plus approprié à consulter pour répondre au besoin informationnel ?\n\nRéponds au format \"ID: %WORKFLOWID% - Nom du Workflow\". Attention à respecter le format à la lettre.\n\nWorkflow :",
        "options": {}
      },
      "id": "110edb53-8400-469d-aba6-cfe047fb3508",
      "name": "kindev",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2660,
        180
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-12-17T10:07:55.424Z",
      "updatedAt": "2023-12-20T20:25:13.009Z",
      "id": "DzuSxffpFOEBRhld",
      "name": "outil"
    },
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-01-31T14:38:45.000Z",
  "versionId": "0cf0e421-b97f-426c-98f0-73d23332cd8a"
}