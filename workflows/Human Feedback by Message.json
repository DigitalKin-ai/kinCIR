{
  "active": true,
  "connections": {
    "entree": {
      "main": [
        [
          {
            "node": "kins",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "thread": {
      "main": [
        [
          {
            "node": "feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to binary data": {
      "main": [
        [
          {
            "node": "Update Thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "feedback": {
      "main": [
        [
          {
            "node": "Convert to binary data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escape Markdown Ouput": {
      "main": [
        [
          {
            "node": "Send Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Thread": {
      "main": [
        [
          {
            "node": "Escape Markdown Ouput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Output": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If mention": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If command": {
      "main": [
        [
          {
            "node": "input command",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If mention",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input command": {
      "main": [
        [
          {
            "node": "Admin commands",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Admin commands": {
      "main": [
        [
          {
            "node": "Send Output1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kins": {
      "main": [
        [
          {
            "node": "kins1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kins1": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree find": {
      "main": [
        [
          {
            "node": "Find Mission",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "entree find",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Mission": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-29T09:33:49.512Z",
  "id": "xMV42ELBz1pvvDDt",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Human Feedback by Message",
  "nodes": [
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\nlet mention = $json.message.text;\n\n// Utiliser une expression régulière pour trouver la mention\njson.mention = mention.match(/@\\w*/i)[0].substring(1); // Enlève le '@'  \n\nreturn {\"json\": json};"
      },
      "id": "c489b22a-8cfb-4a33-8d39-1297e2522860",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        480
      ]
    },
    {
      "parameters": {
        "workflowId": "YWxRZmBa38HYCjnv",
        "options": {}
      },
      "id": "f11a242e-2031-4056-a7e1-741b3d30f07d",
      "name": "thread",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1940,
        580
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"thread\"].json;\nlet message = $item(0).$node[\"entree\"].json.message;\n\n\nlet from = (message.from.username != null ? message.from.username  : \"\") + \" \" + (message.from.first_name != null ? message.from.first_name  : \"\" ) + \" \" + (message.from.last_name != null ? message.from.last_name  : \"\");\n\njson.feedback = \"---\\n\\n[FEEDBACK - \" + from + \"]\\n\\n\" + message.text + \"\\n\\n[/FEEDBACK - \" + from + \"]\\n\"; \n\njson.thread += json.feedback ;\n\nreturn {\"json\": json};"
      },
      "id": "0193a968-2e6b-4b9f-a64c-955ec44ed88e",
      "name": "feedback",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2160,
        580
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "thread",
        "destinationKey": "thread",
        "options": {
          "fileName": "={{ $node[\"thread\"].binary.fileName }}",
          "mimeType": "text/markdown",
          "useRawData": true
        }
      },
      "id": "add5438c-3779-4450-8b56-221817428dab",
      "name": "Convert to binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        2340,
        420
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "={{ $node[\"thread\"].json[\"documentGoogleDriveId\"] }}",
          "mode": "id"
        },
        "changeFileContent": true,
        "inputDataFieldName": "thread",
        "newUpdatedFileName": "={{ $node[\"thread\"].binary.thread[\"fileName\"] }}",
        "options": {}
      },
      "id": "e9402a4c-2176-4b93-8172-98bdc1c58011",
      "name": "Update Thread",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2560,
        420
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Z5nSsC9JGaYw1Ng3",
          "name": "Google Drive DK via Nicolas"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function escapeMarkdownV2(text) {\n    return text.replace(/[_*\\[\\]()~`>#\\+=\\-{}\\.!|]/g, match => '\\\\' + match)\n               .replace(/(\\n```)([a-z]*\\n[\\s\\S]+?\\n```)/g, (match, p1, p2) => p1.replace('\\n', '') + p2);\n}\n\nlet json = $node[\"feedback\"].json;\n\nlet text = json.feedback;\nif (text.length > 3900) {\n  text = \"[...]\" + text.substring(text.length - 3900); \n}\ntext = \"Feedback pour \" + $item(0).$node[\"entree find\"].json.kin + \" (Producteur) : \" + $item(0).$node[\"entree find\"].json.mailSubject + \"\\n\\n\" + text;\ntext = escapeMarkdownV2(text);\n\nreturn {\"json\":{\"text\":text}};"
      },
      "id": "1d3446ba-fc5e-4b7d-abfd-de69bc78457b",
      "name": "Escape Markdown Ouput",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2760,
        420
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "-4155607972",
        "text": "={{ $json.text }}",
        "additionalFields": {
          "disable_notification": true,
          "parse_mode": "MarkdownV2"
        }
      },
      "id": "149c4191-96b4-489a-8a20-b044b50ef151",
      "name": "Send Output",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        2980,
        420
      ],
      "credentials": {
        "telegramApi": {
          "id": "ZycPeiDd8w3TWjiS",
          "name": "digitalkin_bot Telegram"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "3cace918-c2f2-47d4-98e8-c6ce0a67d7b2",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3200,
        600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "59531903-e8b9-4352-9640-3cec9ed78114",
              "leftValue": "={{ $json.message.text.match(/@kin\\w+/i) }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "ea0619f0-562b-4291-b17b-c7b510750002",
              "leftValue": "={{ $json.message.text.match(/@all/i) }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "a53465fa-b249-4f96-b8e0-2e7220a26ff2",
              "leftValue": "={{ $json.message.text.match(/@everyone/i) }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e5d2def0-5dfa-4d0f-8d58-ab133b132413",
      "name": "If mention",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -320,
        480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "59531903-e8b9-4352-9640-3cec9ed78114",
              "leftValue": "={{ /^\\/[a-zA-Z]+/i.test($json[\"message\"][\"text\"]) }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2f9641a5-87ba-467e-957d-525dd4b6e09a",
      "name": "If command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -560,
        480
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let query = $json.message.text;\n\nreturn {\"json\": {\"query\": query}};"
      },
      "id": "7c7d8b5c-8cd2-4309-824a-b1d17ac6b04b",
      "name": "input command",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        115,
        12
      ]
    },
    {
      "parameters": {
        "content": "## /commandes accessibles via Telegram",
        "height": 305.8754761244447,
        "width": 745.7016505647414
      },
      "id": "f7edf80d-d710-4fc5-910a-35364c06a1d4",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        -80
      ]
    },
    {
      "parameters": {
        "chatId": "-4155607972",
        "text": "={{ $json.response }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_notification": true
        }
      },
      "id": "1a7f1964-a738-4f03-8ab4-046e0f95d1d3",
      "name": "Send Output1",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        555,
        12
      ],
      "credentials": {
        "telegramApi": {
          "id": "ZycPeiDd8w3TWjiS",
          "name": "digitalkin_bot Telegram"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "workflowId": "MGND8ynCD26RRnsW",
        "options": {}
      },
      "id": "de44fcb1-ed69-4708-b425-cbd0fc25d12c",
      "name": "Admin commands",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        335,
        92
      ]
    },
    {
      "parameters": {
        "content": "## Admin Commands\nhttps://kins.app.n8n.cloud/workflow/MGND8ynCD26RRnsW",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "27e9500c-395a-4c22-9374-bea0d998f94f",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        255,
        -28
      ]
    },
    {
      "parameters": {
        "content": "## Get/Create Thread\nhttps://kins.app.n8n.cloud/workflow/YWxRZmBa38HYCjnv",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "5a3e9123-8bac-4b44-8c93-17c7072f471b",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        460
      ]
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "f4f45c4f-15cf-4cbf-a8fd-595cba308330",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -820,
        480
      ],
      "webhookId": "3f2cecfe-ea1f-4d3a-bca4-12bc62afe794",
      "credentials": {
        "telegramApi": {
          "id": "ZycPeiDd8w3TWjiS",
          "name": "digitalkin_bot Telegram"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "kin",
        "options": {}
      },
      "id": "2507bdfe-635b-4e84-8f2a-82e0448f48a3",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        560,
        480
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\njson.message = $item(0).$node[\"Telegram Trigger\"].json.message;\n\nreturn {\"json\": json};"
      },
      "id": "7958f334-77aa-4e22-87ef-ff4c6fa3f849",
      "name": "entree find",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        480
      ]
    },
    {
      "parameters": {
        "workflowId": "gdFeXvXoLRHkWsrB",
        "options": {}
      },
      "id": "b0c52570-1e39-4242-98fb-26528d348ae7",
      "name": "kins",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        140,
        480
      ]
    },
    {
      "parameters": {
        "content": "## Get Kins Actifs\nhttps://kins.app.n8n.cloud/workflow/gdFeXvXoLRHkWsrB",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "8b4ca2de-b7c2-4d9a-8c9d-301d07acfcd2",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        360
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let mention = $node[\"entree\"].json.mention;\nlet kins = [];\n\nif (mention.startsWith(\"kins\")) {\n      kins = $json.kin.filter(kin => kin.uniteFonctionnelle.toLowerCase() === mention.toLowerCase().substring(4));\n} else if (mention.startsWith(\"kin\")) {\n    // Traitements pour \"kin\" (sans 's')\n    kins = [mention];\n}\n\nif (mention === \"all\" || mention === \"everyone\") {\n  kins = $json.kin;\n}\n\nreturn {\"json\": {\"kin\": kins}};"
      },
      "id": "3f5da1f3-f837-4fb3-837e-559308feeee7",
      "name": "kins1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        480
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ddb5f4d2-8cf0-4d94-a207-dddb9644fadb",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1520,
        480
      ]
    },
    {
      "parameters": {},
      "id": "2d6ea419-5a94-438f-8800-cd529ab233c3",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        800,
        480
      ],
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": "=LJq7WahDAN9n9qRH",
        "options": {}
      },
      "id": "4072f8f4-8102-4984-97ed-bc5c2d7a73f9",
      "name": "Find Mission",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1240,
        480
      ]
    },
    {
      "parameters": {
        "content": "## Find Mission\nhttps://kins.app.n8n.cloud/workflow/LJq7WahDAN9n9qRH",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "7180afda-7aeb-4d7b-9965-00534a194dc2",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1180,
        360
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-07T11:05:17.438Z",
      "updatedAt": "2024-01-07T11:05:17.438Z",
      "id": "g3tbWolPRHSWqvlU",
      "name": "QoL"
    },
    {
      "createdAt": "2024-01-23T15:32:23.987Z",
      "updatedAt": "2024-01-23T15:32:23.987Z",
      "id": "wt7Cl4Mt8mR1bDh4",
      "name": "admin"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-13T12:24:34.000Z",
  "versionId": "a26d5726-bfa4-4190-b161-62700199e5d2"
}