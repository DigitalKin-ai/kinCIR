{
  "active": true,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kindev": {
      "main": [
        [
          {
            "node": "nouveau message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "defaultEmbedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "defaultEmbedding": {
      "main": [
        [
          {
            "node": "Get ALL TODO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get ALL TODO": {
      "main": [
        [
          {
            "node": "Get ALL DOING",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tasks": {
      "main": [
        [
          {
            "node": "kindev",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get LAST DONE": {
      "main": [
        [
          {
            "node": "tasks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get ALL DOING": {
      "main": [
        [
          {
            "node": "Get LAST WAITING",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get LAST WAITING": {
      "main": [
        [
          {
            "node": "Get LAST DONE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-30T15:55:00.119Z",
  "id": "7gSW7ZaAHc61PVPS",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "QP - Questionneur de Production",
  "nodes": [
    {
      "parameters": {},
      "id": "84e5c2a5-5596-4757-8205-3b700282699f",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1180,
        620
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "if ($node[\"entree\"].json.chatInput != null) {\n  return {\"output\": $json.output};\n}\n\nreturn {\"json\":{\"response\": $json.output}};"
      },
      "id": "3a6f0103-04c0-4672-aa7d-5428e73568c2",
      "name": "nouveau message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        120,
        820
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nif (json.chatInput) {\n json.query = json.chatInput;\n}\n\nif (!json.query) {\n  json.query = \"Je souhaite un point général sur la situation de la production.\";\n}\n\n// Execution Status\nif (json.query.match(/kin\\w+/i)) {\n  json.kin = json.query.match(/kin\\w+/i)[0];\n} else {\n  json.kin = null;\n}\n\nreturn {\"json\": json};"
      },
      "id": "09dbf3a4-7258-49aa-a2d4-fd4f711e4a53",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -960,
        620
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_KEwBhc34Qsh3dcu2Gu8bgFne",
        "text": "=# Mission Globale\n\nAnalyser l'état de la production de l'équipe des Kins.\n\n# Demande Spécifique (Query)\n\n{{ $node[\"entree\"].json.query }}\n\n# Tâches actuellement dans TODO\n\n{{  JSON.stringify($node[\"tasks\"].json.todo).substring(0, 10000) }}{{  JSON.stringify($node[\"tasks\"].json.todo).length > 10000 ? \"[...]\" : \"\" }}\n\n# Tâches actuellement dans DOING\n\n{{  JSON.stringify($node[\"tasks\"].json.doing).substring(0, 10000) }}{{  JSON.stringify($node[\"tasks\"].json.doing).length > 10000 ? \"[...]\" : \"\" }}\n\n# Tâches actuellement dans WAITING\n\n{{  JSON.stringify($node[\"tasks\"].json.waiting).substring(0, 10000) }}{{  JSON.stringify($node[\"tasks\"].json.waiting).length > 10000 ? \"[...]\" : \"\" }}\n\n# Dernières Tâches dans DONE\n\n{{  JSON.stringify($node[\"tasks\"].json.done).substring(0, 10000) }}{{  JSON.stringify($node[\"tasks\"].json.done).length > 10000 ? \"[...]\" : \"\" }}\n\n# Instruction - Réponse au besoin informationnel\n\nA partir des informations disponibles, formule la meilleure réponse possible au besoin informationnel. Utilise des listes.",
        "options": {}
      },
      "id": "36e9e9c9-03de-44d3-bb55-427ee546b383",
      "name": "kindev",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        -260,
        820
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kinbase-71e4f70.svc.apw5-4e34-81fa.pinecone.io/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"todo\",\n  \"vector\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }},\n  \"includeMetadata\": true,\n  \"topK\": 100\n}",
        "options": {}
      },
      "id": "0d30ee64-721d-4f74-9ab8-8973bce31a6c",
      "name": "Get ALL TODO",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -520,
        620
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "=IJeSapyzv0Y9koZ9",
        "options": {}
      },
      "id": "4a2fee36-a8e6-4e07-b692-2e2c5f1999b4",
      "name": "defaultEmbedding",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -740,
        620
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function truncateStringsInJson(obj) {\n    // Vérifier si l'objet est null ou undefined\n    if (obj === null || obj === undefined) {\n        return obj;\n    }\n\n    // Parcourir les propriétés de l'objet\n    for (let key in obj) {\n        if (typeof obj[key] === 'string') {\n            // Tronquer les strings à 500 caractères et ajouter \"[...]\" si nécessaire\n            if (obj[key].length > 500) {\n                obj[key] = obj[key].substring(0, 500) + \"[...]\";\n            }\n        } else if (typeof obj[key] === 'object') {\n            // Appliquer la fonction de manière récursive pour les objets et tableaux\n            truncateStringsInJson(obj[key]);\n        }\n    }\n\n    return obj;\n}\n\nlet todo = $node[\"Get ALL TODO\"].json.matches;\nlet doing = $node[\"Get ALL DOING\"].json.matches;\nlet waiting = $node[\"Get LAST WAITING\"].json.matches;\nlet done = $node[\"Get LAST DONE\"].json.matches;\n\ntodo = truncateStringsInJson(todo);\ndoing = truncateStringsInJson(doing);\nwaiting = truncateStringsInJson(waiting);\ndone = truncateStringsInJson(done);\n\nreturn {\"json\": {\"todo\": todo, \"doing\": doing, \"waiting\": waiting, \"done\": done}};"
      },
      "id": "0047454d-d851-4b26-9708-4799ba705da0",
      "name": "tasks",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -520,
        820
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kinbase-71e4f70.svc.apw5-4e34-81fa.pinecone.io/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"done\",\n  \"vector\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }},\n  \"includeMetadata\": true,\n  \"topK\": 10\n}",
        "options": {}
      },
      "id": "9d4b33ac-1396-4d4c-964f-8cb5704fc299",
      "name": "Get LAST DONE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        120,
        620
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kinbase-71e4f70.svc.apw5-4e34-81fa.pinecone.io/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"doing\",\n  \"vector\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }},\n  \"includeMetadata\": true,\n  \"topK\": 100\n}",
        "options": {}
      },
      "id": "54116b5a-00fb-44ba-9a2f-0df31eed9631",
      "name": "Get ALL DOING",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -320,
        620
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kinbase-71e4f70.svc.apw5-4e34-81fa.pinecone.io/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"waiting\",\n  \"vector\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }},\n  \"includeMetadata\": true,\n  \"topK\": 10\n}",
        "options": {}
      },
      "id": "a906f44a-8172-4060-ae56-adb612c90dc8",
      "name": "Get LAST WAITING",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -100,
        620
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Bonjour ! Je suis KinDev. Que souhaitez-vous savoir sur la Production actuelle ?",
        "options": {
          "inputPlaceholder": "Je souhaite un point général sur la situation de la production.",
          "responseMode": "lastNode",
          "subtitle": "Le questionneur_de_production retourne une réponse issue de la base de données des tâches des Kins  Pour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant : - (optionnel) Le statut des tâches désirées (TODO/DOING/DONE) - (filtre optionnel) Le Kin désiré - Les informations que tu cherches, avec les  éléments de contexte. - L'intention d'usage : où tu en es dans les instructions et ce que tu souhaites faire. - Le format de réponse désiré.",
          "title": "Questionneur de  Production"
        }
      },
      "id": "66bd4d21-4146-405b-87e9-ad380fe8100f",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [
        -1180,
        420
      ],
      "webhookId": "897ced6f-149f-4da4-8a69-30216d828b78"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-12-17T10:07:55.424Z",
      "updatedAt": "2023-12-20T20:25:13.009Z",
      "id": "DzuSxffpFOEBRhld",
      "name": "outil"
    },
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-01-30T21:07:36.000Z",
  "versionId": "f8c9037a-b94e-427c-b122-37f935ba536d"
}