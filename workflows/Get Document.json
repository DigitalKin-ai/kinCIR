{
  "active": false,
  "connections": {
    "entree": {
      "main": [
        [
          {
            "node": "thread",
            "type": "main",
            "index": 0
          },
          {
            "node": "If sourceGoogleDriveId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to binary data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "If format pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If format pdf": {
      "main": [
        [
          {
            "node": "Convert to PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Convert to PDF": {
      "main": [
        [
          {
            "node": "Download PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download PDF": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "thread": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Convert thread to document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge binaries": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get existing document": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Merge binaries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If sourceGoogleDriveId": {
      "main": [
        [
          {
            "node": "Get existing document",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "thread1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PDF1": {
      "main": [
        [
          {
            "node": "Download PDF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "thread1": {
      "main": [
        [
          {
            "node": "document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "document1": {
      "main": [
        [
          {
            "node": "Convert to PDF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert thread to document": {
      "main": [
        [
          {
            "node": "Convert to binary data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-28T12:31:43.501Z",
  "id": "H3fxaSnxjZT6EGhc",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Get Document",
  "nodes": [
    {
      "parameters": {},
      "id": "810465a3-91d6-4d12-a678-921a80653553",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -620,
        500
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"Execute Workflow Trigger\"].json;\n\nreturn {\"json\": json};"
      },
      "id": "80059fdd-7f78-4e5c-a1d3-2e7ff3880b00",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        500
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "document",
        "destinationKey": "document",
        "options": {
          "fileName": "={{ $node[\"thread\"].binary.thread.fileName }}",
          "mimeType": "text/markdown",
          "useRawData": true
        }
      },
      "id": "50815c40-4410-4691-8a8c-30d2a040cb54",
      "name": "Convert to binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        320,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6834f38a-925c-420d-855f-15a8b07bdc5e",
              "leftValue": "={{ $node[\"entree\"].json.format }}",
              "rightValue": "pdf",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "003c68f9-b07e-4f36-a6ed-ca16ff675d0d",
      "name": "If format pdf",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        760,
        260
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://sync.api.cloudconvert.com/v2/jobs",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tasks\": {\n    \"import-my-file\": {\n      \"operation\": \"import/raw\",\n      \"filename\": {{ JSON.stringify($node[\"Convert to binary data\"].binary.document.fileName) }},\n      \"file\": {{ JSON.stringify($node[\"document\"].json.document) }}\n    },\n    \"convert-my-file\": {\n      \"operation\": \"convert\",\n      \"input\": \"import-my-file\",\n      \"output_format\": \"pdf\"\n    },\n    \"export-my-file\": {\n      \"operation\": \"export/url\",\n      \"input\": \"convert-my-file\"\n    }\n  }\n}",
        "options": {}
      },
      "id": "f62ebc3f-8dac-496b-8729-4f4b4d8b5530",
      "name": "Convert to PDF",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1000,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0dvNBbU8vvKoyenO",
          "name": "Cloud Convert Header AUTH"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "={{ $json.data.tasks[0].result.files[0].url }}",
        "options": {}
      },
      "id": "9dceb655-4e76-40e8-88f1-cf4f488f38f5",
      "name": "Download PDF",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1220,
        260
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "3a36baf8-1de8-44cb-9cc4-c383469dc691",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1440,
        480
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = {};\n\njson.document = $item(0).$node[\"Convert thread to document\"].json.document;\n\nreturn {\"json\": json, \"binary\": $binary};"
      },
      "id": "6e7fe0f3-611f-4ca2-aecb-e07ba0543805",
      "name": "response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1940,
        480
      ]
    },
    {
      "parameters": {
        "workflowId": "YWxRZmBa38HYCjnv",
        "options": {}
      },
      "id": "db8615ea-60d9-450c-9267-5668de7999ee",
      "name": "thread",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -160,
        500
      ]
    },
    {
      "parameters": {},
      "id": "f3c98e4c-ae2e-44e9-95fb-e24263ca5d1b",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1440,
        680
      ]
    },
    {
      "parameters": {
        "content": "## todo : fix format choice : re-choose format from Get Active Kins",
        "height": 331.2914642317718
      },
      "id": "dc1d0c98-5ebb-474c-b9e5-fad92683f6c7",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        120
      ]
    },
    {
      "parameters": {
        "jsCode": "let binaries = {}, binary_keys = [];\n\nfor([index, item] of items.entries()) {\n  if (item.binary) {\n        binaries[Object.keys(item.binary)[0]+`_${index}`] = item.binary[Object.keys(item.binary)[0]];\n    binary_keys.push(Object.keys(item.binary)[0] + `_${index}`);\n  }\n}\n\nreturn [{\n    json: {\n        binary_keys: binary_keys.join(',')\n    },\n    binary: binaries\n}];"
      },
      "id": "6232bd89-3074-452c-bf3f-3fd0ed93dc7f",
      "name": "Merge binaries",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        480
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.sourceGoogleDriveId }}",
          "mode": "id"
        },
        "options": {
          "binaryPropertyName": "source"
        }
      },
      "id": "6630018f-89ec-41f6-a6ce-3f3eec309d92",
      "name": "Get existing document",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1180,
        780
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Z5nSsC9JGaYw1Ng3",
          "name": "Google Drive DK via Nicolas"
        }
      }
    },
    {
      "parameters": {},
      "id": "e5c2daf1-0bf7-4d1a-910c-363f697b58be",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1440,
        880
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3b9d3f3b-af89-4188-ba23-093f7eccb8a8",
              "leftValue": "={{ $json.sourceGoogleDriveId != null }}",
              "rightValue": "=null",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "de9bb8f4-3ce7-49c6-9018-d9d5aabba8ee",
              "leftValue": "={{ $json.sourceGoogleDriveId != \"null\"  }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cbe5b0d5-8487-4ac5-bf96-08fbb0809cb5",
      "name": "If sourceGoogleDriveId",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        920,
        880
      ]
    },
    {
      "parameters": {},
      "id": "8644a313-b0c4-4966-b0a2-66be67c24d79",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        560,
        -180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://sync.api.cloudconvert.com/v2/jobs",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tasks\": {\n    \"import-my-file\": {\n      \"operation\": \"import/raw\",\n      \"filename\": \"doc.md\",\n      \"file\": {{ JSON.stringify($json.document) }}\n    },\n    \"convert-my-file\": {\n      \"operation\": \"convert\",\n      \"input\": \"import-my-file\",\n      \"output_format\": \"pdf\"\n    },\n    \"export-my-file\": {\n      \"operation\": \"export/url\",\n      \"input\": \"convert-my-file\"\n    }\n  }\n}",
        "options": {}
      },
      "id": "ff9a2ddf-4ba5-4506-9ea2-0d883c261701",
      "name": "Convert to PDF1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1260,
        -180
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "0dvNBbU8vvKoyenO",
          "name": "Cloud Convert Header AUTH"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "={{ $json.data.tasks[0].result.files[0].url }}",
        "options": {}
      },
      "id": "b0febc73-80be-4cd4-91f7-b7fce0bc3ef0",
      "name": "Download PDF1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1480,
        -180
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "thread",
              "stringValue": "=[CONTENU]\n**Étude :** \"Benefits of Homeopathic Complementary Treatment in Patients With Breast Cancer: A Retrospective Cohort Study Based on the French Nationwide Healthcare Database\".\n\n**Objectif Principal :** Évaluer les **bénéfices du traitement homéopathique complémentaire** sur la qualité de vie des patientes atteintes de cancer du sein non métastatique, dispensé comme thérapie complémentaire post-chirurgicale.\n\n**Objectifs Secondaires :**\n- Description des profils des patientes traitées avec ou sans homéopathie.\n- Impact de l'homéopathie sur les coûts.\n- Identification des facteurs prédictifs de l'utilisation de l'homéopathie.**Design de l'Étude :** Cohorte rétrospective basée sur la base de données nationale de santé française (SNDS).\n\n**Population :** Femmes ayant subi une mastectomie pour un cancer du sein non métastatique diagnostiqué entre 2012 et 2013.\n\n**Analyse :** Utilisation de l’homéopathie et son impact sur la consommation de médicaments pour pallier les effets secondaires des traitements oncologiques.**Principaux Résultats :**\n- Diminution significative de la consommation de médicaments associés aux effets secondaires chez les patientes traitées avec ≥ 3 dispensations d'homéopathie (RR = 0.88, CI 95% = 0.87-0.89), en particulier pour les immunostimulants, corticostéroïdes, et antidiarrhéiques.\n- Réduction du pourcentage de décès chez les patientes recevant de l'homéopathie comparativement à celles n'en recevant pas (6 % contre 10 %).### Implications Pratiques et Limitations\n\n**Implications Pratiques :** \nL'étude montre une tendance croissante à l'utilisation de traitements homéopathiques parmi les patientes atteintes de cancer du sein non métastatique. Cette utilisation est associée à une réduction de la dispensation de médicaments pour les effets secondaires et à des proportions plus faibles de décès dans le groupe homéopathie. Cela suggère que l'homéopathie pourrait aider les patientes à mieux tolérer les effets adverses des traitements conventionnels du cancer.\n\n**Limitations :** \n- L'étude utilise des biais possibles liés aux études rétrospectives et aux analyses de bases de données.\n- La dépendance de la dispensation de médicaments comme proxy pour la qualité de vie liée à la santé peut ne pas refléter pleinement l'impact réel de l'homéopathie.\n\n### Conclusion\n\nBien que l'étude présente des résultats encourageants sur l'utilisation de l'homéopathie dans le traitement complémentaire du cancer du sein, elle souligne le besoin d'une approche plus rigoureuse pour valider ces observations et explorer les mécanismes par lesquels l'homéopathie pourrait produire ses effets bénéfiques.### Étude sur l'Homéopathie et le Cancer du Sein\n\n**Objectif :** Évaluer l'impact des traitements homéopathiques sur les patientes atteintes de cancer du sein non métastatique.\n\n**Méthodologie :** Étude de cohorte rétrospective analysant l'utilisation de l'homéopathie et son effet sur la consommation de médicaments liés aux effets secondaires du traitement du cancer.\n\n**Principaux Résultats :** Réduction significative de la consommation de certains médicaments et du pourcentage de décès parmi les patientes recevant de l'homéopathie.\n\n**Implications :** Les résultats suggèrent un bénéfice potentiel de l'homéopathie dans la tolérance aux effets adverses des traitements conventionnels, bien que d'autres études soient nécessaires pour confirmer ces effets.\n\n**Message :** Cette étude apporte un nouvel éclairage sur l'utilisation de l'homéopathie dans le cadre du traitement des effets secondaires liés au cancer, ouvrant la voie à de futures recherches pour approfondir notre compréhension de ses avantages potentiels.## Signature\n\nÉcrit par KinLCA v1.0\n\nEn concluant cette évaluation, je salue l'initiative de cette étude pour explorer des approches complémentaires dans la gestion des effets secondaires liés au traitement du cancer du sein. Je reste convaincu de l'importance de poursuivre la recherche dans ce domaine, en espérant que de futures études apporteront des preuves encore plus solides et aideront à guider les décisions cliniques.\n[/CONTENU]"
            }
          ]
        },
        "options": {}
      },
      "id": "34a6bdb5-f934-4e8f-b226-4c599a9125ae",
      "name": "thread1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        780,
        -180
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let thread = $json.thread;\n\nfunction extractDynamicContent(thread) {\n    let extractedContent = \"\";\n    const contentPattern = /\\[CONTENU[\\s\\S]*?][\\s\\S]*?\\[\\/CONTENU[\\s\\S]*?\\]/gi;\n\n    let matches;\n    while ((matches = contentPattern.exec(thread)) !== null) {\n        // Ajoute chaque contenu trouvé au texte final\n        extractedContent += matches[0] + \"\\n\\n\";\n    }\n\n    return extractedContent.trim();\n}\n\n// Fonction pour retirer les occurrences\nfunction removeOccurrences(document, pattern) {\n    return document.replace(pattern, '');\n}\n\n// Garder le CONTENU\nlet document = extractDynamicContent(thread);\n\n// Expression régulière pour identifier les occurrences à retirer\nconst pattern = /\\n{0,2}\\[\\/?CONTENU.*?\\]\\n{0,2}/gi;\n\n// Application de la fonction au document\ndocument = removeOccurrences(document, pattern);\n\nif (document == \"\") {\n  document = \"[EXCEPTION - Pas de contenu]\\n\\nPas de baslises DOCUMENT trouvées dans le thread !\\n\\n[/EXCEPTION - Pas de contenu]\\n\\n---\\n\\n\\n[INFORMATIF - Thread]\\n\\n\" + $json.thread + \"[/INFORMATIF - Pas de contenu]\\n\\n\";\n}\n\nreturn {\"json\":{\"document\":document}};"
      },
      "id": "3149453b-3510-4fef-940b-b1651a7b6434",
      "name": "document1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        -180
      ]
    },
    {
      "parameters": {
        "content": "## Conversion Manuelle",
        "height": 295.608922766434,
        "width": 1183.4918669068904
      },
      "id": "d88e9739-e962-443b-bf5f-d637f0a31162",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        500,
        -273.83526033483116
      ]
    },
    {
      "parameters": {
        "workflowId": "xyhDvFnHl8aCE9hV",
        "options": {}
      },
      "id": "f66c7237-bd09-4858-97cd-5050023a85da",
      "name": "Convert thread to document",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        80,
        500
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Nico reçoit un email": {
      "lastTimeChecked": 1706088137,
      "possibleDuplicates": [
        "18d3ac70312f4667"
      ]
    },
    "node:Seb reçoit un email": {
      "lastTimeChecked": 1706023258
    },
    "node:Kin Mail": {
      "lastTimeChecked": 1706305011,
      "possibleDuplicates": [
        "18d47b488e5cab95"
      ]
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    },
    {
      "createdAt": "2023-12-17T10:32:35.457Z",
      "updatedAt": "2023-12-17T10:32:35.457Z",
      "id": "y4SS6pvxfLMwCsGn",
      "name": "service"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-07T18:38:03.000Z",
  "versionId": "cd1df4bc-0870-4517-8489-b49d40ddfc1c"
}