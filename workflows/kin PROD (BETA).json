{
  "active": false,
  "connections": {
    "Questionneur de code": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de logs": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de document": {
      "ai_tool": [
        [
          {
            "node": "kinlca",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If sync": {
      "main": [
        [
          {
            "node": "Kin",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Upsert todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincir": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinlca": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinrsi": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsota": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincirbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kindev": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinontologie": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsotabeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmail": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXCEPTION - Kin Non-Actif": {
      "main": [
        [
          {
            "node": "kinmatcheur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "kinmail",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recherche Google Scholar": {
      "ai_tool": [
        [
          {
            "node": "kinchercheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de la base d'Ã©tudes": {
      "ai_tool": [
        [
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincir",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincirbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsota",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to binary data": {
      "main": [
        [
          {
            "node": "Update Thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Continuer boucle": {
      "main": [
        [
          {
            "node": "todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "todo": {
      "main": [
        [
          {
            "node": "If sync",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MISSION ACCOMPLIE": {
      "main": [
        [
          {
            "node": "If kinmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If sync3": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "mission kinmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kins": {
      "main": [
        [
          {
            "node": "assistantId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "assistantId": {
      "main": [
        [
          {
            "node": "Get Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Thread": {
      "main": [
        [
          {
            "node": "entree document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Assistant": {
      "main": [
        [
          {
            "node": "Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "thread": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "kincir",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinlca",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinrsi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsota",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincirbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kindev",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinontologie",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsotabeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmatcheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "EXCEPTION - Kin Non-Actif",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXCEPTION": {
      "main": [
        [
          {
            "node": "mission kinmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Switch Commands",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send  Notifications": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If kinmatcheur": {
      "main": [
        [
          {
            "node": "document nouvelleMission",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If sync3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If kinmail": {
      "main": [
        [
          {
            "node": "entreeSendMail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If kinmatcheur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entreeSendMail": {
      "main": [
        [
          {
            "node": "Send Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission kinmail": {
      "main": [
        [
          {
            "node": "nouvelleMission kinmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DEMANDE": {
      "main": [
        [
          {
            "node": "If kinmatcheur1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If kinmatcheur1": {
      "main": [
        [
          {
            "node": "document nouvelleMission",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "todo kinmatcheur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Commands": {
      "main": [
        [
          {
            "node": "EXCEPTION",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DEMANDE",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "MISSION ACCOMPLIE",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Continuer boucle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "todo kinmatcheur": {
      "main": [
        [
          {
            "node": "Upsert todo kinmatcheur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sortie": {
      "main": [
        [
          {
            "node": "Send  Notifications",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Producteur": {
      "main": [
        [
          {
            "node": "Convert to binary data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree document": {
      "main": [
        [
          {
            "node": "document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "todo nouvelleMission": {
      "main": [
        [
          {
            "node": "Lancement de Mission KinMatcheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "todo kinmatcheur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "document": {
      "main": [
        [
          {
            "node": "kins",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manager": {
      "main": [
        [
          {
            "node": "sortie",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input": {
      "main": [
        [
          {
            "node": "thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "Prompt Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmatcheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Producteur": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nouvelleMission kinmail": {
      "main": [
        [
          {
            "node": "Lancement de Mission kinMail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Kin Prompt": {
      "ai_tool": [
        [
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "document nouvelleMission": {
      "main": [
        [
          {
            "node": "If exception in document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If exception in document": {
      "main": [
        [
          {
            "node": "todo kinmatcheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "todo nouvelleMission",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-17T12:47:07.331Z",
  "id": "RCzPi7XT4ijau6eF",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "kin PROD (BETA)",
  "nodes": [
    {
      "parameters": {
        "name": "questionneur_de_code",
        "description": "Le Questionneur de code retourne une rÃ©ponse issue de la codebase de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "kLKx8F1dt8gfkjry",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            }
          ]
        }
      },
      "id": "70df518c-8c09-41d0-b6ab-4e39606bc96c",
      "name": "Questionneur de code",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2040,
        240
      ],
      "disabled": true
    },
    {
      "parameters": {
        "name": "questionneur_de_logs",
        "description": "Le Questionneur de logs retourne une rÃ©ponse issue des logs de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "kLKx8F1dt8gfkjry",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            }
          ]
        }
      },
      "id": "d367db46-eddf-49ce-bc6a-0a4d4a0b10f5",
      "name": "Questionneur de logs",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2220,
        240
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\"json\": {\"response\": $node[\"sortie\"].json.output}};"
      },
      "id": "79b4efcf-2843-4458-a5a3-f8e5687a2666",
      "name": "response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4740,
        1320
      ]
    },
    {
      "parameters": {
        "workflowId": "=RCzPi7XT4ijau6eF",
        "options": {}
      },
      "id": "4c7c9716-3800-4b52-bf14-af50787a6e9a",
      "name": "Kin",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4400,
        1620
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_document",
        "description": "Le Questionneur d'Ã©tude retourne une rÃ©ponse issue d'un document spÃ©cifique Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e en Anglais, contenant :\n- La citation de l'Ã©tude,\n- Les informations que tu cherches,\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire,\n- Le format de rÃ©ponse dÃ©sirÃ©.\n",
        "workflowId": "anybPoo9G98Nx3qW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "documentGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.sourceGoogleDriveId }}"
            }
          ]
        }
      },
      "id": "0f130d0e-3a84-4baa-9a59-1e35c62f9dce",
      "name": "Questionneur de document",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1820,
        -780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "1a743e65-4e49-4878-bfc1-a41bb6fae343",
              "leftValue": "={{ $node[\"entree\"].json.sync }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "d5b1ee8d-8af1-499e-a541-dfb498b9ac7d",
      "name": "If sync",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4180,
        1640
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_bU27N3NS5XZ0lH4AFOuN8kb7",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "705274a2-abf4-4031-a7f1-58fc18d7f395",
      "name": "kincir",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        -1040
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_581bbg7Bmja1nCBKeiGg9Rgu",
        "text": "={{ $json.promptProducteur }}",
        "nativeTools": [
          "code_interpreter"
        ],
        "options": {}
      },
      "id": "f9e05a8a-d972-4464-92ed-25b4ec2d142d",
      "name": "kinlca",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        -800
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_WKY0lRXB0rrJTFIm3HYv8jlE",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a441e8e3-0802-4dc2-af20-6bd09e04ce0d",
      "name": "kinrsi",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        -560
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "5d7bae62-2aaf-4b09-82fb-309e7858ee5a",
      "name": "kinchercheurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        1180
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_7abHKvQqtVij29X6ybyEvAbZ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a4c0ce08-9cd7-4ded-bdbe-2d682c579eb6",
      "name": "kinsota",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        -320
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_TwVBZeoLx80udowj5MIoG6Pq",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a5006fdd-836e-4162-8aba-f641634ffc78",
      "name": "kincirbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        -80
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_KEwBhc34Qsh3dcu2Gu8bgFne",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "abb1b363-7706-4b86-a21b-83d3e1c9819d",
      "name": "kindev",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        160
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_3pQx4lfP0EN6Jstj8kozdBtC",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a353ab78-cdd5-4eaa-ab35-6807844c5773",
      "name": "kinontologie",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        400
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "3e041b0a-99e2-476c-b22f-d0ac74d6c94c",
      "name": "kinchercheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        640
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_MHJDvt7FT6gcWBFdJsZqJ52C",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "d714c7bc-4ca8-4ffd-8e69-ed576ab4e76d",
      "name": "kinsotabeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        920
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kins-71e4f70.svc.us-east1-gcp.pinecone.io/vectors/upsert",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"namespace\": \"todo\",\n\"vectors\": {\n\"id\": \"{{ $node[\"todo\"].json.kin }}-{{ $node[\"todo\"].json.mailId }}\",\n\"metadata\": {{ JSON.stringify($node[\"todo\"].json) }},\n\"values\": \n[\n-0.008432496,\n-0.0070715337,\n0.012426477,\n-0.012146077,\n-0.0033117894,\n0.00042059895,\n-0.03356585,\n0.0024329768,\n0.0025270132,\n-0.031377368,\n0.018807271,\n-0.0015857948,\n-0.0025577887,\n0.01178361,\n0.011188616,\n-0.0024500745,\n-0.0005684925,\n-0.010949251,\n0.015962243,\n-0.018013947,\n0.004349609,\n0.021597587,\n-0.013527557,\n0.017029129,\n-0.005279714,\n-0.0041239215,\n0.018561067,\n-0.02921624,\n0.021419771,\n0.007310899,\n0.042784832,\n-0.019286001,\n0.0025902742,\n-0.0172343,\n-0.007858019,\n-0.0036622884,\n-0.004968539,\n-0.0027048276,\n-0.0010053341,\n-0.010853505,\n0.007899053,\n0.021269314,\n0.011407465,\n-0.017740386,\n-0.010552589,\n0.023170557,\n0.011968263,\n0.0031784289,\n-0.023143202,\n-0.012289696,\n0.006042263,\n0.0019679244,\n-0.01116126,\n-0.03865407,\n0.0036417716,\n0.017877165,\n0.0068458463,\n0.025960872,\n-0.008692378,\n-0.009314728,\n-0.018848306,\n0.009034329,\n-0.020544378,\n0.014826968,\n-0.0020705096,\n-0.004168375,\n-0.01957324,\n0.013110378,\n-0.007297221,\n0.0007428872,\n0.033182863,\n0.014129389,\n0.03419504,\n-0.0026278887,\n0.03107645,\n-0.012857334,\n-0.0006898849,\n-0.0094515085,\n0.021611264,\n0.0042641214,\n0.014156746,\n-0.02349883,\n-0.03479687,\n0.025714668,\n0.012959919,\n0.03728627,\n0.023170557,\n0.0017678834,\n-0.009697713,\n0.00010151652,\n-0.005187387,\n0.02935302,\n0.039994515,\n0.02907946,\n0.008630827,\n0.030283125,\n-0.0066782907,\n0.025263295,\n-0.0033203382,\n-0.022514014,\n-0.012392282,\n0.006941593,\n-0.015223631,\n-0.0055156597,\n-0.049022008,\n-0.010593623,\n0.038271084,\n-0.009253177,\n0.023676643,\n-0.017562572,\n-0.016263159,\n0.022650793,\n-0.00029771053,\n-0.00165333,\n-0.0039050733,\n-0.00031010626,\n0.0022449042,\n-0.017671995,\n-0.007228831,\n-0.02742442,\n0.013698532,\n0.02590616,\n0.02604294,\n-0.02191218,\n0.0097729415,\n0.0025116254,\n0.008035834,\n-0.0017815614,\n0.00027099566,\n-0.0065449304,\n0.024565715,\n0.005772122,\n0.0058336733,\n0.0023833942,\n-0.0154835135,\n0.0035528643,\n-0.01887566,\n-0.00006112363,\n-0.013684854,\n-0.021474484,\n0.00889071,\n0.025386397,\n-0.02211735,\n-0.0044487743,\n-0.0028894807,\n0.01274791,\n0.020216106,\n0.0001625333,\n-0.007276704,\n0.013048827,\n0.000475311,\n-0.01130488,\n0.021132533,\n-0.0006787715,\n-0.0021765141,\n-0.009054846,\n0.0152920205,\n0.016618788,\n0.015442479,\n-0.013055665,\n0.017453147,\n-0.0039803023,\n0.0083435895,\n0.0053173285,\n0.009649839,\n0.03534399,\n0.02479824,\n0.007269865,\n-0.005967034,\n-0.00861031,\n-0.0022192579,\n0.025112836,\n-0.03578169,\n0.026822587,\n0.00544385,\n0.006001229,\n0.0028723832,\n0.010894539,\n-0.032772522,\n-0.0017524956,\n-0.010094375,\n0.0040692096,\n0.0159896,\n0.025687313,\n-0.0036999031,\n-0.0048215003,\n0.029024748,\n-0.025167547,\n0.010361097,\n0.0037033225,\n0.023088489,\n0.021187246,\n0.030064277,\n-0.008555599,\n-0.6574201,\n-0.010374774,\n-0.008863354,\n0.013493362,\n0.019874156,\n0.02549582,\n-0.0020072488,\n0.0121802725,\n-0.0077485954,\n-0.0071057286,\n-0.015305699,\n0.024428936,\n0.022541368,\n-0.0134591665,\n-0.013035148,\n-0.0075981375,\n0.006216658,\n-0.018178081,\n0.018246472,\n0.0083435895,\n-0.020653803,\n0.013199285,\n0.0007176683,\n-0.0057037324,\n0.0013814796,\n-0.008097385,\n0.006069619,\n-0.0028775125,\n0.002164546,\n0.01564765,\n-0.0015524547,\n0.018520033,\n0.0088565145,\n0.01122965,\n0.05318012,\n0.0066030617,\n-0.02501709,\n0.030009566,\n0.018793592,\n0.032280117,\n-0.008090546,\n0.0047838856,\n0.012262341,\n0.007406645,\n0.008172614,\n0.009102719,\n0.035426058,\n-0.010456842,\n0.0064389254,\n0.01122965,\n0.019299679,\n-0.03597318,\n-0.0029989048,\n0.009136914,\n-0.004486389,\n-0.004705237,\n0.018779915,\n-0.015387767,\n-0.008439335,\n0.007905893,\n-0.024784563,\n-0.0034981524,\n-0.029052105,\n-0.028970037,\n-0.020968396,\n-0.008323072,\n-0.012843656,\n-0.02046231,\n0.01467651,\n-0.03258103,\n-0.000774945,\n0.0013062505,\n-0.02998221,\n-0.000747589,\n0.0301737,\n0.0039939806,\n0.034769513,\n-0.0008993295,\n0.004099985,\n0.020216106,\n0.021761721,\n0.0038742977,\n-0.013055665,\n0.008637667,\n0.02459307,\n0.0042230873,\n-0.001901244,\n-0.02431951,\n0.01674189,\n-0.0020328949,\n0.021173567,\n0.0077144005,\n-0.0037170006,\n0.004424838,\n0.02157023,\n-0.0015447608,\n-0.0077144005,\n-0.011017641,\n0.033593204,\n-0.022418266,\n-0.0081315795,\n0.009834493,\n0.023389407,\n0.014416628,\n0.02397756,\n0.0024859793,\n-0.00861031,\n0.0022722601,\n0.025331683,\n-0.021693332,\n-0.005221582,\n-0.019203933,\n-0.011940907,\n-0.0007843487,\n0.004954861,\n-0.03107645,\n0.008993295,\n0.012064009,\n0.013486523,\n-0.0027578298,\n0.008329911,\n-0.003528928,\n0.010525232,\n-0.014334559,\n-0.004777047,\n0.02624811,\n-0.030611398,\n-0.021925857,\n0.006808232,\n-0.015729718,\n-0.001853371,\n-0.030638754,\n0.02322527,\n-0.0068184906,\n0.00633976,\n-0.010737242,\n-0.0055566938,\n0.011106548,\n0.027711658,\n-0.0014874841,\n-0.019600596,\n-0.0041820533,\n0.004017917,\n-0.017603606,\n-0.005796059,\n-0.036629725,\n-0.0052933916,\n0.0018362735,\n-0.0011421143,\n0.0068116514,\n-0.0020636704,\n-0.022924352,\n-0.027246606,\n0.006380794,\n0.002453494,\n-0.0014866292,\n0.02479824,\n-0.010990285,\n-0.035644908,\n-0.009287372,\n0.009971273,\n0.004346189,\n-0.014690188,\n0.005245519,\n-0.0048215003,\n-0.013766922,\n0.002610791,\n0.012959919,\n-0.008302555,\n-0.03665708,\n0.0024723012,\n-0.003080973,\n-0.02626179,\n0.013937897,\n0.014498696,\n-0.004954861,\n0.002956161,\n-0.017548893,\n0.014895358,\n0.02136506,\n-0.00096857443,\n0.010039663,\n-0.0052694553,\n0.014430306,\n0.004127341,\n-0.008377784,\n0.015223631,\n0.032088622,\n-0.016167413,\n0.016810281,\n0.009472026,\n0.0053583626,\n0.011031319,\n0.00008185437,\n0.008528243,\n0.011749415,\n-0.0077075614,\n-0.0077075614,\n0.013999448,\n0.010422647,\n0.034359172,\n-0.007987961,\n0.0140336435,\n-0.018848306,\n0.0079948,\n-0.025988229,\n-0.008801803,\n-0.008288877,\n0.012146077,\n0.0053925575,\n-0.0006492783,\n-0.02300642,\n-0.014854324,\n0.015141563,\n0.007858019,\n0.03326493,\n0.022568725,\n-0.0074203233,\n0.007263026,\n0.013725888,\n0.007338255,\n-0.005775542,\n0.016112702,\n-0.020243462,\n-0.016263159,\n-0.010798793,\n0.013862669,\n0.007892215,\n0.008555599,\n-0.0026193399,\n-0.0037682932,\n-0.019190256,\n0.0009591708,\n0.006264531,\n0.017261654,\n-0.0005740492,\n0.019381747,\n-0.02281493,\n0.017056486,\n0.0026706324,\n-0.00668513,\n0.019190256,\n0.013124055,\n-0.007358772,\n0.019162899,\n-0.004099985,\n0.041006688,\n0.035097785,\n-0.010361097,\n0.0019901511,\n-0.017179586,\n-0.014430306,\n-0.013165089,\n-0.015346733,\n-0.013069344,\n-0.030556686,\n0.0037170006,\n0.003108329,\n0.014703866,\n0.011400625,\n0.027821083,\n0.008747091,\n0.022076316,\n-0.0013113797,\n0.017384756,\n-0.014785934,\n-0.0068800417,\n-0.014102033,\n-0.008842837,\n-0.0041512777,\n-0.019586917,\n-0.012276018,\n0.0014866292,\n-0.023266304,\n0.0076870443,\n0.0066611934,\n-0.009082202,\n-0.0052352604,\n0.016564077,\n0.010053341,\n-0.009636162,\n-0.009636162,\n0.003727259,\n0.02466146,\n-0.008589793,\n0.0018516612,\n0.009102719,\n-0.0030501974,\n-0.010019146,\n0.008001639,\n0.008733412,\n0.017808776,\n0.010203799,\n0.0015327926,\n-0.027369708,\n-0.018848306,\n0.01563397,\n-0.025577888,\n-0.0041854726,\n-0.0058063176,\n0.01102448,\n0.010053341,\n-0.009143753,\n-0.012529062,\n0.011598957,\n0.025687313,\n0.0032194627,\n-0.015907532,\n0.016769247,\n0.0062132385,\n-0.015565581,\n0.009177948,\n0.026576383,\n-0.033866767,\n0.0016140058,\n-0.009335245,\n-0.011386948,\n-0.017480504,\n0.00365203,\n0.016112702,\n-0.023266304,\n-0.02626179,\n-0.009157431,\n0.016632466,\n-0.0015045817,\n0.0040965653,\n0.0140336435,\n0.02749281,\n-0.005071124,\n-0.016810281,\n-0.022650793,\n-0.026152365,\n0.006257692,\n-0.004038434,\n0.0012062299,\n0.016181093,\n0.008931744,\n0.00006481028,\n0.03728627,\n-0.0058473516,\n-0.009813976,\n-0.005327587,\n0.02211735,\n-0.0028296395,\n-0.0029527415,\n-0.012228145,\n0.024415256,\n0.0149500705,\n0.025304329,\n-0.0002701408,\n0.00723567,\n0.008213648,\n0.008111062,\n-0.0044692913,\n-0.013787439,\n0.0038708784,\n-0.0030484877,\n0.009143753,\n-0.021665975,\n0.01171522,\n0.004759949,\n0.030994382,\n0.040541638,\n0.014498696,\n0.010326901,\n0.021871146,\n-0.008993295,\n0.0063431794,\n0.021296669,\n-0.026535349,\n-0.025536854,\n0.02853234,\n-0.026234433,\n-0.0077212397,\n0.019655308,\n0.008596633,\n-0.025167547,\n-0.03178771,\n-0.0026706324,\n0.012535901,\n-0.021132533,\n0.00017856222,\n0.005464367,\n-0.021296669,\n-0.0063705356,\n-0.03638352,\n0.021187246,\n-0.0064389254,\n0.007180958,\n-0.016358906,\n0.00014041338,\n-0.019381747,\n-0.033620562,\n0.002376555,\n0.007816985,\n0.0012566677,\n-0.03238954,\n0.015510869,\n0.016632466,\n-0.005864449,\n0.0023611675,\n0.0033083698,\n0.008282038,\n0.02515387,\n-0.024647783,\n-0.027752692,\n-0.0016003278,\n-0.036711793,\n-0.0009010392,\n0.015743395,\n0.020161394,\n-0.0105389105,\n-0.007139924,\n0.019860478,\n0.007604976,\n0.006257692,\n0.01826015,\n-0.026275467,\n0.019272324,\n-0.006449184,\n-0.0052147433,\n0.01605799,\n-0.009643001,\n0.0009839622,\n-0.0021970312,\n-0.04913143,\n0.007324577,\n-0.012529062,\n-0.010620979,\n0.003610996,\n0.00034878938,\n0.02266447,\n0.0044761305,\n0.0034536987,\n0.033182863,\n-0.018766237,\n0.0038127466,\n0.008774446,\n-0.023950204,\n0.018178081,\n-0.014498696,\n0.024032272,\n0.0022996163,\n-0.019901512,\n0.01006018,\n-0.0198468,\n0.011899873,\n0.016577754,\n-0.0030416485,\n0.004168375,\n0.02466146,\n-0.030365193,\n0.013937897,\n0.01612638,\n-0.0005159176,\n0.0041581164,\n-0.001199391,\n-0.011345914,\n-0.021748044,\n0.014703866,\n-0.008829159,\n0.0312953,\n-0.010703047,\n-0.01687867,\n-0.008295716,\n-0.0057413466,\n-0.027137183,\n0.00095489644,\n-0.020653803,\n-0.039502107,\n-0.011708381,\n0.0029236758,\n-0.005823415,\n0.030693466,\n0.019532206,\n0.012494867,\n-0.0066235787,\n-0.0023321016,\n0.00168838,\n-0.017589927,\n-0.023033777,\n-0.024702495,\n0.0030467778,\n0.03383941,\n0.025892483,\n-0.00028766575,\n0.022719182,\n-0.021118855,\n0.01130488,\n0.014156746,\n-0.016181093,\n-0.0032844334,\n-0.014102033,\n-0.026097653,\n0.0075502642,\n-0.00051933713,\n-0.002562918,\n-0.022896998,\n-0.025536854,\n-0.005775542,\n-0.0009959305,\n-0.0045240032,\n-0.014389272,\n-0.014430306,\n-0.0068048127,\n0.01639994,\n0.0013147992,\n-0.005023251,\n-0.013076182,\n0.018478999,\n0.0049377633,\n0.009868688,\n0.04010394,\n-0.007946927,\n0.022131028,\n-0.015250986,\n0.03225276,\n0.0010549169,\n0.01888934,\n-0.012604291,\n0.0049172463,\n-0.037505116,\n-0.018096013,\n0.019299679,\n0.004253863,\n0.005286553,\n-0.005105319,\n-0.005149773,\n-0.02025714,\n0.013657498,\n0.0038777173,\n-0.0059020636,\n-0.0076528494,\n-0.009041168,\n-0.011222811,\n-0.008842837,\n0.0048283394,\n-0.027109826,\n0.020804262,\n0.011838322,\n-0.015551903,\n0.02680891,\n-0.017562572,\n0.0028997392,\n-0.0009489123,\n-0.019381747,\n0.04844753,\n0.02674052,\n0.039310616,\n0.015333055,\n0.0069894656,\n-0.04314046,\n-0.01563397,\n-0.010292706,\n0.0010361096,\n0.021761721,\n0.013589108,\n-0.0014703866,\n-0.0021337704,\n0.015333055,\n0.0026689228,\n-0.028997391,\n-0.030310482,\n0.010648334,\n0.020106683,\n0.01583914,\n-0.010737242,\n0.010169604,\n-0.006986046,\n0.040131297,\n-0.02803993,\n-0.0013276223,\n-0.01157844,\n-0.024086984,\n-0.0089591,\n-0.0033853087,\n0.0010412389,\n0.011585278,\n0.015716039,\n-0.017330045,\n0.0031134582,\n-0.011756254,\n-0.020010935,\n0.02025714,\n0.004106824,\n0.022979066,\n0.005002734,\n-0.009766103,\n0.0048898906,\n0.0049856366,\n-0.005132675,\n0.0026381472,\n0.027684303,\n0.030283125,\n-0.011359591,\n-0.0069894656,\n0.01233073,\n-0.021406094,\n0.023512509,\n0.0052694553,\n-0.0025509498,\n0.0005334426,\n-0.03424975,\n-0.010901378,\n0.011147582,\n-0.0038195858,\n0.0005394267,\n-0.009540415,\n-0.00475653,\n-0.029790716,\n-0.013165089,\n-0.011051836,\n0.003935849,\n-0.013185606,\n-0.021515518,\n-0.018861983,\n-0.01846532,\n0.010641496,\n0.0055498546,\n-0.000100341065,\n0.026918333,\n0.017507859,\n-0.023485152,\n0.026932012,\n-0.002226097,\n0.0049309246,\n-0.015223631,\n0.0060730386,\n-0.0006817636,\n-0.02894268,\n0.022363555,\n-0.022869641,\n-0.051648185,\n0.008104224,\n0.005050607,\n-0.009752424,\n-0.023704,\n-0.02515387,\n0.035508126,\n0.012276018,\n0.0055703716,\n-0.00565244,\n-0.032006554,\n-0.0023936527,\n-0.011448499,\n-0.00078819564,\n0.013725888,\n0.004736013,\n-0.0077144005,\n0.009608805,\n-0.0033511138,\n0.007864859,\n-0.033401713,\n0.0057447664,\n-0.009663518,\n0.003658869,\n-0.030091632,\n0.0048044026,\n-0.010251672,\n-0.0071262456,\n-0.00034173665,\n-0.008056351,\n-0.008083707,\n0.013431811,\n-0.02066748,\n-0.008056351,\n-0.014211457,\n-0.004831759,\n-0.013247157,\n-0.011393786,\n-0.023731356,\n0.0061174924,\n-0.038900275,\n-0.03843522,\n-0.0092600165,\n0.020653803,\n0.029763361,\n-0.021105178,\n-0.02136506,\n0.0039495267,\n-0.043660223,\n-0.015004783,\n0.005621664,\n0.0041102436,\n0.015675005,\n0.0057652835,\n0.011339075,\n0.020831617,\n-0.0032433993,\n0.01778142,\n-0.008405141,\n0.017808776,\n0.017754063,\n-0.022172062,\n0.016523043,\n-0.018588422,\n-0.026371213,\n-0.038353153,\n0.026932012,\n0.016714534,\n0.0011874227,\n0.019149221,\n-0.02535904,\n-0.013493362,\n-0.024360545,\n0.013903703,\n-0.04201886,\n0.013062504,\n-0.011339075,\n-0.013883186,\n-0.0016721373,\n0.017453147,\n-0.0026022424,\n-0.008384624,\n0.01694706,\n0.013910541,\n-0.023033777,\n0.014211457,\n-0.0224593,\n-0.0034092453,\n-0.0061858823,\n-0.03479687,\n0.007899053,\n-0.017808776,\n-0.033620562,\n0.017589927,\n-0.009478864,\n0.011106548,\n-0.003672547,\n0.0071672797,\n-0.030118989,\n0.0005590889,\n0.00599439,\n-0.016782925,\n0.0030758437,\n-0.013110378,\n0.022158384,\n-0.02583777,\n0.009998629,\n-0.01447134,\n-0.011380108,\n-0.03996716,\n0.0045650373,\n-0.0077691125,\n-0.027041435,\n-0.02659006,\n-0.0068184906,\n0.009157431,\n0.0039734636,\n-0.033647917,\n0.004168375,\n-0.01687867,\n-0.00031160229,\n-0.020708514,\n-0.022226775,\n0.014909036,\n-0.030775534,\n-0.025646279,\n0.0054130745,\n-0.009116397,\n0.24182731,\n-0.009410474,\n0.013124055,\n0.014690188,\n-0.010525232,\n0.037231557,\n0.0044419356,\n-0.004927505,\n0.0010711595,\n0.030009566,\n-0.00045650374,\n-0.025400074,\n-0.012617969,\n-0.003956366,\n-0.0067569395,\n-0.015661327,\n-0.0172343,\n-0.03219805,\n-0.039939802,\n-0.03315551,\n0.014580764,\n0.010121731,\n-0.011181777,\n-0.019135542,\n0.014225136,\n-0.009704552,\n-0.011551084,\n-0.0007317738,\n0.03526192,\n0.020489667,\n-0.011913551,\n-0.013671176,\n0.019272324,\n0.0013387357,\n-0.012214468,\n-0.010559428,\n0.013445489,\n-0.015825463,\n0.016249482,\n0.034304462,\n0.0036486106,\n-0.025523176,\n-0.007427162,\n-0.012426477,\n0.0019987,\n0.032964017,\n-0.00916427,\n-0.017371079,\n-0.011366431,\n0.014922715,\n-0.015250986,\n-0.0103679355,\n0.029818073,\n0.019162899,\n0.003754615,\n0.0046129106,\n0.018985085,\n-0.000102317965,\n-0.0017593347,\n0.013397615,\n-0.0008343589,\n0.01936807,\n-0.014868002,\n0.031322654,\n-0.009554094,\n-0.0027527006,\n-0.02479824,\n0.004253863,\n0.030310482,\n-0.012440154,\n0.005796059,\n-0.022144707,\n0.017193265,\n0.0032844334,\n-0.0066406764,\n-0.008035834,\n0.020804262,\n0.007269865,\n0.030146345,\n0.03646559,\n-0.019244967,\n0.007119407,\n-0.0061003948,\n-0.031322654,\n0.0037853906,\n-0.022514014,\n-0.0019833122,\n-0.0058028977,\n-0.016030634,\n-0.011831483,\n0.003012583,\n-0.030255768,\n-0.022582402,\n0.02266447,\n0.021105178,\n0.039037056,\n-0.0062953066,\n0.0039461073,\n-0.012966759,\n-0.0053720404,\n-0.023471475,\n0.05547803,\n0.014389272,\n0.009649839,\n-0.01653672,\n-0.000118507174,\n0.006493638,\n0.010080697,\n0.00074716157,\n-0.017699352,\n-0.0041581164,\n-0.02659006,\n0.0014985976,\n-0.010450004,\n-0.0205307,\n-0.0077485954,\n-0.014635476,\n0.0027544103,\n-0.008035834,\n-0.009889205,\n0.014361916,\n-0.021898502,\n-0.010450004,\n-0.0055566938,\n0.0020311852,\n-0.014703866,\n0.0014977426,\n0.0077622733,\n0.01212556,\n-0.045848705,\n0.0040692096,\n-0.020366564,\n0.010805632,\n-0.0083641065,\n-0.0048009832,\n0.00096088054,\n0.0013216382,\n0.01653672,\n-0.012467511,\n-0.007871698,\n0.014840647,\n-0.0005616535,\n0.026234433,\n-0.0034348916,\n-0.0067432616,\n-0.0058028977,\n0.0050950604,\n0.004168375,\n-0.024538359,\n-0.028723832,\n-0.028067287,\n0.000916427,\n0.0030946508,\n-0.005153192,\n0.028149355,\n-0.022336198,\n-0.0053139087,\n-0.022281487,\n0.012022975,\n0.010395291,\n-0.001571262,\n-0.03176035,\n0.0018995344,\n0.00022461865,\n-0.030584041,\n-0.0075981375,\n-0.17912729,\n0.03457802,\n0.020175071,\n-0.011079192,\n0.009205304,\n-0.018355897,\n0.01061414,\n-0.008309394,\n-0.000025592848,\n-0.00889071,\n0.022541368,\n0.00009291433,\n-0.03646559,\n-0.0050471877,\n-0.018506354,\n0.022035282,\n0.017453147,\n0.035535485,\n0.043496087,\n0.017959233,\n0.022308843,\n-0.015346733,\n-0.0006078168,\n0.00041888922,\n-0.0005253213,\n-0.0047873054,\n-0.00083777844,\n0.040568992,\n0.003012583,\n-0.018656813,\n-0.019860478,\n-0.002494528,\n0.0027373128,\n0.009342085,\n-0.0015003072,\n-0.011106548,\n-0.0000883728,\n-0.01578443,\n0.004253863,\n0.024141697,\n0.01578443,\n0.0396936,\n0.022719182,\n0.021173567,\n0.012077687,\n0.018232794,\n0.019477494,\n-0.040705774,\n-0.0140336435,\n-0.031322654,\n0.0147585785,\n-0.034687445,\n-0.016974417,\n0.00792641,\n0.030474618,\n0.0033733405,\n0.018342217,\n-0.007447679,\n0.017343722,\n0.0017866907,\n-0.007174119,\n-0.014963749,\n0.00454794,\n0.0045103254,\n-0.007023661,\n-0.006124331,\n-0.031322654,\n0.018629456,\n-0.0074613574,\n-0.0054267524,\n-0.027739014,\n0.014580764,\n-0.0022996163,\n-0.005050607,\n0.02136506,\n-0.003727259,\n-0.019833121,\n0.006264531,\n0.007858019,\n-0.007290382,\n-0.0056250836,\n0.0351525,\n-0.028450271,\n0.02184379,\n0.0071672797,\n0.016618788,\n-0.004975378,\n-0.00978662,\n-0.0059089023,\n0.0020089585,\n0.05479413,\n-0.0023440698,\n-0.020544378,\n-0.023416761,\n0.012535901,\n0.027041435,\n-0.0054199137,\n-0.023662966,\n0.0020910266,\n-0.0166735,\n-0.010402131,\n0.01164683,\n-0.0013130894,\n-0.0019593756,\n0.010641496,\n0.0064799595,\n0.022582402,\n0.02998221,\n0.012570096,\n-0.016181093,\n-0.0036349325,\n0.013329226,\n-0.004141019,\n0.014047322,\n0.00025240213,\n0.033948835,\n-0.010778276,\n-0.0063363407,\n0.031049093,\n0.008562437,\n0.048256036,\n-0.024483647,\n-0.011065514,\n0.017206943,\n-0.00737245,\n-0.019354392,\n-0.035617553,\n0.0006933044,\n0.0009890915,\n0.01977841,\n-0.02295171,\n0.041581165,\n-0.005057446,\n0.014006288,\n-0.011270684,\n0.018725203,\n-0.011852,\n-0.028559696,\n-0.024100663,\n-0.0019183416,\n0.039392684,\n0.005553274,\n-0.013247157,\n-0.006107234,\n0.005423333,\n0.018766237,\n0.0038127466,\n-0.03416768,\n-0.0094309915,\n-0.045711927,\n-0.033018727,\n0.009978112,\n-0.022828607,\n0.023416761,\n0.0042572822,\n-0.0076938835,\n-0.0071057286,\n0.0015866498,\n0.021282991,\n-0.014293525,\n-0.00090445875,\n0.017042806,\n-0.0067022275,\n-0.0058541903,\n-0.007276704,\n-0.014293525,\n0.0065825447,\n-0.00530707,\n-0.004004239,\n-0.021748044,\n-0.0071877968,\n-0.019737376,\n0.002144029,\n0.011017641,\n0.014635476,\n-0.022240452,\n0.009725069,\n-0.014143067,\n-0.011865678,\n-0.011414303,\n0.020380242,\n0.00220387,\n0.010826149,\n-0.0064867986,\n-0.008220487,\n0.0011463886,\n-0.012686359,\n0.0021713849,\n0.019805767,\n0.023061134,\n0.016290516,\n0.010251672,\n-0.028860612,\n-0.010839827,\n0.010299546,\n-0.011975102,\n-0.012453833,\n0.025126513,\n-0.021556552,\n0.03225276,\n-0.014977426,\n-0.018137047,\n-0.0046334276,\n-0.01742579,\n0.020995753,\n-0.004575296,\n-0.024770886,\n-0.025550531,\n-0.006025166,\n-0.006401311,\n0.015045816,\n0.015415123,\n0.003217753,\n-0.0017328336,\n-0.011708381,\n-0.020380242,\n0.004681301,\n0.019956224,\n0.021064144,\n-0.02066748,\n-0.001082273,\n0.00020068213,\n-0.0039050733,\n0.00806319,\n0.010634657,\n0.02211735,\n-0.03444124,\n-0.02211735,\n-0.0902749,\n0.020735871,\n-0.0064594424,\n-0.036575012,\n-0.010402131,\n0.018930374,\n0.011804127,\n-0.002087607,\n0.0014276428,\n0.011099709,\n-0.024333188,\n0.0004415434,\n-0.0063431794,\n-0.013609625,\n-0.009636162,\n-0.0022158385,\n0.03189713,\n0.022431945,\n0.013883186,\n0.028559696,\n0.016030634,\n-0.008699218,\n-0.001184858,\n0.014963749,\n-0.008665022,\n0.026425924,\n-0.00441116,\n0.024702495,\n-0.007488713,\n-0.01798659,\n0.018451642,\n-0.0074613574,\n0.006606481,\n0.01943646,\n-0.008213648,\n-0.009547254,\n-0.03126794,\n0.011557923,\n0.0076460103,\n-0.0016293935,\n-0.019190256,\n-0.027410742,\n0.0059567755,\n-0.046204336,\n-0.007987961,\n-0.013773761,\n-0.00440774,\n0.01453973,\n0.0076460103,\n-0.009389957,\n0.028887969,\n0.023444118,\n-0.012098204,\n-0.010778276,\n0.025181226,\n-0.017699352,\n0.03575433,\n0.008001639,\n-0.0033511138,\n-0.015716039,\n0.039009698,\n0.016249482,\n0.027506487,\n-0.020735871,\n0.014635476,\n-0.0024346868,\n-0.010422647,\n-0.0055464352,\n0.010559428,\n-0.02446997,\n-0.044836532,\n-0.006285048,\n-0.0070099826,\n0.015196275,\n-0.0044179987,\n0.030228414,\n-0.0008001639,\n0.013951575,\n0.0026672129,\n0.02191218,\n0.020175071,\n-0.0075981375,\n-0.025085479,\n0.012597452,\n0.0172343,\n-0.003481055,\n-0.018410608,\n-0.0085145645,\n-0.022650793,\n-0.007563942,\n-0.05788536,\n0.011386948,\n-0.008740252,\n-0.0050608655,\n0.0012686359,\n0.011380108,\n-0.017193265,\n0.009608805,\n0.0042265067,\n0.010443164,\n-0.005129256,\n0.008165775,\n0.01337026,\n-0.013855829,\n-0.0017148812,\n0.002162836,\n-0.025304329,\n-0.0042265067,\n0.012966759,\n0.0045376816,\n-0.006862944,\n0.0042675408,\n-0.0004505196,\n0.012583774,\n-0.038626716,\n0.0043803845,\n-0.0070920507,\n0.001315654,\n-0.03121323,\n0.013192445,\n0.0030587462,\n0.023061134,\n0.027191894,\n0.0037101617,\n0.03452331,\n-0.018287506,\n-0.013520718,\n-0.026166042,\n-0.0032912723,\n-0.010019146,\n-0.033128154,\n0.0085145645,\n-0.030884959,\n-0.012891529,\n-0.0070646945,\n-0.0032074945,\n0.02143345,\n0.010210638,\n-0.009177948,\n0.098974116,\n0.014936392,\n0.00014575635,\n0.004541101,\n0.0055703716,\n0.0067501003,\n0.019532206,\n0.01391738,\n-0.016427295,\n-0.00065312523,\n0.014129389,\n0.014320882,\n-0.0020773485,\n-0.019874156,\n-0.028669119,\n-0.023211591,\n-0.002915127,\n0.008056351,\n-0.013931058,\n-0.0011190326,\n0.007078373,\n0.010381614,\n-0.010901378,\n0.00791957,\n-0.031623572,\n-0.022445623,\n0.030201057,\n0.004736013,\n0.0017901103,\n-0.058049496,\n0.016591432,\n0.007365611,\n-0.017945556,\n-0.0110928705,\n-0.0027800566,\n0.0016764117,\n-0.013978931,\n-0.004773627,\n-0.008863354,\n0.0033220479,\n-0.0053173285,\n-0.003983722,\n-0.024278477,\n-0.0048898906,\n-0.01689235,\n0.003190397,\n-0.007604976,\n0.00058559,\n-0.007468196\n]}\n}",
        "options": {}
      },
      "id": "c09a2a5a-f14f-44bf-9e22-7e34569ede65",
      "name": "Upsert todo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        4400,
        1780
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_i59drQwQdShF5SmdHgqd3gXG",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "1eb9f059-f81e-471f-891c-6e1501327452",
      "name": "kincadreur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        1440
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_EwmKBIJWKqCJECb0nVBVju45",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "0c203a91-b441-489b-811c-696a03f79c73",
      "name": "kincadreurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        1640
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assistantId": "asst_RKZEJLbWald8azZuvxrnnSxL",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "66c38b58-db91-47b3-a21a-81f51ac5b0c1",
      "name": "kinmail",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        1860
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let output = \"[EXCEPTION - Kin Non-Actif]\\n\\nLe Kin \" + $node[\"entree\"].json.kin + \" n'est pas actif ou n'existe pas.\\n\\n[EXCEPTION - Kin Non-Actif]\";\n\nreturn {\"json\": {\"output\": output}};"
      },
      "id": "b30ad405-8b7c-4905-b553-729cba27b1f6",
      "name": "EXCEPTION - Kin Non-Actif",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        980,
        2120
      ]
    },
    {
      "parameters": {
        "name": "send_email",
        "description": "La fonction send_email envoie l'email Ã  partir du contenu formattÃ© au format HTML.",
        "workflowId": "rr8aeSM8QYyY8Po4",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            }
          ]
        }
      },
      "id": "b60ceba5-a13c-4435-9fd7-ee2b0592a005",
      "name": "Send Email",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1940,
        2040
      ]
    },
    {
      "parameters": {
        "name": "recherche_google_scholar",
        "description": "La recherche Google Scholar renvoie la premiere page des rÃ©sultats Ã  partir d'une Query.",
        "workflowId": "syCSVTnhcjp4jtCz",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            }
          ]
        }
      },
      "id": "7d888ebd-2ba1-49ba-80ff-cfd0f039b76c",
      "name": "Recherche Google Scholar",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1940,
        1560
      ]
    },
    {
      "parameters": {
        "name": "questionneur_d_etudes",
        "description": "Le Questionneur d'Ã©tudes retourne une rÃ©ponse issue d'Ã©tudes pertinentes Ã  partir d'un objectif Ã  dÃ©montrer ou une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e en Anglais, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage :oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "yQ79P9nuVKhkwZpD",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            }
          ]
        }
      },
      "id": "d0418c0c-9f6a-483e-951f-d7c87ad5e5af",
      "name": "Questionneur de la base d'Ã©tudes",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1820,
        -60
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "entireThread",
        "destinationKey": "thread",
        "options": {
          "fileName": "={{ $node[\"thread\"].binary.fileName }}",
          "mimeType": "text/markdown",
          "useRawData": true
        }
      },
      "id": "03403065-0cfc-46da-a2c6-74327fdec287",
      "name": "Convert to binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        1980,
        900
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "={{ $node[\"thread\"].json[\"documentGoogleDriveId\"] }}",
          "mode": "id"
        },
        "changeFileContent": true,
        "inputDataFieldName": "thread",
        "newUpdatedFileName": "={{ $node[\"thread\"].binary.thread[\"fileName\"] }}",
        "options": {}
      },
      "id": "955aeec0-3574-4162-a122-9295342ea6d2",
      "name": "Update Thread",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2220,
        900
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Z5nSsC9JGaYw1Ng3",
          "name": "Google Drive DK via Nicolas"
        }
      }
    },
    {
      "parameters": {},
      "id": "1c0f0ef2-8a06-4f97-8129-8b0e2d6a4566",
      "name": "MISSION ACCOMPLIE",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3700,
        1340
      ]
    },
    {
      "parameters": {},
      "id": "98dae00e-2717-4cbe-bddd-ffdf4a9b76be",
      "name": "EXCEPTION",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3720,
        180
      ]
    },
    {
      "parameters": {},
      "id": "858a26e9-0281-46c3-8eed-f254cdde32ef",
      "name": "DEMANDE",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3720,
        480
      ]
    },
    {
      "parameters": {},
      "id": "4368371e-361d-45ce-b687-e6dfb0459b42",
      "name": "Continuer boucle",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3700,
        1640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kins-71e4f70.svc.us-east1-gcp.pinecone.io/vectors/upsert",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"namespace\": \"todo\",\n\"vectors\": {\n\"id\": \"kinmatcheur-{{ $node[\"todo kinmatcheur\"].json.mailId }}\",\n\"metadata\": {{ JSON.stringify($node[\"todo kinmatcheur\"].json) }},\n\"values\": \n[\n-0.008432496,\n-0.0070715337,\n0.012426477,\n-0.012146077,\n-0.0033117894,\n0.00042059895,\n-0.03356585,\n0.0024329768,\n0.0025270132,\n-0.031377368,\n0.018807271,\n-0.0015857948,\n-0.0025577887,\n0.01178361,\n0.011188616,\n-0.0024500745,\n-0.0005684925,\n-0.010949251,\n0.015962243,\n-0.018013947,\n0.004349609,\n0.021597587,\n-0.013527557,\n0.017029129,\n-0.005279714,\n-0.0041239215,\n0.018561067,\n-0.02921624,\n0.021419771,\n0.007310899,\n0.042784832,\n-0.019286001,\n0.0025902742,\n-0.0172343,\n-0.007858019,\n-0.0036622884,\n-0.004968539,\n-0.0027048276,\n-0.0010053341,\n-0.010853505,\n0.007899053,\n0.021269314,\n0.011407465,\n-0.017740386,\n-0.010552589,\n0.023170557,\n0.011968263,\n0.0031784289,\n-0.023143202,\n-0.012289696,\n0.006042263,\n0.0019679244,\n-0.01116126,\n-0.03865407,\n0.0036417716,\n0.017877165,\n0.0068458463,\n0.025960872,\n-0.008692378,\n-0.009314728,\n-0.018848306,\n0.009034329,\n-0.020544378,\n0.014826968,\n-0.0020705096,\n-0.004168375,\n-0.01957324,\n0.013110378,\n-0.007297221,\n0.0007428872,\n0.033182863,\n0.014129389,\n0.03419504,\n-0.0026278887,\n0.03107645,\n-0.012857334,\n-0.0006898849,\n-0.0094515085,\n0.021611264,\n0.0042641214,\n0.014156746,\n-0.02349883,\n-0.03479687,\n0.025714668,\n0.012959919,\n0.03728627,\n0.023170557,\n0.0017678834,\n-0.009697713,\n0.00010151652,\n-0.005187387,\n0.02935302,\n0.039994515,\n0.02907946,\n0.008630827,\n0.030283125,\n-0.0066782907,\n0.025263295,\n-0.0033203382,\n-0.022514014,\n-0.012392282,\n0.006941593,\n-0.015223631,\n-0.0055156597,\n-0.049022008,\n-0.010593623,\n0.038271084,\n-0.009253177,\n0.023676643,\n-0.017562572,\n-0.016263159,\n0.022650793,\n-0.00029771053,\n-0.00165333,\n-0.0039050733,\n-0.00031010626,\n0.0022449042,\n-0.017671995,\n-0.007228831,\n-0.02742442,\n0.013698532,\n0.02590616,\n0.02604294,\n-0.02191218,\n0.0097729415,\n0.0025116254,\n0.008035834,\n-0.0017815614,\n0.00027099566,\n-0.0065449304,\n0.024565715,\n0.005772122,\n0.0058336733,\n0.0023833942,\n-0.0154835135,\n0.0035528643,\n-0.01887566,\n-0.00006112363,\n-0.013684854,\n-0.021474484,\n0.00889071,\n0.025386397,\n-0.02211735,\n-0.0044487743,\n-0.0028894807,\n0.01274791,\n0.020216106,\n0.0001625333,\n-0.007276704,\n0.013048827,\n0.000475311,\n-0.01130488,\n0.021132533,\n-0.0006787715,\n-0.0021765141,\n-0.009054846,\n0.0152920205,\n0.016618788,\n0.015442479,\n-0.013055665,\n0.017453147,\n-0.0039803023,\n0.0083435895,\n0.0053173285,\n0.009649839,\n0.03534399,\n0.02479824,\n0.007269865,\n-0.005967034,\n-0.00861031,\n-0.0022192579,\n0.025112836,\n-0.03578169,\n0.026822587,\n0.00544385,\n0.006001229,\n0.0028723832,\n0.010894539,\n-0.032772522,\n-0.0017524956,\n-0.010094375,\n0.0040692096,\n0.0159896,\n0.025687313,\n-0.0036999031,\n-0.0048215003,\n0.029024748,\n-0.025167547,\n0.010361097,\n0.0037033225,\n0.023088489,\n0.021187246,\n0.030064277,\n-0.008555599,\n-0.6574201,\n-0.010374774,\n-0.008863354,\n0.013493362,\n0.019874156,\n0.02549582,\n-0.0020072488,\n0.0121802725,\n-0.0077485954,\n-0.0071057286,\n-0.015305699,\n0.024428936,\n0.022541368,\n-0.0134591665,\n-0.013035148,\n-0.0075981375,\n0.006216658,\n-0.018178081,\n0.018246472,\n0.0083435895,\n-0.020653803,\n0.013199285,\n0.0007176683,\n-0.0057037324,\n0.0013814796,\n-0.008097385,\n0.006069619,\n-0.0028775125,\n0.002164546,\n0.01564765,\n-0.0015524547,\n0.018520033,\n0.0088565145,\n0.01122965,\n0.05318012,\n0.0066030617,\n-0.02501709,\n0.030009566,\n0.018793592,\n0.032280117,\n-0.008090546,\n0.0047838856,\n0.012262341,\n0.007406645,\n0.008172614,\n0.009102719,\n0.035426058,\n-0.010456842,\n0.0064389254,\n0.01122965,\n0.019299679,\n-0.03597318,\n-0.0029989048,\n0.009136914,\n-0.004486389,\n-0.004705237,\n0.018779915,\n-0.015387767,\n-0.008439335,\n0.007905893,\n-0.024784563,\n-0.0034981524,\n-0.029052105,\n-0.028970037,\n-0.020968396,\n-0.008323072,\n-0.012843656,\n-0.02046231,\n0.01467651,\n-0.03258103,\n-0.000774945,\n0.0013062505,\n-0.02998221,\n-0.000747589,\n0.0301737,\n0.0039939806,\n0.034769513,\n-0.0008993295,\n0.004099985,\n0.020216106,\n0.021761721,\n0.0038742977,\n-0.013055665,\n0.008637667,\n0.02459307,\n0.0042230873,\n-0.001901244,\n-0.02431951,\n0.01674189,\n-0.0020328949,\n0.021173567,\n0.0077144005,\n-0.0037170006,\n0.004424838,\n0.02157023,\n-0.0015447608,\n-0.0077144005,\n-0.011017641,\n0.033593204,\n-0.022418266,\n-0.0081315795,\n0.009834493,\n0.023389407,\n0.014416628,\n0.02397756,\n0.0024859793,\n-0.00861031,\n0.0022722601,\n0.025331683,\n-0.021693332,\n-0.005221582,\n-0.019203933,\n-0.011940907,\n-0.0007843487,\n0.004954861,\n-0.03107645,\n0.008993295,\n0.012064009,\n0.013486523,\n-0.0027578298,\n0.008329911,\n-0.003528928,\n0.010525232,\n-0.014334559,\n-0.004777047,\n0.02624811,\n-0.030611398,\n-0.021925857,\n0.006808232,\n-0.015729718,\n-0.001853371,\n-0.030638754,\n0.02322527,\n-0.0068184906,\n0.00633976,\n-0.010737242,\n-0.0055566938,\n0.011106548,\n0.027711658,\n-0.0014874841,\n-0.019600596,\n-0.0041820533,\n0.004017917,\n-0.017603606,\n-0.005796059,\n-0.036629725,\n-0.0052933916,\n0.0018362735,\n-0.0011421143,\n0.0068116514,\n-0.0020636704,\n-0.022924352,\n-0.027246606,\n0.006380794,\n0.002453494,\n-0.0014866292,\n0.02479824,\n-0.010990285,\n-0.035644908,\n-0.009287372,\n0.009971273,\n0.004346189,\n-0.014690188,\n0.005245519,\n-0.0048215003,\n-0.013766922,\n0.002610791,\n0.012959919,\n-0.008302555,\n-0.03665708,\n0.0024723012,\n-0.003080973,\n-0.02626179,\n0.013937897,\n0.014498696,\n-0.004954861,\n0.002956161,\n-0.017548893,\n0.014895358,\n0.02136506,\n-0.00096857443,\n0.010039663,\n-0.0052694553,\n0.014430306,\n0.004127341,\n-0.008377784,\n0.015223631,\n0.032088622,\n-0.016167413,\n0.016810281,\n0.009472026,\n0.0053583626,\n0.011031319,\n0.00008185437,\n0.008528243,\n0.011749415,\n-0.0077075614,\n-0.0077075614,\n0.013999448,\n0.010422647,\n0.034359172,\n-0.007987961,\n0.0140336435,\n-0.018848306,\n0.0079948,\n-0.025988229,\n-0.008801803,\n-0.008288877,\n0.012146077,\n0.0053925575,\n-0.0006492783,\n-0.02300642,\n-0.014854324,\n0.015141563,\n0.007858019,\n0.03326493,\n0.022568725,\n-0.0074203233,\n0.007263026,\n0.013725888,\n0.007338255,\n-0.005775542,\n0.016112702,\n-0.020243462,\n-0.016263159,\n-0.010798793,\n0.013862669,\n0.007892215,\n0.008555599,\n-0.0026193399,\n-0.0037682932,\n-0.019190256,\n0.0009591708,\n0.006264531,\n0.017261654,\n-0.0005740492,\n0.019381747,\n-0.02281493,\n0.017056486,\n0.0026706324,\n-0.00668513,\n0.019190256,\n0.013124055,\n-0.007358772,\n0.019162899,\n-0.004099985,\n0.041006688,\n0.035097785,\n-0.010361097,\n0.0019901511,\n-0.017179586,\n-0.014430306,\n-0.013165089,\n-0.015346733,\n-0.013069344,\n-0.030556686,\n0.0037170006,\n0.003108329,\n0.014703866,\n0.011400625,\n0.027821083,\n0.008747091,\n0.022076316,\n-0.0013113797,\n0.017384756,\n-0.014785934,\n-0.0068800417,\n-0.014102033,\n-0.008842837,\n-0.0041512777,\n-0.019586917,\n-0.012276018,\n0.0014866292,\n-0.023266304,\n0.0076870443,\n0.0066611934,\n-0.009082202,\n-0.0052352604,\n0.016564077,\n0.010053341,\n-0.009636162,\n-0.009636162,\n0.003727259,\n0.02466146,\n-0.008589793,\n0.0018516612,\n0.009102719,\n-0.0030501974,\n-0.010019146,\n0.008001639,\n0.008733412,\n0.017808776,\n0.010203799,\n0.0015327926,\n-0.027369708,\n-0.018848306,\n0.01563397,\n-0.025577888,\n-0.0041854726,\n-0.0058063176,\n0.01102448,\n0.010053341,\n-0.009143753,\n-0.012529062,\n0.011598957,\n0.025687313,\n0.0032194627,\n-0.015907532,\n0.016769247,\n0.0062132385,\n-0.015565581,\n0.009177948,\n0.026576383,\n-0.033866767,\n0.0016140058,\n-0.009335245,\n-0.011386948,\n-0.017480504,\n0.00365203,\n0.016112702,\n-0.023266304,\n-0.02626179,\n-0.009157431,\n0.016632466,\n-0.0015045817,\n0.0040965653,\n0.0140336435,\n0.02749281,\n-0.005071124,\n-0.016810281,\n-0.022650793,\n-0.026152365,\n0.006257692,\n-0.004038434,\n0.0012062299,\n0.016181093,\n0.008931744,\n0.00006481028,\n0.03728627,\n-0.0058473516,\n-0.009813976,\n-0.005327587,\n0.02211735,\n-0.0028296395,\n-0.0029527415,\n-0.012228145,\n0.024415256,\n0.0149500705,\n0.025304329,\n-0.0002701408,\n0.00723567,\n0.008213648,\n0.008111062,\n-0.0044692913,\n-0.013787439,\n0.0038708784,\n-0.0030484877,\n0.009143753,\n-0.021665975,\n0.01171522,\n0.004759949,\n0.030994382,\n0.040541638,\n0.014498696,\n0.010326901,\n0.021871146,\n-0.008993295,\n0.0063431794,\n0.021296669,\n-0.026535349,\n-0.025536854,\n0.02853234,\n-0.026234433,\n-0.0077212397,\n0.019655308,\n0.008596633,\n-0.025167547,\n-0.03178771,\n-0.0026706324,\n0.012535901,\n-0.021132533,\n0.00017856222,\n0.005464367,\n-0.021296669,\n-0.0063705356,\n-0.03638352,\n0.021187246,\n-0.0064389254,\n0.007180958,\n-0.016358906,\n0.00014041338,\n-0.019381747,\n-0.033620562,\n0.002376555,\n0.007816985,\n0.0012566677,\n-0.03238954,\n0.015510869,\n0.016632466,\n-0.005864449,\n0.0023611675,\n0.0033083698,\n0.008282038,\n0.02515387,\n-0.024647783,\n-0.027752692,\n-0.0016003278,\n-0.036711793,\n-0.0009010392,\n0.015743395,\n0.020161394,\n-0.0105389105,\n-0.007139924,\n0.019860478,\n0.007604976,\n0.006257692,\n0.01826015,\n-0.026275467,\n0.019272324,\n-0.006449184,\n-0.0052147433,\n0.01605799,\n-0.009643001,\n0.0009839622,\n-0.0021970312,\n-0.04913143,\n0.007324577,\n-0.012529062,\n-0.010620979,\n0.003610996,\n0.00034878938,\n0.02266447,\n0.0044761305,\n0.0034536987,\n0.033182863,\n-0.018766237,\n0.0038127466,\n0.008774446,\n-0.023950204,\n0.018178081,\n-0.014498696,\n0.024032272,\n0.0022996163,\n-0.019901512,\n0.01006018,\n-0.0198468,\n0.011899873,\n0.016577754,\n-0.0030416485,\n0.004168375,\n0.02466146,\n-0.030365193,\n0.013937897,\n0.01612638,\n-0.0005159176,\n0.0041581164,\n-0.001199391,\n-0.011345914,\n-0.021748044,\n0.014703866,\n-0.008829159,\n0.0312953,\n-0.010703047,\n-0.01687867,\n-0.008295716,\n-0.0057413466,\n-0.027137183,\n0.00095489644,\n-0.020653803,\n-0.039502107,\n-0.011708381,\n0.0029236758,\n-0.005823415,\n0.030693466,\n0.019532206,\n0.012494867,\n-0.0066235787,\n-0.0023321016,\n0.00168838,\n-0.017589927,\n-0.023033777,\n-0.024702495,\n0.0030467778,\n0.03383941,\n0.025892483,\n-0.00028766575,\n0.022719182,\n-0.021118855,\n0.01130488,\n0.014156746,\n-0.016181093,\n-0.0032844334,\n-0.014102033,\n-0.026097653,\n0.0075502642,\n-0.00051933713,\n-0.002562918,\n-0.022896998,\n-0.025536854,\n-0.005775542,\n-0.0009959305,\n-0.0045240032,\n-0.014389272,\n-0.014430306,\n-0.0068048127,\n0.01639994,\n0.0013147992,\n-0.005023251,\n-0.013076182,\n0.018478999,\n0.0049377633,\n0.009868688,\n0.04010394,\n-0.007946927,\n0.022131028,\n-0.015250986,\n0.03225276,\n0.0010549169,\n0.01888934,\n-0.012604291,\n0.0049172463,\n-0.037505116,\n-0.018096013,\n0.019299679,\n0.004253863,\n0.005286553,\n-0.005105319,\n-0.005149773,\n-0.02025714,\n0.013657498,\n0.0038777173,\n-0.0059020636,\n-0.0076528494,\n-0.009041168,\n-0.011222811,\n-0.008842837,\n0.0048283394,\n-0.027109826,\n0.020804262,\n0.011838322,\n-0.015551903,\n0.02680891,\n-0.017562572,\n0.0028997392,\n-0.0009489123,\n-0.019381747,\n0.04844753,\n0.02674052,\n0.039310616,\n0.015333055,\n0.0069894656,\n-0.04314046,\n-0.01563397,\n-0.010292706,\n0.0010361096,\n0.021761721,\n0.013589108,\n-0.0014703866,\n-0.0021337704,\n0.015333055,\n0.0026689228,\n-0.028997391,\n-0.030310482,\n0.010648334,\n0.020106683,\n0.01583914,\n-0.010737242,\n0.010169604,\n-0.006986046,\n0.040131297,\n-0.02803993,\n-0.0013276223,\n-0.01157844,\n-0.024086984,\n-0.0089591,\n-0.0033853087,\n0.0010412389,\n0.011585278,\n0.015716039,\n-0.017330045,\n0.0031134582,\n-0.011756254,\n-0.020010935,\n0.02025714,\n0.004106824,\n0.022979066,\n0.005002734,\n-0.009766103,\n0.0048898906,\n0.0049856366,\n-0.005132675,\n0.0026381472,\n0.027684303,\n0.030283125,\n-0.011359591,\n-0.0069894656,\n0.01233073,\n-0.021406094,\n0.023512509,\n0.0052694553,\n-0.0025509498,\n0.0005334426,\n-0.03424975,\n-0.010901378,\n0.011147582,\n-0.0038195858,\n0.0005394267,\n-0.009540415,\n-0.00475653,\n-0.029790716,\n-0.013165089,\n-0.011051836,\n0.003935849,\n-0.013185606,\n-0.021515518,\n-0.018861983,\n-0.01846532,\n0.010641496,\n0.0055498546,\n-0.000100341065,\n0.026918333,\n0.017507859,\n-0.023485152,\n0.026932012,\n-0.002226097,\n0.0049309246,\n-0.015223631,\n0.0060730386,\n-0.0006817636,\n-0.02894268,\n0.022363555,\n-0.022869641,\n-0.051648185,\n0.008104224,\n0.005050607,\n-0.009752424,\n-0.023704,\n-0.02515387,\n0.035508126,\n0.012276018,\n0.0055703716,\n-0.00565244,\n-0.032006554,\n-0.0023936527,\n-0.011448499,\n-0.00078819564,\n0.013725888,\n0.004736013,\n-0.0077144005,\n0.009608805,\n-0.0033511138,\n0.007864859,\n-0.033401713,\n0.0057447664,\n-0.009663518,\n0.003658869,\n-0.030091632,\n0.0048044026,\n-0.010251672,\n-0.0071262456,\n-0.00034173665,\n-0.008056351,\n-0.008083707,\n0.013431811,\n-0.02066748,\n-0.008056351,\n-0.014211457,\n-0.004831759,\n-0.013247157,\n-0.011393786,\n-0.023731356,\n0.0061174924,\n-0.038900275,\n-0.03843522,\n-0.0092600165,\n0.020653803,\n0.029763361,\n-0.021105178,\n-0.02136506,\n0.0039495267,\n-0.043660223,\n-0.015004783,\n0.005621664,\n0.0041102436,\n0.015675005,\n0.0057652835,\n0.011339075,\n0.020831617,\n-0.0032433993,\n0.01778142,\n-0.008405141,\n0.017808776,\n0.017754063,\n-0.022172062,\n0.016523043,\n-0.018588422,\n-0.026371213,\n-0.038353153,\n0.026932012,\n0.016714534,\n0.0011874227,\n0.019149221,\n-0.02535904,\n-0.013493362,\n-0.024360545,\n0.013903703,\n-0.04201886,\n0.013062504,\n-0.011339075,\n-0.013883186,\n-0.0016721373,\n0.017453147,\n-0.0026022424,\n-0.008384624,\n0.01694706,\n0.013910541,\n-0.023033777,\n0.014211457,\n-0.0224593,\n-0.0034092453,\n-0.0061858823,\n-0.03479687,\n0.007899053,\n-0.017808776,\n-0.033620562,\n0.017589927,\n-0.009478864,\n0.011106548,\n-0.003672547,\n0.0071672797,\n-0.030118989,\n0.0005590889,\n0.00599439,\n-0.016782925,\n0.0030758437,\n-0.013110378,\n0.022158384,\n-0.02583777,\n0.009998629,\n-0.01447134,\n-0.011380108,\n-0.03996716,\n0.0045650373,\n-0.0077691125,\n-0.027041435,\n-0.02659006,\n-0.0068184906,\n0.009157431,\n0.0039734636,\n-0.033647917,\n0.004168375,\n-0.01687867,\n-0.00031160229,\n-0.020708514,\n-0.022226775,\n0.014909036,\n-0.030775534,\n-0.025646279,\n0.0054130745,\n-0.009116397,\n0.24182731,\n-0.009410474,\n0.013124055,\n0.014690188,\n-0.010525232,\n0.037231557,\n0.0044419356,\n-0.004927505,\n0.0010711595,\n0.030009566,\n-0.00045650374,\n-0.025400074,\n-0.012617969,\n-0.003956366,\n-0.0067569395,\n-0.015661327,\n-0.0172343,\n-0.03219805,\n-0.039939802,\n-0.03315551,\n0.014580764,\n0.010121731,\n-0.011181777,\n-0.019135542,\n0.014225136,\n-0.009704552,\n-0.011551084,\n-0.0007317738,\n0.03526192,\n0.020489667,\n-0.011913551,\n-0.013671176,\n0.019272324,\n0.0013387357,\n-0.012214468,\n-0.010559428,\n0.013445489,\n-0.015825463,\n0.016249482,\n0.034304462,\n0.0036486106,\n-0.025523176,\n-0.007427162,\n-0.012426477,\n0.0019987,\n0.032964017,\n-0.00916427,\n-0.017371079,\n-0.011366431,\n0.014922715,\n-0.015250986,\n-0.0103679355,\n0.029818073,\n0.019162899,\n0.003754615,\n0.0046129106,\n0.018985085,\n-0.000102317965,\n-0.0017593347,\n0.013397615,\n-0.0008343589,\n0.01936807,\n-0.014868002,\n0.031322654,\n-0.009554094,\n-0.0027527006,\n-0.02479824,\n0.004253863,\n0.030310482,\n-0.012440154,\n0.005796059,\n-0.022144707,\n0.017193265,\n0.0032844334,\n-0.0066406764,\n-0.008035834,\n0.020804262,\n0.007269865,\n0.030146345,\n0.03646559,\n-0.019244967,\n0.007119407,\n-0.0061003948,\n-0.031322654,\n0.0037853906,\n-0.022514014,\n-0.0019833122,\n-0.0058028977,\n-0.016030634,\n-0.011831483,\n0.003012583,\n-0.030255768,\n-0.022582402,\n0.02266447,\n0.021105178,\n0.039037056,\n-0.0062953066,\n0.0039461073,\n-0.012966759,\n-0.0053720404,\n-0.023471475,\n0.05547803,\n0.014389272,\n0.009649839,\n-0.01653672,\n-0.000118507174,\n0.006493638,\n0.010080697,\n0.00074716157,\n-0.017699352,\n-0.0041581164,\n-0.02659006,\n0.0014985976,\n-0.010450004,\n-0.0205307,\n-0.0077485954,\n-0.014635476,\n0.0027544103,\n-0.008035834,\n-0.009889205,\n0.014361916,\n-0.021898502,\n-0.010450004,\n-0.0055566938,\n0.0020311852,\n-0.014703866,\n0.0014977426,\n0.0077622733,\n0.01212556,\n-0.045848705,\n0.0040692096,\n-0.020366564,\n0.010805632,\n-0.0083641065,\n-0.0048009832,\n0.00096088054,\n0.0013216382,\n0.01653672,\n-0.012467511,\n-0.007871698,\n0.014840647,\n-0.0005616535,\n0.026234433,\n-0.0034348916,\n-0.0067432616,\n-0.0058028977,\n0.0050950604,\n0.004168375,\n-0.024538359,\n-0.028723832,\n-0.028067287,\n0.000916427,\n0.0030946508,\n-0.005153192,\n0.028149355,\n-0.022336198,\n-0.0053139087,\n-0.022281487,\n0.012022975,\n0.010395291,\n-0.001571262,\n-0.03176035,\n0.0018995344,\n0.00022461865,\n-0.030584041,\n-0.0075981375,\n-0.17912729,\n0.03457802,\n0.020175071,\n-0.011079192,\n0.009205304,\n-0.018355897,\n0.01061414,\n-0.008309394,\n-0.000025592848,\n-0.00889071,\n0.022541368,\n0.00009291433,\n-0.03646559,\n-0.0050471877,\n-0.018506354,\n0.022035282,\n0.017453147,\n0.035535485,\n0.043496087,\n0.017959233,\n0.022308843,\n-0.015346733,\n-0.0006078168,\n0.00041888922,\n-0.0005253213,\n-0.0047873054,\n-0.00083777844,\n0.040568992,\n0.003012583,\n-0.018656813,\n-0.019860478,\n-0.002494528,\n0.0027373128,\n0.009342085,\n-0.0015003072,\n-0.011106548,\n-0.0000883728,\n-0.01578443,\n0.004253863,\n0.024141697,\n0.01578443,\n0.0396936,\n0.022719182,\n0.021173567,\n0.012077687,\n0.018232794,\n0.019477494,\n-0.040705774,\n-0.0140336435,\n-0.031322654,\n0.0147585785,\n-0.034687445,\n-0.016974417,\n0.00792641,\n0.030474618,\n0.0033733405,\n0.018342217,\n-0.007447679,\n0.017343722,\n0.0017866907,\n-0.007174119,\n-0.014963749,\n0.00454794,\n0.0045103254,\n-0.007023661,\n-0.006124331,\n-0.031322654,\n0.018629456,\n-0.0074613574,\n-0.0054267524,\n-0.027739014,\n0.014580764,\n-0.0022996163,\n-0.005050607,\n0.02136506,\n-0.003727259,\n-0.019833121,\n0.006264531,\n0.007858019,\n-0.007290382,\n-0.0056250836,\n0.0351525,\n-0.028450271,\n0.02184379,\n0.0071672797,\n0.016618788,\n-0.004975378,\n-0.00978662,\n-0.0059089023,\n0.0020089585,\n0.05479413,\n-0.0023440698,\n-0.020544378,\n-0.023416761,\n0.012535901,\n0.027041435,\n-0.0054199137,\n-0.023662966,\n0.0020910266,\n-0.0166735,\n-0.010402131,\n0.01164683,\n-0.0013130894,\n-0.0019593756,\n0.010641496,\n0.0064799595,\n0.022582402,\n0.02998221,\n0.012570096,\n-0.016181093,\n-0.0036349325,\n0.013329226,\n-0.004141019,\n0.014047322,\n0.00025240213,\n0.033948835,\n-0.010778276,\n-0.0063363407,\n0.031049093,\n0.008562437,\n0.048256036,\n-0.024483647,\n-0.011065514,\n0.017206943,\n-0.00737245,\n-0.019354392,\n-0.035617553,\n0.0006933044,\n0.0009890915,\n0.01977841,\n-0.02295171,\n0.041581165,\n-0.005057446,\n0.014006288,\n-0.011270684,\n0.018725203,\n-0.011852,\n-0.028559696,\n-0.024100663,\n-0.0019183416,\n0.039392684,\n0.005553274,\n-0.013247157,\n-0.006107234,\n0.005423333,\n0.018766237,\n0.0038127466,\n-0.03416768,\n-0.0094309915,\n-0.045711927,\n-0.033018727,\n0.009978112,\n-0.022828607,\n0.023416761,\n0.0042572822,\n-0.0076938835,\n-0.0071057286,\n0.0015866498,\n0.021282991,\n-0.014293525,\n-0.00090445875,\n0.017042806,\n-0.0067022275,\n-0.0058541903,\n-0.007276704,\n-0.014293525,\n0.0065825447,\n-0.00530707,\n-0.004004239,\n-0.021748044,\n-0.0071877968,\n-0.019737376,\n0.002144029,\n0.011017641,\n0.014635476,\n-0.022240452,\n0.009725069,\n-0.014143067,\n-0.011865678,\n-0.011414303,\n0.020380242,\n0.00220387,\n0.010826149,\n-0.0064867986,\n-0.008220487,\n0.0011463886,\n-0.012686359,\n0.0021713849,\n0.019805767,\n0.023061134,\n0.016290516,\n0.010251672,\n-0.028860612,\n-0.010839827,\n0.010299546,\n-0.011975102,\n-0.012453833,\n0.025126513,\n-0.021556552,\n0.03225276,\n-0.014977426,\n-0.018137047,\n-0.0046334276,\n-0.01742579,\n0.020995753,\n-0.004575296,\n-0.024770886,\n-0.025550531,\n-0.006025166,\n-0.006401311,\n0.015045816,\n0.015415123,\n0.003217753,\n-0.0017328336,\n-0.011708381,\n-0.020380242,\n0.004681301,\n0.019956224,\n0.021064144,\n-0.02066748,\n-0.001082273,\n0.00020068213,\n-0.0039050733,\n0.00806319,\n0.010634657,\n0.02211735,\n-0.03444124,\n-0.02211735,\n-0.0902749,\n0.020735871,\n-0.0064594424,\n-0.036575012,\n-0.010402131,\n0.018930374,\n0.011804127,\n-0.002087607,\n0.0014276428,\n0.011099709,\n-0.024333188,\n0.0004415434,\n-0.0063431794,\n-0.013609625,\n-0.009636162,\n-0.0022158385,\n0.03189713,\n0.022431945,\n0.013883186,\n0.028559696,\n0.016030634,\n-0.008699218,\n-0.001184858,\n0.014963749,\n-0.008665022,\n0.026425924,\n-0.00441116,\n0.024702495,\n-0.007488713,\n-0.01798659,\n0.018451642,\n-0.0074613574,\n0.006606481,\n0.01943646,\n-0.008213648,\n-0.009547254,\n-0.03126794,\n0.011557923,\n0.0076460103,\n-0.0016293935,\n-0.019190256,\n-0.027410742,\n0.0059567755,\n-0.046204336,\n-0.007987961,\n-0.013773761,\n-0.00440774,\n0.01453973,\n0.0076460103,\n-0.009389957,\n0.028887969,\n0.023444118,\n-0.012098204,\n-0.010778276,\n0.025181226,\n-0.017699352,\n0.03575433,\n0.008001639,\n-0.0033511138,\n-0.015716039,\n0.039009698,\n0.016249482,\n0.027506487,\n-0.020735871,\n0.014635476,\n-0.0024346868,\n-0.010422647,\n-0.0055464352,\n0.010559428,\n-0.02446997,\n-0.044836532,\n-0.006285048,\n-0.0070099826,\n0.015196275,\n-0.0044179987,\n0.030228414,\n-0.0008001639,\n0.013951575,\n0.0026672129,\n0.02191218,\n0.020175071,\n-0.0075981375,\n-0.025085479,\n0.012597452,\n0.0172343,\n-0.003481055,\n-0.018410608,\n-0.0085145645,\n-0.022650793,\n-0.007563942,\n-0.05788536,\n0.011386948,\n-0.008740252,\n-0.0050608655,\n0.0012686359,\n0.011380108,\n-0.017193265,\n0.009608805,\n0.0042265067,\n0.010443164,\n-0.005129256,\n0.008165775,\n0.01337026,\n-0.013855829,\n-0.0017148812,\n0.002162836,\n-0.025304329,\n-0.0042265067,\n0.012966759,\n0.0045376816,\n-0.006862944,\n0.0042675408,\n-0.0004505196,\n0.012583774,\n-0.038626716,\n0.0043803845,\n-0.0070920507,\n0.001315654,\n-0.03121323,\n0.013192445,\n0.0030587462,\n0.023061134,\n0.027191894,\n0.0037101617,\n0.03452331,\n-0.018287506,\n-0.013520718,\n-0.026166042,\n-0.0032912723,\n-0.010019146,\n-0.033128154,\n0.0085145645,\n-0.030884959,\n-0.012891529,\n-0.0070646945,\n-0.0032074945,\n0.02143345,\n0.010210638,\n-0.009177948,\n0.098974116,\n0.014936392,\n0.00014575635,\n0.004541101,\n0.0055703716,\n0.0067501003,\n0.019532206,\n0.01391738,\n-0.016427295,\n-0.00065312523,\n0.014129389,\n0.014320882,\n-0.0020773485,\n-0.019874156,\n-0.028669119,\n-0.023211591,\n-0.002915127,\n0.008056351,\n-0.013931058,\n-0.0011190326,\n0.007078373,\n0.010381614,\n-0.010901378,\n0.00791957,\n-0.031623572,\n-0.022445623,\n0.030201057,\n0.004736013,\n0.0017901103,\n-0.058049496,\n0.016591432,\n0.007365611,\n-0.017945556,\n-0.0110928705,\n-0.0027800566,\n0.0016764117,\n-0.013978931,\n-0.004773627,\n-0.008863354,\n0.0033220479,\n-0.0053173285,\n-0.003983722,\n-0.024278477,\n-0.0048898906,\n-0.01689235,\n0.003190397,\n-0.007604976,\n0.00058559,\n-0.007468196\n]}\n}",
        "options": {}
      },
      "id": "af950ed6-5392-491c-bc98-dc46dd145720",
      "name": "Upsert todo kinmatcheur",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        4500,
        480
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = JSON.parse(JSON.stringify($node[\"sortie\"].json));\n\ndelete json.query;\n\n// Function to remove null attributes from a JSON object\nfunction removeNullAttributes(obj) {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] === null || obj[key] == \"\") {\n            delete obj[key];\n        } else if (typeof obj[key] === 'object') {\n            // Recursive call for nested objects\n            removeNullAttributes(obj[key]);\n        }\n    });\n}\n\n// Function to remove threads\nfunction removePropertiesWithThread(obj) {\n    for (let key in obj) {\n        if (key.toLowerCase().includes('thread')) {\n            // Supprime la propriÃ©tÃ© si la clÃ© contient 'thread'\n            delete obj[key];\n        } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n            // Appel rÃ©cursif si la propriÃ©tÃ© est un objet\n            removePropertiesWithThread(obj[key]);\n        }\n    }\n}\n\n// Remove threads from the json object\nremoveNullAttributes(json);\n\n// Remove null attributes from the json object\nremovePropertiesWithThread(json);\n\nreturn {\"json\": json};"
      },
      "id": "e0921adc-64b8-431c-a822-5e988473d73b",
      "name": "todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3940,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "1a743e65-4e49-4878-bfc1-a41bb6fae343",
              "leftValue": "={{ $node[\"entree\"].json.sync }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "89ff2005-e4a4-4d1e-be27-c14275003791",
      "name": "If sync3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4040,
        1340
      ]
    },
    {
      "parameters": {
        "url": "=https://api.openai.com/v1/assistants/{{ $node[\"assistantId\"].json.assistantId }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v1"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "cbfb723f-baef-4435-ba72-7f44f3cd5264",
      "name": "Get Assistant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2920,
        1120
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "gdFeXvXoLRHkWsrB",
        "options": {}
      },
      "id": "5bb49370-34e9-4315-92c9-b49782d27674",
      "name": "kins",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2520,
        1120
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let assistantId;\nconst kinObject = $json.kin.find(kin => kin.kin === $node[\"Producteur\"].json.dernierProducteur);\n\nassistantId = kinObject && kinObject.assistantId ? kinObject.assistantId : \"asst_8umriZllMPt14U8qy2T0jCmQ\";\n\nreturn {\"assistantId\": assistantId};"
      },
      "id": "7a8a457d-5d5d-4802-8526-7758721b6f65",
      "name": "assistantId",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2720,
        1120
      ]
    },
    {
      "parameters": {
        "workflowId": "YWxRZmBa38HYCjnv",
        "options": {}
      },
      "id": "22c290eb-05e2-4a50-8d7a-8c6b8adc36af",
      "name": "thread",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        160,
        860
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincir",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinlca",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2a5fab45-e697-4ba3-96ea-3f1bdc5a7655",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinrsi",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsota",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "72d86350-5484-42da-86d0-02205e464813",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincirbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6485b142-ec38-459a-9d57-c73998d1ec69",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kindev",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6f847cf9-95ef-46d0-a2fc-dd71c81e9e7f",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinontologie",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b1b17da-cb6e-45e2-94b0-6489cc899831",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "74f492b7-3bec-4816-ae99-a1a88314f9ff",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsotabeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b7fbcf3-4e28-4b4a-9c08-ce4e3b263604",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "d31caef0-4d25-4ed3-9e1d-eea4ca6dbc76",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "e830f692-818a-4c36-a976-38294ef3f1c8",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2caba844-9c03-4c51-8262-9be51e095df7",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmail",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "bd30facf-18e2-45ab-9c15-61b1a5aa0661",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmatcheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "35511810-4ea6-4cba-81db-2a0d6198b44f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        760,
        740
      ]
    },
    {
      "parameters": {
        "workflowId": "=EYWde6gUS9Qq2ok7",
        "options": {}
      },
      "id": "d748b04c-f27c-4140-a626-9d4392c540d3",
      "name": "Send  Notifications",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3060,
        1500
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "95bfe471-c0e9-4c84-85aa-0e2bf5554ab3",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3180,
        1320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1a743e65-4e49-4878-bfc1-a41bb6fae343",
              "leftValue": "={{ $node[\"entree\"].json.kin.toLowerCase() == \"kinmatcheur\"}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "id": "427d1d91-aab8-4561-926a-31a2ad40a2ce",
      "name": "If kinmatcheur",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4040,
        1100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1a743e65-4e49-4878-bfc1-a41bb6fae343",
              "leftValue": "={{ $node[\"entree\"].json.kin.toLowerCase() == \"kinmail\"}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "id": "3b389c20-5d6d-4124-9f4f-fcc66155fb9d",
      "name": "If kinmail",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4040,
        880
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"sortie\"].json;\n\nreturn {\"json\": json};"
      },
      "id": "1e73a5de-d75e-40ac-ad7e-069f49e92471",
      "name": "entreeSendMail",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4280,
        860
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "mission",
              "stringValue": "=[PROCESSUS - Mission : RÃ©daction & Envoi D'Email]\n\nTa mission est de rÃ©diger et d'envoyer le mail appropriÃ© au client Ã  partir des informations dont tu disposes.\n[/PROCESSUS - Mission : RÃ©daction & Envoi D'Email]\n\n---\n\n[INFORMATIF - Date]\n\n{{ $node[\"sortie\"].json.date }}\n\n[/INFORMATIF - Date]\n\n---\n\n[INFORMATIF - Client]\n\n{{ $node[\"sortie\"].json.client }}\n\n[/INFORMATIF - Client]\n\n\n---\n\n[INFORMATIF - Mission]\n\n{{ $node[\"sortie\"].json.mission }}\n\n[/INFORMATIF - Mission]\n\n\n---\n\n[INFORMATIF - Dernier Kin Producteur ]\n\n{{ $node[\"sortie\"].json.dernierProducteur }}\n\n[/INFORMATIF - Dernier Kin Producteur ]\n\n\n---\n\n[INFORMATIF - DerniÃ¨re production du Kin Producteur]\n\n{{ $node[\"sortie\"].json.output }}\n\n[/INFORMATIF - DerniÃ¨re production du Kin Producteur]\n\n\n---\n\n[INFORMATIF - Dernier Message du KinManager]\n\n{{ $node[\"sortie\"].json.instructions }}\n\n[/INFORMATIF - Dernier Message du KinManager]"
            }
          ]
        },
        "options": {}
      },
      "id": "7c4fe6e5-5385-4b38-b27e-f053fc78aeb3",
      "name": "mission kinmail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        5300,
        680
      ]
    },
    {
      "parameters": {
        "workflowId": "rr8aeSM8QYyY8Po4",
        "options": {}
      },
      "id": "cb77d95d-902b-471c-9589-9f0f1bbc5fa4",
      "name": "Send Mail",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4520,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1a743e65-4e49-4878-bfc1-a41bb6fae343",
              "leftValue": "={{ $node[\"entree\"].json.kin.toLowerCase() == \"kinmatcheur\"}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "id": "be8562af-ee9c-4e60-8efe-41ceeb692622",
      "name": "If kinmatcheur1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4040,
        480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $node[\"sortie\"].json.output }}\n{{ $node[\"sortie\"].json.instructions }}",
                    "rightValue": "={{\n(\n$node[\"sortie\"].json.output.toLowerCase().includes(\"[exception\")\n||\n$node[\"sortie\"].json.instructions.toLowerCase().includes(\"[exception\")\n) &&\n\n$node[\"entree\"].json.kin.toLowerCase() !== \"kinmail\"\n\n}}",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "298fc4e9-ee13-4c01-b979-6e859625335a",
                    "leftValue": "={{\n(\n$node[\"sortie\"].json.output.toLowerCase().includes(\"[demande\")\n||\n$node[\"sortie\"].json.instructions.toLowerCase().includes(\"[demande\")\n)\n}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "85cccd38-117b-4670-a34a-bdf1bd6a583a",
                    "leftValue": "={{\n(\n$node[\"sortie\"].json.output.toLowerCase().includes(\"accomplie]\")\n||\n$node[\"sortie\"].json.instructions.toLowerCase().includes(\"accomplie]\")\n)\n}}",
                    "rightValue": "Accomplie]",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "looseTypeValidation": true
        }
      },
      "id": "f2da19ad-1b38-416a-a8e6-7eb2e3ad9250",
      "name": "Switch Commands",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3360,
        1320
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"sortie\"].json;\n\ndelete json.query;\n\njson.kin = \"kinmatcheur\";\njson.kin = \"kinmatcheur\";\n\n// Function to remove null attributes from a JSON object\nfunction removeNullAttributes(obj) {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] === null || obj[key] == \"\") {\n            delete obj[key];\n        } else if (typeof obj[key] === 'object') {\n            // Recursive call for nested objects\n            removeNullAttributes(obj[key]);\n        }\n    });\n}\n\n// Function to remove threads\nfunction removePropertiesWithThread(obj) {\n    for (let key in obj) {\n        if (key.toLowerCase().includes('thread')) {\n            // Supprime la propriÃ©tÃ© si la clÃ© contient 'thread'\n            delete obj[key];\n        } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n            // Appel rÃ©cursif si la propriÃ©tÃ© est un objet\n            removePropertiesWithThread(obj[key]);\n        }\n    }\n}\n\n// Remove threads from the json object\nremoveNullAttributes(json);\n\n// Remove null attributes from the json object\nremovePropertiesWithThread(json);\n\nreturn {\"json\": json};"
      },
      "id": "4b3ebf1c-3b3a-48f4-a9f7-ec3cc8b4b3de",
      "name": "todo kinmatcheur",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4280,
        480
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"Producteur\"].json;\n\njson.instructions = $node[\"Manager\"].json.output;\nif (json.instructions == null) {\n json.instructions = \"[EXCEPTION - Error with OpenAI call]\\n\\n\" + $prevNode.name + \" returned an error when calling OpenAI Assistant) \\n\\n[/EXCEPTION - Error with OpenAI call]\"; \n}\n\njson.date = $now.toString();\n\nreturn {\"json\" : json};"
      },
      "id": "8037e86a-05b7-42ab-9041-974aec0b6322",
      "name": "sortie",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2920,
        1320
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\nif ($json.output != null) {\n  json.output = $json.output;\n} else {\n  json.output = \"[EXCEPTION - Error with OpenAI call]\\n\\n\" + $prevNode.name +\" returned an error when calling OpenAI Assistant\\n\\n[/EXCEPTION - Error with OpenAI call]\"; \n}\n\njson.dernierProducteur = $prevNode.name;\njson.promptProducteur = $node[\"Prompt Producteur\"].json.promptProducteur;\n\njson.entireThread += '\\n\\n---\\n\\n' + json.output;\njson.thread += '\\n\\n---\\n\\n' + json.output;\n\nreturn {\"json\": json};"
      },
      "id": "56074961-40df-4a44-aec3-3b05e23ee95e",
      "name": "Producteur",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1760,
        900
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"Producteur\"].json;\n\njson.format = \"md\";\n\nreturn {\"json\": json};"
      },
      "id": "7d8eb602-9143-4957-b6ed-cef8b78da123",
      "name": "entree document",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2520,
        900
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = JSON.parse(JSON.stringify($node[\"sortie\"].json));\n\ndelete json.query;\ndelete json.kin;\ndelete json.mission;\ndelete json.output;\ndelete json.instructions;\n\n// Nouvelle mission\njson.mission = $node[\"document nouvelleMission\"].json.document;\n\n// Trouver le bon Kin\njson.kin = $node[\"document nouvelleMission\"].json.document.match(/kin\\w+/i)[0]; \n\n// Function to remove null attributes from a JSON object\nfunction removeNullAttributes(obj) {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] === null || obj[key] == \"\") {\n            delete obj[key];\n        } else if (typeof obj[key] === 'object') {\n            // Recursive call for nested objects\n            removeNullAttributes(obj[key]);\n        }\n    });\n}\n\n// Function to remove threads\nfunction removePropertiesWithThread(obj) {\n    for (let key in obj) {\n        if (key.toLowerCase().includes('thread')) {\n            // Supprime la propriÃ©tÃ© si la clÃ© contient 'thread'\n            delete obj[key];\n        } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n            // Appel rÃ©cursif si la propriÃ©tÃ© est un objet\n            removePropertiesWithThread(obj[key]);\n        }\n    }\n}\n\n// Remove threads from the json object\nremoveNullAttributes(json);\n\n// Remove null attributes from the json object\nremovePropertiesWithThread(json);\n\nreturn {\"json\": json};"
      },
      "id": "c9017461-31ec-43f0-8cf1-07d53ac4a2e0",
      "name": "todo nouvelleMission",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4740,
        1120
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": "H3fxaSnxjZT6EGhc",
        "options": {}
      },
      "id": "47ea54ca-a3fb-4beb-a0ff-170080b3c96d",
      "name": "document",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2720,
        900
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_NRJfqzvKf73U2CjrI4bqMSf5",
        "text": "=[INFORMATIF - Mission du Producteur]\n\n{{ $node[\"entree\"].json.mission }}\n\n[/INFORMATIF - Mission du Producteur]\n\n---\n\n[INFORMATIF - Document Final dÃ©jÃ  rÃ©digÃ© Ã  ce stade]\n\n{{ $node[\"document\"].json.document }}\n\n[/INFORMATIF - Document Final dÃ©jÃ  rÃ©digÃ© Ã  ce stade]\n\n\n---\n\n[INFORMATIF - DerniÃ¨res Instructions que tu as donnÃ©es au {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n{{ $node[\"entree\"].json.instructions }}\n\n[/INFORMATIF - DerniÃ¨res Instructions donnÃ©es au {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n---\n[INFORMATIF - RÃ©daction rÃ©alisÃ©e / Actions effectuÃ©es par {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n{{ $node[\"Producteur\"].json.output }}\n\n[/INFORMATIF - RÃ©daction rÃ©alisÃ©e / Actions effectuÃ©es par {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n---\n\n[INSTRUCTIONS : Manage la Boucle de Production]\n\nEffectue les Actions  1, 2 et 3 de ton processus en une seule fois, de maniÃ¨re Ã  :\n- Faire le Suivi de l'Avancement de la Mission,\n- DÃ©terminer la Prochaine Action,\n- DÃ©clencher la prochaine Action.\n\n[/INSTRUCTIONS : Determination de la prochaine Ã©tape]",
        "options": {}
      },
      "id": "0b4c1b91-ae71-4843-b103-0277f8f487b4",
      "name": "Manager",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2520,
        1320
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "id": "7c02ddc3-ee31-4dae-93c5-0732aef06b62",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -300,
        860
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nreturn {\"json\": json};"
      },
      "id": "e5febf44-35ef-4b23-9c82-ec284e20adab",
      "name": "input",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -60,
        860
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"input\"].json;\n\n// Cleaner les datas utilisÃ©es\ndelete json.output;\ndelete json.dernierProducteur;\ndelete json.promptProducteur;\njson.remainingThread = \"\";\n\n// PrÃ©parer le nouveau thread\njson.entireThread = $node[\"thread\"].json.thread;\njson.thread = $node[\"thread\"].json.thread;\n\n// PrÃ©parer les nouvelles instructions\njson.instructions = json.query?json.query:json.instructions.substring(0, 10000); // Cas fonction GPT\njson.mission = json.mission.substring(0, 10000);\n\nMAX_LENGTH = 10000;\n\nif (json.thread.length > MAX_LENGTH) {\n    json.thread = \"Le dÃ©but du document est dÃ©jÃ  rÃ©digÃ©, voici le thread[...]\\n\\n\" + json.thread.substring(json.thread.length - MAX_LENGTH);\n    json.remainingThread = json.entireThread.substring(0, json.entireThread.length - MAX_LENGTH);\n}\n\nreturn {\"json\": json};"
      },
      "id": "f2943232-b99c-4e69-ae50-48dd527aa0a6",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        360,
        860
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "87a95772-b560-4d27-9d4a-99dae4e30442",
      "name": "kinmatcheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1180,
        2120
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "=promptProducteur",
              "stringValue": "={{ $node[\"entree\"].json.mission }}\n\n---\n\n{{ $node[\"entree\"].json.thread }}\n\n---\n\n{{ $node[\"entree\"].json.instructions }}\n"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "c8110551-dcae-4a3e-a6eb-2f2b5296f6e6",
      "name": "Prompt Producteur",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        560,
        860
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = JSON.parse(JSON.stringify($node[\"sortie\"].json));\n\ndelete json.query;\n\n// Mettre Ã  jour le Kin\njson.kinDemandeur = json.kin;\njson.kin = \"kinmail\";\n\n// Mettre Ã  jour la mission\njson.missionDuDemandeur = json.mission;\njson.mission = $node[\"mission kinmail\"].json.mission;\n\n// Function to remove null attributes from a JSON object\nfunction removeNullAttributes(obj) {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] === null || obj[key] == \"\") {\n            delete obj[key];\n        } else if (typeof obj[key] === 'object') {\n            // Recursive call for nested objects\n            removeNullAttributes(obj[key]);\n        }\n    });\n}\n\n// Function to remove threads\nfunction removePropertiesWithThread(obj) {\n    for (let key in obj) {\n        if (key.toLowerCase().includes('thread')) {\n            // Supprime la propriÃ©tÃ© si la clÃ© contient 'thread'\n            delete obj[key];\n        } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n            // Appel rÃ©cursif si la propriÃ©tÃ© est un objet\n            removePropertiesWithThread(obj[key]);\n        }\n    }\n}\n\n// Remove threads from the json object\nremoveNullAttributes(json);\n\n// Remove null attributes from the json object\nremovePropertiesWithThread(json);\n\nreturn {\"json\": json};"
      },
      "id": "5092f248-7ac6-4b52-a750-43720586dd50",
      "name": "nouvelleMission kinmail",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5540,
        680
      ]
    },
    {
      "parameters": {
        "workflowId": "DXYPhavwlYlTKPqu",
        "options": {}
      },
      "id": "4081776a-3399-47c6-a2b9-f95a332eb78d",
      "name": "Lancement de Mission kinMail",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        5740,
        680
      ]
    },
    {
      "parameters": {
        "workflowId": "DXYPhavwlYlTKPqu",
        "options": {}
      },
      "id": "66f1f461-645a-474d-a30f-4168f763d25f",
      "name": "Lancement de Mission KinMatcheur",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4980,
        1100
      ]
    },
    {
      "parameters": {
        "name": "get_kin_prompt",
        "description": "Retourne le prompt entier du Kin demandÃ©, entre balises INFORMATIF, Ã  partir du nom du Kin passÃ© en query.",
        "workflowId": "xWxr2xnJu3cb8BAh",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            }
          ]
        }
      },
      "id": "c93aedc5-e1fa-4e24-bff1-d881e1eb03bf",
      "name": "Get Kin Prompt",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1780,
        -500
      ]
    },
    {
      "parameters": {
        "workflowId": "H3fxaSnxjZT6EGhc",
        "options": {}
      },
      "id": "8329124a-c6e6-46cc-be69-3ae2ec8c2aa0",
      "name": "document nouvelleMission",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4280,
        1100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1a743e65-4e49-4878-bfc1-a41bb6fae343",
              "leftValue": "={{ $node[\"document nouvelleMission\"].json.document }}",
              "rightValue": "=[EXCEPTION",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "id": "ee0cc7ef-a7fb-4ed1-a3a2-af1a9a2faf1f",
      "name": "If exception in document",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4500,
        1100
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any",
    "saveExecutionProgress": true,
    "executionTimeout": 2400
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [
        14
      ]
    },
    "node:Nico reÃ§oit un email": {
      "lastTimeChecked": 1706021400,
      "possibleDuplicates": [
        "18d36ccb1edf6bcf"
      ]
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    },
    {
      "createdAt": "2023-12-17T21:33:59.044Z",
      "updatedAt": "2023-12-17T21:33:59.044Z",
      "id": "cV0ITFyTfPijMrvR",
      "name": "kin"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-28T22:27:24.000Z",
  "versionId": "4a91cfad-ea28-4391-8ee5-d8be3348ba0c"
}