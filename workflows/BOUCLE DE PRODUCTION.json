{
  "active": false,
  "connections": {
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "kinmail",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recherche Google Scholar": {
      "ai_tool": [
        [
          {
            "node": "kinchercheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinontologiedomaine",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de la base d'Ã©tudes": {
      "ai_tool": [
        [
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsota",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to binary data": {
      "main": [
        [
          {
            "node": "Update Thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Thread": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "thread": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Producteur": {
      "main": [
        [
          {
            "node": "Convert to binary data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "/crud_mission/read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input": {
      "main": [
        [
          {
            "node": "thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "Fetch onoff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Producteur": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "defaultEmbedding": {
      "main": [
        [
          {
            "node": "Prompt Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Prompt": {
      "ai_tool": [
        [
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message au CTO": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinarchitecte",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinontologie",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message au Client": {
      "ai_tool": [
        [
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur d'executions": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Code": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinarchitecte",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "kincir": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinlca": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinrsi": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsota": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincirbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kindev": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinontologie": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsotabeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmail": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmatcheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinarchitecte": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinpo": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinevaluateur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kintesteur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinfacturation": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de document": {
      "ai_tool": [
        [
          {
            "node": "kinlca",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsota",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Listeur de missions": {
      "ai_tool": [
        [
          {
            "node": "kinevaluateur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinfacturation",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Fetch onoff": {
      "main": [
        [
          {
            "node": "If on",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If on": {
      "main": [
        [
          {
            "node": "defaultEmbedding",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "/crud_mission/update/status todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission": {
      "ai_tool": [
        [
          {
            "node": "kinmatcheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de source": {
      "ai_tool": [
        [
          {
            "node": "kinlca",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kintranscriptionexcel",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "BOUCLE DE MANAGEMENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinontologiedomaine": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmanager": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Kin": {
      "ai_tool": [
        [
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinontologie",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinarchitecte",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreurbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmatcheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmail",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinfacturation",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/update/status todo": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/read": {
      "main": [
        [
          {
            "node": "CRUD Mission : Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission : Read": {
      "main": [
        [
          {
            "node": "input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kintranscriptionexcel": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Row Google Sheet": {
      "ai_tool": [
        [
          {
            "node": "kintranscriptionexcel",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "kincir",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinlca",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinrsi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsota",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincirbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kindev",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinontologie",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsotabeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmatcheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinarchitecte",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinpo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinevaluateur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kintesteur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinfacturation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinontologiedomaine",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmanager",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kintranscriptionexcel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "/crud_mission/delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/delete": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-17T12:47:07.331Z",
  "id": "RCzPi7XT4ijau6eF",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "BOUCLE DE PRODUCTION",
  "nodes": [
    {
      "parameters": {
        "name": "send_email",
        "description": "La fonction \"send_email\" envoie l'email Ã  partir d'une query contenant le contenu de l'email formattÃ© au format HTML, et permet donc au Kin d'envoyer des emails en autonomie.\n\nPour l'utiliser, passe le contenu du mail dÃ©sirÃ© dans \"query\", au format HTML.",
        "workflowId": "rr8aeSM8QYyY8Po4",
        "fields": {
          "values": [
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.kinDemandeur }}"
            },
            {
              "name": "missionDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.missionDemandeur }}"
            },
            {
              "name": "mailId",
              "stringValue": "={{ $node[\"entree\"].json.mailId }}"
            },
            {
              "name": "format",
              "stringValue": "={{ $node[\"entree\"].json.format }}"
            },
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            },
            {
              "name": "missionIdDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.missionIdDemandeur }}"
            }
          ]
        }
      },
      "id": "b60ceba5-a13c-4435-9fd7-ee2b0592a005",
      "name": "Send Email",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1400,
        1320
      ]
    },
    {
      "parameters": {
        "name": "recherche_google_scholar",
        "description": "La fonction \"recherche_google_scholar\" renvoie la premiÃ¨re page des rÃ©sultats de Google Scholar Ã  partir d'une liste de queries en Anglais, filtrÃ©s et avec une Ã©valuation de leur pertinence. Il est possible de passer la date limite des Ã©tudes.\n\nQuery exemple :\n``\nJe souhaite faire des recherches pour amÃ©liorer l'Ã©quipe de Kin. Etudes aprÃ¨s 2020 :\n- \"Multi-Agent Systems LLM\",\n- \"multi_agent collaboration GPT\",\n- \"Complex systemsÂ agentsÂ LLM\".\n``",
        "workflowId": "syCSVTnhcjp4jtCz",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "7d888ebd-2ba1-49ba-80ff-cfd0f039b76c",
      "name": "Recherche Google Scholar",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1400,
        -200
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_la_base_d_etudes",
        "description": "Le \"questionneur_de_la_base_d_etudes\" retourne une rÃ©ponse issue d'Ã©tudes pertinentes Ã  partir d'un objectif Ã  dÃ©montrer ou une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage :oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ© (verbatim ou non)",
        "workflowId": "yQ79P9nuVKhkwZpD",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "d0418c0c-9f6a-483e-951f-d7c87ad5e5af",
      "name": "Questionneur de la base d'Ã©tudes",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1540,
        -200
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "entireThread",
        "destinationKey": "thread",
        "options": {
          "fileName": "={{ $node[\"thread\"].binary.fileName }}",
          "mimeType": "text/markdown",
          "useRawData": true
        }
      },
      "id": "03403065-0cfc-46da-a2c6-74327fdec287",
      "name": "Convert to binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        3160,
        800
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "={{ $node[\"thread\"].json[\"documentGoogleDriveId\"] }}",
          "mode": "id"
        },
        "changeFileContent": true,
        "inputDataFieldName": "thread",
        "newUpdatedFileName": "={{ $node[\"thread\"].binary.thread[\"fileName\"] }}",
        "options": {}
      },
      "id": "955aeec0-3574-4162-a122-9295342ea6d2",
      "name": "Update Thread",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3400,
        800
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Z5nSsC9JGaYw1Ng3",
          "name": "Google Drive DK via Nicolas"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "YWxRZmBa38HYCjnv",
        "options": {}
      },
      "id": "22c290eb-05e2-4a50-8d7a-8c6b8adc36af",
      "name": "thread",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -780,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\nif ($json.output != null) {\n  json.output = $json.output;\n} else {\n  json.output = \"[EXCEPTION - Error with OpenAI call]\\n\\n\" + $prevNode.name +\" returned an error when calling OpenAI Assistant\\n\\n[/EXCEPTION - Error with OpenAI call]\"; \n}\n\njson.dernierProducteur = $prevNode.name;\njson.promptProducteur = $node[\"Prompt Producteur\"].json.promptProducteur;\n\njson.entireThread += '\\n\\n---\\n\\n' + json.output;\njson.thread += '\\n\\n---\\n\\n' + json.output;\n\nreturn {\"json\": json};"
      },
      "id": "56074961-40df-4a44-aec3-3b05e23ee95e",
      "name": "Producteur",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2960,
        960
      ]
    },
    {
      "parameters": {},
      "id": "7c02ddc3-ee31-4dae-93c5-0732aef06b62",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1760,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nreturn {\"json\": json};"
      },
      "id": "e5febf44-35ef-4b23-9c82-ec284e20adab",
      "name": "input",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1000,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"input\"].json;\n$execution.customData.set(\"kin\", json.kin);\n\n// Cleaner les datas utilisÃ©es\ndelete json.output;\ndelete json.dernierProducteur;\ndelete json.promptProducteur;\njson.remainingThread = \"\";\n\n// PrÃ©parer le nouveau thread\njson.entireThread = $node[\"thread\"].json.thread;\njson.thread = $node[\"thread\"].json.thread;\n\nMAX_LENGTH = 10000;\nif (json.thread.length > MAX_LENGTH) {\n    json.thread = \"Le dÃ©but du document est dÃ©jÃ  rÃ©digÃ©, voici le thread :\\n\\n[...]\" + json.thread.substring(json.thread.length - MAX_LENGTH);\n    json.remainingThread = json.entireThread.substring(0, json.entireThread.length - MAX_LENGTH);\n}\n\nif (!json.documentGoogleDriveId) {\n  json.documentGoogleDriveId = $node[\"thread\"].json.documentGoogleDriveId;\n}\n\njson.date = $now.toString();\njson.executionId = $execution.id;\n\nreturn {\"json\": json};"
      },
      "id": "f2943232-b99c-4e69-ae50-48dd527aa0a6",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -580,
        960
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "=promptProducteur",
              "stringValue": "=MISSION GLOBALE\n===============\n\n{{ $node[\"entree\"].json.mission.length > 10000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.mission.substring($node[\"entree\"].json.mission.length - 10000)}}\n\nTHREAD D'AVANCEMENT\n===============\n\n{{ $node[\"entree\"].json.thread.length > 20000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.thread.substring($node[\"entree\"].json.thread.length - 20000)}}\n\nINSTRUCTIONS\n===============\n\n{{ $node[\"entree\"].json.instructions }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "c8110551-dcae-4a3e-a6eb-2f2b5296f6e6",
      "name": "Prompt Producteur",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        260,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "=IJeSapyzv0Y9koZ9",
        "options": {}
      },
      "id": "ccea7645-c366-453e-88bb-bf694a62112d",
      "name": "defaultEmbedding",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        60,
        960
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_prompt",
        "description": "Le questionneur_de_prompt retourne un extrait du prompt systÃ¨me du Kin demandÃ© ou une rÃ©pond Ã  une question sur le prompt Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e contenant :\n- Le nom du Kin dont tu souhaites rÃ©cupÃ©rer le prompt,\n- La section demandÃ©e (Proposition de Valeur, Action nÂ°1, etc.)\n- Verbatim/non-verbatim : Si les extraits du prompt doivent Ãªtre retranscrit verbatim",
        "workflowId": "1gSRJ9a1XiIgSYRx",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            }
          ]
        }
      },
      "id": "c93aedc5-e1fa-4e24-bff1-d881e1eb03bf",
      "name": "Questionneur de Prompt",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2360,
        980
      ]
    },
    {
      "parameters": {
        "name": "message_au_cto",
        "description": "La fonction message_au_cto envoie le message passÃ© dans \"query\" au CTO de DigitalKin, Nicolas Lester Reynolds.\n\nIl peut Ãªtre utilisÃ© pour signaler un problÃ¨me, demander de l'aide ou une modification, demander un dÃ©blocage, ou suggÃ©rer une amÃ©lioration.",
        "workflowId": "NjRYPuz1EgoPxWfP",
        "fields": {
          "values": [
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            },
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            }
          ]
        }
      },
      "id": "525488b7-c5f1-4d1e-a503-4a936b97afd9",
      "name": "Message au CTO",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2180,
        940
      ]
    },
    {
      "parameters": {
        "name": "message_au_client",
        "description": "La fonction \"message_au_client\" envoie le message passÃ© dans \"query\" au commanditaire de la mission.\n\nIl peut Ãªtre utilisÃ© pour demander des prÃ©cisions, demander des validations, signaler un problÃ¨me, ou tout autre chose.\n\nCette fonction est asynchrone, et ne doit pas perturber le dÃ©roulement de la mission.",
        "workflowId": "NjRYPuz1EgoPxWfP",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "2858802a-37b7-47c6-893c-4840b205ee1e",
      "name": "Message au Client",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2180,
        1500
      ],
      "disabled": true
    },
    {
      "parameters": {
        "name": "questionneur_d_executions",
        "description": "Le questionneur_d_executions retourne une rÃ©ponse issue de les executions n8n de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (filtre optionnel) Le status des executions \"status: error\" (default), \"status: waiting\", \"status: success\"\n- (filtre optionnel) Le workflowId des executions dÃ©sirÃ© \"workflowId: %ID%\"\n- Les informations que tu cherches, avec les  Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "ZTyYwHXmIk6UTURZ",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "4b527df8-4fe7-40b1-9422-72574a541b2c",
      "name": "Questionneur d'executions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2440,
        -20
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_code",
        "description": "Le Questionneur de code retourne une rÃ©ponse issue de la codebase n8n de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "kLKx8F1dt8gfkjry",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "70df518c-8c09-41d0-b6ab-4e39606bc96c",
      "name": "Questionneur de Code",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2320,
        -20
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_bU27N3NS5XZ0lH4AFOuN8kb7",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "705274a2-abf4-4031-a7f1-58fc18d7f395",
      "name": "kincir",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        860,
        480
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_581bbg7Bmja1nCBKeiGg9Rgu",
        "text": "={{ $json.promptProducteur }}",
        "nativeTools": [
          "code_interpreter"
        ],
        "options": {}
      },
      "id": "f9e05a8a-d972-4464-92ed-25b4ec2d142d",
      "name": "kinlca",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -20
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_WKY0lRXB0rrJTFIm3HYv8jlE",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a441e8e3-0802-4dc2-af20-6bd09e04ce0d",
      "name": "kinrsi",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        -380
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_7abHKvQqtVij29X6ybyEvAbZ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a4c0ce08-9cd7-4ded-bdbe-2d682c579eb6",
      "name": "kinsota",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        140
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_TwVBZeoLx80udowj5MIoG6Pq",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a5006fdd-836e-4162-8aba-f641634ffc78",
      "name": "kincirbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        860,
        640
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_KEwBhc34Qsh3dcu2Gu8bgFne",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "abb1b363-7706-4b86-a21b-83d3e1c9819d",
      "name": "kindev",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        -20
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_3pQx4lfP0EN6Jstj8kozdBtC",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a353ab78-cdd5-4eaa-ab35-6807844c5773",
      "name": "kinontologie",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        -180
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "3e041b0a-99e2-476c-b22f-d0ac74d6c94c",
      "name": "kinchercheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -400
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_MHJDvt7FT6gcWBFdJsZqJ52C",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "d714c7bc-4ca8-4ffd-8e69-ed576ab4e76d",
      "name": "kinsotabeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        320
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "5d7bae62-2aaf-4b09-82fb-309e7858ee5a",
      "name": "kinchercheurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -200
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_i59drQwQdShF5SmdHgqd3gXG",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "1eb9f059-f81e-471f-891c-6e1501327452",
      "name": "kincadreur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2400,
        1340
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_EwmKBIJWKqCJECb0nVBVju45",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "0c203a91-b441-489b-811c-696a03f79c73",
      "name": "kincadreurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2400,
        1540
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_RKZEJLbWald8azZuvxrnnSxL",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "66c38b58-db91-47b3-a21a-81f51ac5b0c1",
      "name": "kinmail",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1080,
        1300
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "87a95772-b560-4d27-9d4a-99dae4e30442",
      "name": "kinmatcheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2400,
        2000
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_L1WY5sdn3wnugM8RoJZBHETh",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "86f62d0c-47f6-4112-a167-fd48ebe111c7",
      "name": "kinarchitecte",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        140
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "84b0acda-ca8d-46da-bc63-39e8a65b44a3",
      "name": "kinpo",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        340
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "47796ca9-bfe1-4b87-9655-ee84850f6fca",
      "name": "kinevaluateur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        580
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "74f07f2e-5f09-4003-9fec-0542d4e02973",
      "name": "kintesteur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        800
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "37286259-2d70-43fc-92ff-8a21fa3546aa",
      "name": "kinfacturation",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1080,
        1480
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "name": "questionneur_de_document",
        "description": "=Le questionneur_de_document retourne une rÃ©ponse issue du contenu du document final sur lequel travaille le Kin Producteur, Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (optionnel) Si tu souhaites du verbatim,\n- Les informations que tu cherches,\n- L'intention d'usage : tu souhaites faire de la rÃ©ponse,\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "anybPoo9G98Nx3qW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "documentGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.documentGoogleDriveId }}"
            },
            {
              "name": "format",
              "stringValue": "md"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "4faf9751-9732-4db7-9f09-fb28a63018a4",
      "name": "Questionneur de document",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1720,
        960
      ]
    },
    {
      "parameters": {
        "name": "listeur_de_missions",
        "description": "Le listeur_de_missions permet de rÃ©cupÃ©rer la liste des missions en cours, terminÃ©es, et en attente.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (optionnel) Le statut des tÃ¢ches dÃ©sirÃ©es (todo/doing/done/waiting)\n- (filtre optionnel) Le Kin dÃ©sirÃ©\n- Si tu cherches des informations particuliÃ¨res,\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "7gSW7ZaAHc61PVPS",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "587f90b0-7308-4b02-8623-3284b0c6c4b0",
      "name": "Listeur de missions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1460,
        960
      ]
    },
    {
      "parameters": {
        "url": "={{ $vars.vectorDatabaseEndpoint }}vectors/fetch",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"onoff\",\n  \"ids\": [\"onoff\"]\n}",
        "options": {}
      },
      "id": "c7c6356a-39b4-4879-9df0-e8b315e52340",
      "name": "Fetch onoff",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -380,
        960
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "026b34bb-7dfa-4fa4-af16-d78a4e166711",
              "leftValue": "={{ $json.vectors.onoff.metadata.value }}",
              "rightValue": "on",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "31242434-5483-4b4c-90ac-006ddf022057",
      "name": "If on",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -160,
        960
      ]
    },
    {
      "parameters": {
        "name": "crud_mission",
        "description": "La fonction \"crud_mission\" permet au Manager d'effectuer des actions sur les missions. Permet de lancer, arrÃªter, ou modifier la mission en cours d'exÃ©cution.\n\nAppels disponibles :\n   - Pour **continuer la boucle de production** : /crud_mission/update/execution todo\n   - Pour **gÃ©rer une exception** : /crud_mission/update/status exception\n   - Pour **formuler une demande spÃ©cifique** : /crud_mission/create/<nomdukindemandÃ©> <Description dÃ©taillÃ©e de la nouvelle mission>.\n   - Pour **conclure la mission** : /crud_mission/update/status done",
        "workflowId": "HLDDZOmG8kuk2zTi",
        "fields": {
          "values": [
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            }
          ]
        }
      },
      "id": "85cafd5a-dd48-4b2e-8eec-2a612785ee30",
      "name": "CRUD Mission",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1940,
        1500
      ]
    },
    {
      "parameters": {
        "content": "# UF AmÃ©lioration Continue",
        "height": 1873.0096475812716,
        "width": 1219.5279693808732
      },
      "id": "4dbbe16f-89bc-4919-a46e-4b9fdafec1bd",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        -881.2903472610042
      ]
    },
    {
      "parameters": {
        "content": "# UF PRODUCTION",
        "height": 1886.9666599843194,
        "width": 1137.0587249575672
      },
      "id": "4fe9aea2-f9d5-4200-8d44-6b475866a5eb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        620,
        -888.2589431676302
      ]
    },
    {
      "parameters": {
        "content": "\n\n\n\n# UF MANAGEMENT",
        "height": 1175.0204629103996,
        "width": 1191.0347008570102
      },
      "id": "3572c142-67c5-4e36-923d-a5f41b06e9c4",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        1020
      ]
    },
    {
      "parameters": {
        "content": "\n\n\n\n# UF RELATION CLIENT",
        "height": 1168.8754104629538,
        "width": 1119.066732991086
      },
      "id": "61cf0eb5-05cb-4f74-b9e9-48e4137a24cc",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        1020
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "7482cc49-365d-4e7a-a4ef-9f431d001d65",
      "name": "CRUD Mission : Update status",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        260,
        1260
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_source",
        "description": "Le questionneur_de_source retourne une rÃ©ponse issue d'un document source spÃ©cifique Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- La citation de l'Ã©tude,\n- Les informations que tu cherches,\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire,\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "aoOczsm5IKBTtydy",
        "fields": {
          "values": [
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "sourceGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.sourceGoogleDriveId }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            },
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            }
          ]
        }
      },
      "id": "0f130d0e-3a84-4baa-9a59-1e35c62f9dce",
      "name": "Questionneur de source",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1300,
        -20
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "80b46e16-7f8f-486c-b558-59913336869f",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3620,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "0LhMxlt62MaWdiqs",
        "options": {}
      },
      "id": "47ea54ca-a3fb-4beb-a0ff-170080b3c96d",
      "name": "BOUCLE DE MANAGEMENT",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3860,
        960
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_5dde6xoKVLP1axOjm7UHE9BJ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "b901b36d-5e42-4c56-85e7-c641fbafdd3a",
      "name": "kinontologiedomaine",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -600
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_NRJfqzvKf73U2CjrI4bqMSf5",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "c7eff67f-639d-46de-9aa7-f5204c1ed317",
      "name": "kinmanager",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2400,
        1780
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "questionneur_de_kin",
        "description": "La fonction questionneur_de_kin permet de poser Ã  un Kin de l'Ã©quipe une question rapide.\n\nPour bien l'utiliser :\n- Mentionne le nom du @Kin,\n- Explique ton contexte et ton intention d'usage,\n- ta question.",
        "workflowId": "m3wfYxyTxFXqib9D",
        "fields": {
          "values": [
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            }
          ]
        }
      },
      "id": "c6510ea1-eb47-463d-8f18-65435c54c00a",
      "name": "Questionneur de Kin",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2020,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/crud_mission/update/status todo\";\n\nreturn {\"json\": json};"
      },
      "id": "551ef40c-afef-420a-8777-1a1e69234c03",
      "name": "/crud_mission/update/status todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        1160
      ]
    },
    {
      "parameters": {
        "content": "## Get/Create Thread\nhttps://kins.app.n8n.cloud/workflow/YWxRZmBa38HYCjnv",
        "height": 276.1083494686582,
        "width": 250.71967654986526
      },
      "id": "e33a51eb-0b75-4c0c-8688-202ca0537073",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -860,
        840
      ]
    },
    {
      "parameters": {
        "content": "## Get defaultEmbedding\nhttps://kins.app.n8n.cloud/workflow/IJeSapyzv0Y9koZ9",
        "height": 276.1083494686582,
        "width": 250.71967654986526
      },
      "id": "774fdd63-93a4-45b4-8280-bf5dcd1095ef",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -20,
        840
      ]
    },
    {
      "parameters": {
        "content": "## BOUCLE DE MANAGEMENT \nhttps://kins.app.n8n.cloud/workflow/0LhMxlt62MaWdiqs",
        "height": 276.1083494686582,
        "width": 250.71967654986526
      },
      "id": "8ab309fb-23ed-4063-a77c-e70422aca121",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3780,
        860
      ]
    },
    {
      "parameters": {
        "content": "## Trigger by\nCRONS : https://kins.app.n8n.cloud/workflow/uryTpGQcTgxTMlVP",
        "height": 117.22196735097269,
        "width": 250.71967654986526
      },
      "id": "99a4d5cd-9fd9-43dc-a665-e4c9a74a2a58",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2060,
        940
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\njson.query = \"/crud_mission/read/\" + $json.missionId;\njson.responseFormat = \"json\";\n\nreturn {\"json\": json};"
      },
      "id": "30e04d83-9ee7-48fe-9f7f-1d6eacb2f406",
      "name": "/crud_mission/read",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1460,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "97a66946-ae2b-440b-b7b5-8a91b290f801",
      "name": "CRUD Mission : Read",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -1240,
        960
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "1ab9beae-2859-48b4-a1a5-764bd7d78cdc",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1320,
        860
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_5a3AzNzXpeJCDHoDyb8a4PNG",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "8b3db119-4cc4-4920-880b-2382b63f1ebf",
      "name": "kintranscriptionexcel",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -800
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "crud_row_google_sheet",
        "description": "La fonction \"crud_row_google_sheet\" permet au Kin de rentrer une ligne  dans le document Google Sheets de la mission.\n\nLa query est formulÃ© en JSON libre, contenant chacun des champs Ã  insÃ©rer.",
        "workflowId": "ZOzyRLZv1Jav33g6",
        "fields": {
          "values": [
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            }
          ]
        }
      },
      "id": "422b42cf-473e-4b57-b746-332f974f24ce",
      "name": "CRUD Row Google Sheet",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1200,
        -780
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kincir",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinlca",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2a5fab45-e697-4ba3-96ea-3f1bdc5a7655",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinrsi",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsota",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "72d86350-5484-42da-86d0-02205e464813",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kincirbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6485b142-ec38-459a-9d57-c73998d1ec69",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kindev",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6f847cf9-95ef-46d0-a2fc-dd71c81e9e7f",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinontologie",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b1b17da-cb6e-45e2-94b0-6489cc899831",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "74f492b7-3bec-4816-ae99-a1a88314f9ff",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsotabeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b7fbcf3-4e28-4b4a-9c08-ce4e3b263604",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "d31caef0-4d25-4ed3-9e1d-eea4ca6dbc76",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "e830f692-818a-4c36-a976-38294ef3f1c8",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2caba844-9c03-4c51-8262-9be51e095df7",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmail",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "bd30facf-18e2-45ab-9c15-61b1a5aa0661",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmatcheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "dec09ac9-dbf2-48a1-88c1-274f1d1309ee",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinarchitecte",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "58985013-b664-435a-8964-e97aaa0935b6",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinpo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "873de981-5c16-4165-8467-009d17277dfa",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinevaluateur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "b2a3e685-74d6-46b7-9e2d-03a95d595ea0",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kintesteur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "cd4effcc-9084-463b-ae02-db173847297e",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinfacturation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "c2bd6b6f-a902-4b50-8b1b-8a906880d697",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinontologiedomaine",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "626a9627-dcdd-4395-8bfa-994b964ac296",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmanager",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "f3180808-71bf-44c5-9f8d-be4c37f22730",
                    "leftValue": "={{ $node[\"entree\"].json.kin }}",
                    "rightValue": "kintranscriptionexcel",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "35511810-4ea6-4cba-81db-2a0d6198b44f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        460,
        800
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "da4b0dc4-0a5e-41af-acee-c430e3788d2e",
      "name": "CRUD Mission : Update status1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1580,
        2160
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/crud_mission/delete/\" + json.missionId;\n\nreturn {\"json\": json};"
      },
      "id": "22b35ed4-5fc9-41cc-b122-ba526c443004",
      "name": "/crud_mission/delete",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        2160
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "client": "boiron",
          "commandText": "doing",
          "dernierProducteur": "kinlca",
          "execution": "doing",
          "firstAttribute": "execution",
          "instructions": "TODOLIST :\n\n- Ãvaluer l'Objectif de l'Ãtude : TODO\n- Analyser la MÃ©thodologie : TODO\n- Analyser les RÃ©sultats : TODO\n- Critiquer la Discussion et les Conclusions : TODO\n- Conduire une Analyse Critique : TODO\n- SynthÃ¨se Scientifique et VulgarisÃ©e : TODO\n- Examiner les Annexes : TODO\n- Signature Finale : TODO\n\nProchaine action Ã  rÃ©aliser & instructions :\n\n[INSTRUCTION - Ãvaluer l'Objectif de l'Ãtude]\n\n1. Commence par examiner le document PDF \"Stodal.pdf\" attachÃ© au courriel. RÃ©flÃ©chis sur l'objectif de l'Ã©tude mentionnÃ© dans le document : est-il clairement dÃ©fini ? Correspond-il au design et Ã  la mÃ©thodologie de l'Ã©tude ?\n\n2. RÃ©dige un paragraphe oÃ¹ tu rÃ©sumes l'objectif de l'Ã©tude. Discute de son adÃ©quation - ou non - avec le reste de l'Ã©tude et de la maniÃ¨re dont il est censÃ© guider les rÃ©sultats et conclusions de l'Ã©tude.\n\n3. Une fois cette analyse terminÃ©e, marque cette tÃ¢che comme 'DONE' dans la todolist et informe-moi via un [RETOUR - Ãvaluation de l'Objectif de l'Ãtude] dÃ©crivant briÃ¨vement tes constatations.\n\n[ANALYSE - Ãvaluer l'Objectif de l'Ãtude]\n\nC'est le moment d'utiliser la fonction GPT 'questionneur_de_source' si besoin pour poser des questions spÃ©cifiques Ã  propos de l'Ã©tude ou pour obtenir des clarifications supplÃ©mentaires.\n\n[/INSTRUCTION - Ãvaluer l'Objectif de l'Ãtude]",
          "kin": "kinlca",
          "kinDemandeur": "INCHAUSPE Aurore <aurore.inchauspe@boiron.fr>",
          "mailFrom": "From: INCHAUSPE Aurore <aurore.inchauspe@boiron.fr>",
          "mailId": "18d8900b07a269a2",
          "mailSubject": "LCA stodal",
          "mission": "Analyse critique de l'Ã©tude\n\nAurore INCHAUSPE, PhD\nChef de projet Scientifique\nPÃ´le des Affaires Scientifiques et MÃ©dicales Groupe\nTÃ©l. : 85 56\n\n\n[iMAGE tel]\nLe Service Information Boiron est Ã  votre Ã©coute\n\n\nFile attached with email : \"Stodal.pdf\"",
          "missionId": "kinlca-18d8900b07a269a2",
          "sourceGoogleDriveId": "17b8siCt7xk7QJyT3YevgEC0pVfdi3blz",
          "status": "doing",
          "threadFrom": "INCHAUSPE Aurore <aurore.inchauspe@boiron.fr>",
          "threadId": "18d8900b07a269a2",
          "threadSubject": "LCA stodal",
          "date": "2024-02-08T15:00:49.146+01:00",
          "executionId": "150256",
          "query": "/crud_mission/update/execution doing",
          "command": "update",
          "startTimestamp": "2024-02-08T15:00:50.440+01:00",
          "sync": false
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any",
    "saveExecutionProgress": true,
    "executionTimeout": 2400,
    "errorWorkflow": "PYJaVWpuygsfVZry"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [
        14
      ]
    },
    "node:Nico reÃ§oit un email": {
      "lastTimeChecked": 1706021400,
      "possibleDuplicates": [
        "18d36ccb1edf6bcf"
      ]
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    },
    {
      "createdAt": "2023-12-17T21:33:59.044Z",
      "updatedAt": "2023-12-17T21:33:59.044Z",
      "id": "cV0ITFyTfPijMrvR",
      "name": "kin"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-13T13:21:13.000Z",
  "versionId": "b4a2b966-d025-4c66-be74-5e8bbe0f2176"
}