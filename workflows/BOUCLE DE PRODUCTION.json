{
  "active": false,
  "connections": {
    "EXCEPTION - Kin Non-Actif": {
      "main": [
        [
          {
            "node": "kinmatcheur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "kinmail",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recherche Google Scholar": {
      "ai_tool": [
        [
          {
            "node": "kinchercheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de la base d'Ã©tudes": {
      "ai_tool": [
        [
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincir",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincirbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsota",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to binary data": {
      "main": [
        [
          {
            "node": "Update Thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Thread": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "thread": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Producteur": {
      "main": [
        [
          {
            "node": "Convert to binary data",
            "type": "main",
            "index": 0
          },
          {
            "node": "clean mission",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree document": {
      "main": [
        [
          {
            "node": "document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "document": {
      "main": [
        [
          {
            "node": "Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input": {
      "main": [
        [
          {
            "node": "thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "Fetch onoff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Producteur": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "defaultEmbedding": {
      "main": [
        [
          {
            "node": "Prompt Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Prompt": {
      "ai_tool": [
        [
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message au CTO": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinarchitecte",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmail",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinontologie",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message au Client": {
      "ai_tool": [
        [
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Manager",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "kincir",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinlca",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinrsi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsota",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincirbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kindev",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinontologie",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsotabeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmatcheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinarchitecte",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinpo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinevaluateur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kintesteur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinfacturation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "EXCEPTION - Kin Non-Actif",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur d'executions": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Code": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "kincir": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinlca": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinrsi": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsota": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincirbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kindev": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinontologie": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsotabeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmail": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmatcheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinarchitecte": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinpo": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinevaluateur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kintesteur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinfacturation": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manager": {
      "main": [
        [
          {
            "node": "response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Kin": {
      "ai_tool": [
        [
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinarchitecte",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmatcheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreurbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de document source": {
      "ai_tool": [
        [
          {
            "node": "kinlca",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de document": {
      "ai_tool": [
        [
          {
            "node": "Manager",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincir",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinlca",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsota",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincirbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinontologie",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmail",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmatcheur",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "response1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send  Notifications",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listeur de missions": {
      "ai_tool": [
        [
          {
            "node": "kinevaluateur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinfacturation",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Get kin mission doing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get kin mission doing": {
      "main": [
        [
          {
            "node": "IF mission",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF mission": {
      "main": [
        [
          {
            "node": "Send Instructions",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get kin mission done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Instructions": {
      "main": [
        [
          {
            "node": "Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch onoff": {
      "main": [
        [
          {
            "node": "If on",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission set waiting": {
      "main": [
        [
          {
            "node": "Actionneur de Production1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actionneur de production (match)": {
      "ai_tool": [
        [
          {
            "node": "kinmatcheur",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If on": {
      "main": [
        [
          {
            "node": "defaultEmbedding",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "mission set waiting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "clean mission": {
      "main": [
        [
          {
            "node": "entree document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get kin mission done": {
      "main": [
        [
          {
            "node": "IF mission1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF mission1": {
      "main": [
        [
          {
            "node": "mission kinmail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "mission set todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission set todo": {
      "main": [
        [
          {
            "node": "Actionneur de Production",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission kinmail": {
      "main": [
        [
          {
            "node": "nouvelleMission kinmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nouvelleMission kinmail": {
      "main": [
        [
          {
            "node": "Lancement de Mission kinMail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send  Notifications": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "CRUD Mission": {
      "ai_tool": [
        [
          {
            "node": "Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-17T12:47:07.331Z",
  "id": "RCzPi7XT4ijau6eF",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "BOUCLE DE PRODUCTION",
  "nodes": [
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let output = \"[EXCEPTION - Kin Non-Actif]\\n\\nLe Kin \" + $node[\"entree\"].json.kin + \" n'est pas actif ou n'existe pas.\\n\\n[EXCEPTION - Kin Non-Actif]\";\n\nreturn {\"json\": {\"promptProducteur\": output}};"
      },
      "id": "b30ad405-8b7c-4905-b553-729cba27b1f6",
      "name": "EXCEPTION - Kin Non-Actif",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        2120
      ]
    },
    {
      "parameters": {
        "name": "send_email",
        "description": "La fonction \"send_email\" envoie l'email Ã  partir d'une query contenant le contenu de l'email formattÃ© au format HTML, et permet donc au Kin d'envoyer des emails en autonomie.\n\nPour l'utiliser, passe le contenu du mail dÃ©sirÃ© dans \"query\", au format HTML.",
        "workflowId": "rr8aeSM8QYyY8Po4",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.kinDemandeur }}"
            },
            {
              "name": "missionDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.missionDemandeur }}"
            }
          ]
        }
      },
      "id": "b60ceba5-a13c-4435-9fd7-ee2b0592a005",
      "name": "Send Email",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1240,
        1980
      ]
    },
    {
      "parameters": {
        "name": "recherche_google_scholar",
        "description": "La fonction \"recherche_google_scholar\" renvoie la premiÃ¨re page des rÃ©sultats de Google Scholar Ã  partir d'une liste de queries en Anglais, filtrÃ©s et avec une Ã©valuation de leur pertinence. Il est possible de passer la date limite des Ã©tudes.\n\nQuery exemple :\n``\nJe souhaite faire des recherches pour amÃ©liorer l'Ã©quipe de Kin. Etudes aprÃ¨s 2020 :\n- \"Multi-Agent Systems LLM\",\n- \"multi_agent collaboration GPT\",\n- \"Complex systemsÂ agentsÂ LLM\".\n``",
        "workflowId": "syCSVTnhcjp4jtCz",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "7d888ebd-2ba1-49ba-80ff-cfd0f039b76c",
      "name": "Recherche Google Scholar",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2660,
        -120
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_la_base_d_etudes",
        "description": "Le \"questionneur_de_la_base_d_etudes\" retourne une rÃ©ponse issue d'Ã©tudes pertinentes Ã  partir d'un objectif Ã  dÃ©montrer ou une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage :oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "yQ79P9nuVKhkwZpD",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "d0418c0c-9f6a-483e-951f-d7c87ad5e5af",
      "name": "Questionneur de la base d'Ã©tudes",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        3080,
        -120
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "entireThread",
        "destinationKey": "thread",
        "options": {
          "fileName": "={{ $node[\"thread\"].binary.fileName }}",
          "mimeType": "text/markdown",
          "useRawData": true
        }
      },
      "id": "03403065-0cfc-46da-a2c6-74327fdec287",
      "name": "Convert to binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        3260,
        780
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "={{ $node[\"thread\"].json[\"documentGoogleDriveId\"] }}",
          "mode": "id"
        },
        "changeFileContent": true,
        "inputDataFieldName": "thread",
        "newUpdatedFileName": "={{ $node[\"thread\"].binary.thread[\"fileName\"] }}",
        "options": {}
      },
      "id": "955aeec0-3574-4162-a122-9295342ea6d2",
      "name": "Update Thread",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3500,
        780
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Z5nSsC9JGaYw1Ng3",
          "name": "Google Drive DK via Nicolas"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "YWxRZmBa38HYCjnv",
        "options": {}
      },
      "id": "22c290eb-05e2-4a50-8d7a-8c6b8adc36af",
      "name": "thread",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -460,
        900
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "95bfe471-c0e9-4c84-85aa-0e2bf5554ab3",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4680,
        980
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\nif ($json.output != null) {\n  json.output = $json.output;\n} else {\n  json.output = \"[EXCEPTION - Error with OpenAI call]\\n\\n\" + $prevNode.name +\" returned an error when calling OpenAI Assistant\\n\\n[/EXCEPTION - Error with OpenAI call]\"; \n}\n\njson.dernierProducteur = $prevNode.name;\njson.promptProducteur = $node[\"Prompt Producteur\"].json.promptProducteur;\n\njson.entireThread += '\\n\\n---\\n\\n' + json.output;\njson.thread += '\\n\\n---\\n\\n' + json.output;\n\njson.date = $now.toString();\njson.executionId = $execution.id;\n\nreturn {\"json\": json};"
      },
      "id": "56074961-40df-4a44-aec3-3b05e23ee95e",
      "name": "Producteur",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3040,
        980
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"Producteur\"].json;\n\njson.format = \"md\";\n\nreturn {\"json\": json};"
      },
      "id": "7d8eb602-9143-4957-b6ed-cef8b78da123",
      "name": "entree document",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3500,
        980
      ]
    },
    {
      "parameters": {
        "workflowId": "H3fxaSnxjZT6EGhc",
        "options": {}
      },
      "id": "47ea54ca-a3fb-4beb-a0ff-170080b3c96d",
      "name": "document",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3720,
        980
      ]
    },
    {
      "parameters": {},
      "id": "7c02ddc3-ee31-4dae-93c5-0732aef06b62",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -920,
        900
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nreturn {\"json\": json};"
      },
      "id": "e5febf44-35ef-4b23-9c82-ec284e20adab",
      "name": "input",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -680,
        900
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"input\"].json;\n\n// Cleaner les datas utilisÃ©es\ndelete json.output;\ndelete json.dernierProducteur;\ndelete json.promptProducteur;\njson.remainingThread = \"\";\n\n// PrÃ©parer le nouveau thread\njson.entireThread = $node[\"thread\"].json.thread;\njson.thread = $node[\"thread\"].json.thread;\n\n// PrÃ©parer les nouvelles instructions\njson.instructions = json.query?json.query:json.instructions; // Cas fonction GPT\n\nMAX_LENGTH = 10000;\nif (json.thread.length > MAX_LENGTH) {\n    json.thread = \"Le dÃ©but du document est dÃ©jÃ  rÃ©digÃ©, voici le thread[...]\\n\\n\" + json.thread.substring(json.thread.length - MAX_LENGTH);\n    json.remainingThread = json.entireThread.substring(0, json.entireThread.length - MAX_LENGTH);\n}\n\nif (!json.documentGoogleDriveId) {\n  json.documentGoogleDriveId = $node[\"thread\"].json.documentGoogleDriveId;\n}\n\nreturn {\"json\": json};"
      },
      "id": "f2943232-b99c-4e69-ae50-48dd527aa0a6",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -260,
        900
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "=promptProducteur",
              "stringValue": "=MISSION GLOBALE\n===============\n\n{{ $node[\"entree\"].json.mission.length > 10000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.mission.substring($node[\"entree\"].json.mission.length - 10000)}}\n\nTHREAD D'AVANCEMENT\n===============\n\n{{ $node[\"entree\"].json.thread.length > 20000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.thread.substring($node[\"entree\"].json.thread.length - 20000)}}\n\nINSTRUCTIONS\n===============\n\n{{ $node[\"entree\"].json.instructions }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "c8110551-dcae-4a3e-a6eb-2f2b5296f6e6",
      "name": "Prompt Producteur",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        580,
        900
      ]
    },
    {
      "parameters": {
        "workflowId": "=IJeSapyzv0Y9koZ9",
        "options": {}
      },
      "id": "ccea7645-c366-453e-88bb-bf694a62112d",
      "name": "defaultEmbedding",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        380,
        900
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_prompt",
        "description": "Le questionneur_de_prompt retourne un extrait du prompt systÃ¨me du Kin demandÃ© ou une rÃ©pond Ã  une question sur le prompt Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e contenant :\n- Le nom du Kin dont tu souhaites rÃ©cupÃ©rer le prompt,\n- La sections demandÃ©e (Proposition de Valeur, Action nÂ°1, etc.)\n- Verbatim : Si les extraits du prompt doivent Ãªtre retranscrit verbatim",
        "workflowId": "1gSRJ9a1XiIgSYRx",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "c93aedc5-e1fa-4e24-bff1-d881e1eb03bf",
      "name": "Questionneur de Prompt",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2400,
        540
      ]
    },
    {
      "parameters": {
        "name": "message_au_cto",
        "description": "La fonction message_au_cto envoie le message passÃ© dans \"query\" au CTO de DigitalKin, Nicolas Lester Reynolds.\n\nIl peut Ãªtre utilisÃ© pour signaler un problÃ¨me, demander de l'aide ou une modification, demander un dÃ©blocage, ou suggÃ©rer une amÃ©lioration.",
        "workflowId": "NjRYPuz1EgoPxWfP",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "525488b7-c5f1-4d1e-a503-4a936b97afd9",
      "name": "Message au CTO",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2520,
        1620
      ]
    },
    {
      "parameters": {
        "name": "message_au_client",
        "description": "La fonction message_au_client envoie le message passÃ© dans \"query\" au commenditaire de la mission.\n\nIl peut Ãªtre utilisÃ© pour demander des prÃ©cisions, demander des validations, signaler un problÃ¨me, ou tout autre chose.",
        "workflowId": "NjRYPuz1EgoPxWfP",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "2858802a-37b7-47c6-893c-4840b205ee1e",
      "name": "Message au Client",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2180,
        1940
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincir",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinlca",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2a5fab45-e697-4ba3-96ea-3f1bdc5a7655",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinrsi",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsota",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "72d86350-5484-42da-86d0-02205e464813",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincirbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6485b142-ec38-459a-9d57-c73998d1ec69",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kindev",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6f847cf9-95ef-46d0-a2fc-dd71c81e9e7f",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinontologie",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b1b17da-cb6e-45e2-94b0-6489cc899831",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "74f492b7-3bec-4816-ae99-a1a88314f9ff",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsotabeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b7fbcf3-4e28-4b4a-9c08-ce4e3b263604",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "d31caef0-4d25-4ed3-9e1d-eea4ca6dbc76",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "e830f692-818a-4c36-a976-38294ef3f1c8",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2caba844-9c03-4c51-8262-9be51e095df7",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmail",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "bd30facf-18e2-45ab-9c15-61b1a5aa0661",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmatcheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "dec09ac9-dbf2-48a1-88c1-274f1d1309ee",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinarchitecte",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "58985013-b664-435a-8964-e97aaa0935b6",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinpo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "873de981-5c16-4165-8467-009d17277dfa",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinevaluateur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "b2a3e685-74d6-46b7-9e2d-03a95d595ea0",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kintesteur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "cd4effcc-9084-463b-ae02-db173847297e",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinfacturation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "35511810-4ea6-4cba-81db-2a0d6198b44f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        780,
        740
      ]
    },
    {
      "parameters": {
        "name": "questionneur_d_executions",
        "description": "Le questionneur_d_executions retourne une rÃ©ponse issue de les executions n8n de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (filtre optionnel) Le status des executions \"status: error\" (default), \"status: waiting\", \"status: success\"\n- (filtre optionnel) Le workflowId des executions dÃ©sirÃ© \"workflowId: %ID%\"\n- Les informations que tu cherches, avec les  Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "ZTyYwHXmIk6UTURZ",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "4b527df8-4fe7-40b1-9422-72574a541b2c",
      "name": "Questionneur d'executions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2800,
        200
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_code",
        "description": "Le Questionneur de code retourne une rÃ©ponse issue de la codebase n8n de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "kLKx8F1dt8gfkjry",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "70df518c-8c09-41d0-b6ab-4e39606bc96c",
      "name": "Questionneur de Code",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2600,
        200
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_bU27N3NS5XZ0lH4AFOuN8kb7",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "705274a2-abf4-4031-a7f1-58fc18d7f395",
      "name": "kincir",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1640,
        -140
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_581bbg7Bmja1nCBKeiGg9Rgu",
        "text": "={{ $json.promptProducteur }}",
        "nativeTools": [
          "code_interpreter"
        ],
        "options": {}
      },
      "id": "f9e05a8a-d972-4464-92ed-25b4ec2d142d",
      "name": "kinlca",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1640,
        100
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_WKY0lRXB0rrJTFIm3HYv8jlE",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a441e8e3-0802-4dc2-af20-6bd09e04ce0d",
      "name": "kinrsi",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1640,
        360
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_7abHKvQqtVij29X6ybyEvAbZ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a4c0ce08-9cd7-4ded-bdbe-2d682c579eb6",
      "name": "kinsota",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1640,
        580
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_TwVBZeoLx80udowj5MIoG6Pq",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a5006fdd-836e-4162-8aba-f641634ffc78",
      "name": "kincirbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        -80
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_KEwBhc34Qsh3dcu2Gu8bgFne",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "abb1b363-7706-4b86-a21b-83d3e1c9819d",
      "name": "kindev",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        160
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_3pQx4lfP0EN6Jstj8kozdBtC",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a353ab78-cdd5-4eaa-ab35-6807844c5773",
      "name": "kinontologie",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        400
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "3e041b0a-99e2-476c-b22f-d0ac74d6c94c",
      "name": "kinchercheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        640
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_MHJDvt7FT6gcWBFdJsZqJ52C",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "d714c7bc-4ca8-4ffd-8e69-ed576ab4e76d",
      "name": "kinsotabeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2700,
        -400
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "5d7bae62-2aaf-4b09-82fb-309e7858ee5a",
      "name": "kinchercheurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        1180
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_i59drQwQdShF5SmdHgqd3gXG",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "1eb9f059-f81e-471f-891c-6e1501327452",
      "name": "kincadreur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        1440
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_EwmKBIJWKqCJECb0nVBVju45",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "0c203a91-b441-489b-811c-696a03f79c73",
      "name": "kincadreurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        1640
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_RKZEJLbWald8azZuvxrnnSxL",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "66c38b58-db91-47b3-a21a-81f51ac5b0c1",
      "name": "kinmail",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        1860
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "87a95772-b560-4d27-9d4a-99dae4e30442",
      "name": "kinmatcheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1200,
        2120
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_L1WY5sdn3wnugM8RoJZBHETh",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "86f62d0c-47f6-4112-a167-fd48ebe111c7",
      "name": "kinarchitecte",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1600,
        1360
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "84b0acda-ca8d-46da-bc63-39e8a65b44a3",
      "name": "kinpo",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1600,
        1580
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "47796ca9-bfe1-4b87-9655-ee84850f6fca",
      "name": "kinevaluateur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1600,
        1800
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "74f07f2e-5f09-4003-9fec-0542d4e02973",
      "name": "kintesteur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1600,
        2020
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "37286259-2d70-43fc-92ff-8a21fa3546aa",
      "name": "kinfacturation",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1600,
        2220
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_NRJfqzvKf73U2CjrI4bqMSf5",
        "text": "=[INFORMATIF - Mission du Producteur]\n\n{{ $node[\"entree\"].json.mission.length > 5000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.mission.substring($node[\"entree\"].json.mission.length - 5000)}}\n\n[/INFORMATIF - Mission du Producteur]\n\n===\n\n[INFORMATIF - Document Final dÃ©jÃ  rÃ©digÃ© Ã  ce stade]\n\n{{ $node[\"document\"].json.document.length > 5000 ? \"[...]\\n\\n\" : \"\" }}{{ $node[\"document\"].json.document.substring($node[\"document\"].json.document.length - 5000)}}\n\n[/INFORMATIF - Document Final dÃ©jÃ  rÃ©digÃ© Ã  ce stade]\n\n===\n\n[INFORMATIF - DerniÃ¨res Instructions que tu as donnÃ©es au {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n{{ $node[\"entree\"].json.instructions }}\n\n[/INFORMATIF - DerniÃ¨res Instructions donnÃ©es au {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n---\n[INFORMATIF - RÃ©daction rÃ©alisÃ©e / Actions effectuÃ©es par {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n{{ $node[\"Producteur\"].json.output.length > 5000 ? \"[...]\" : \"\" }}{{ $node[\"Producteur\"].json.output.substring($node[\"Producteur\"].json.output.length - 5000)}}\n\n[/INFORMATIF - RÃ©daction rÃ©alisÃ©e / Actions effectuÃ©es par {{  $node[\"Producteur\"].json.dernierProducteur }}]\n\n===\n\n[INSTRUCTIONS : Manage la Boucle de Production]\n\nEffectue les Actions  1, 2, 3 et 4 de ton processus en une seule fois, de maniÃ¨re Ã  :\n- Faire le Suivi de l'Avancement de la Mission,\n- DÃ©terminer la Prochaine Action,\n- DÃ©clencher la prochaine Action,\n- DÃ©clencher l'email de suivi si besoin.\n\n[/INSTRUCTIONS : Determination de la prochaine Ã©tape]",
        "options": {}
      },
      "id": "0b4c1b91-ae71-4843-b103-0277f8f487b4",
      "name": "Manager",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        3980,
        980
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "questionneur_de_kin",
        "description": "La fonction questionneur_de_kin permet de poser Ã  un Kin de l'Ã©quipe une question rapide  qui n'est pas en rapport avec une mission spÃ©cifique.\n\nPour bien l'utiliser :\n- Mentionne le nom du @Kin,\n- Explique ton contexte et ton intention d'usage,\n- ta question.",
        "workflowId": "m3wfYxyTxFXqib9D",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            }
          ]
        }
      },
      "id": "d879938d-ebc2-4c36-85c5-6d96d0fcb272",
      "name": "Questionneur de Kin",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2380,
        2140
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_document_source",
        "description": "Le questionneur_de_document_source retourne une rÃ©ponse issue d'un document source spÃ©cifique Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- La citation de l'Ã©tude,\n- Les informations que tu cherches,\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire,\n- Le format de rÃ©ponse dÃ©sirÃ©.\n",
        "workflowId": "anybPoo9G98Nx3qW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "documentGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.sourceGoogleDriveId }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "0f130d0e-3a84-4baa-9a59-1e35c62f9dce",
      "name": "Questionneur de document source",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2160,
        140
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_document",
        "description": "=Le questionneur_de_document retourne une rÃ©ponse issue du contenu du document final sur lequel travaille le Kin Producteur, Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (optionnel) Si tu souhaites du verbatim,\n- Les informations que tu cherches,\n- L'intention d'usage : tu souhaites faire de la rÃ©ponse,\n- Le format de rÃ©ponse dÃ©sirÃ©.\n",
        "workflowId": "anybPoo9G98Nx3qW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "documentGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.documentGoogleDriveId }}"
            },
            {
              "name": "format",
              "stringValue": "md"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "4faf9751-9732-4db7-9f09-fb28a63018a4",
      "name": "Questionneur de document",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2200,
        400
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"Producteur\"].json;\n\njson.instructions = $node[\"Manager\"].json.output;\njson.executionId = $execution.id;\n\nreturn {\"json\" : json};"
      },
      "id": "8037e86a-05b7-42ab-9041-974aec0b6322",
      "name": "response1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4380,
        980
      ]
    },
    {
      "parameters": {
        "name": "listeur_de_missions",
        "description": "Le listeur_de_missions permet de rÃ©cupÃ©rer la liste des missions en cours, terminÃ©es, et en attente.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (optionnel) Le statut des tÃ¢ches dÃ©sirÃ©es (toto/doing/done/waiting)\n- (filtre optionnel) Le Kin dÃ©sirÃ©\n- Si tu cherches des informations particuliÃ¨res,\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "7gSW7ZaAHc61PVPS",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "587f90b0-7308-4b02-8623-3284b0c6c4b0",
      "name": "Listeur de missions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2500,
        1920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kinbase-71e4f70.svc.apw5-4e34-81fa.pinecone.io/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"missions\",\n  \"includeMetadata\": true,\n  \"topK\": 1,\n  \"filter\": { \"threadId\" : \"{{ $node[\"clean mission\"].json.threadId }}\", \"kin\": \"{{ $node[\"clean mission\"].json.kin }}\", \"status\": \"doing\"},\n  \"vector\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }}\n}",
        "options": {}
      },
      "id": "a51f1487-97fe-4bfa-b8d1-3fc65f69129c",
      "name": "Get kin mission doing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4900,
        980
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ Object.keys($json.matches).length > 0 }}",
              "value2": true
            }
          ]
        }
      },
      "id": "2bd12cf2-0ebc-4dd9-8536-9c6239cd738f",
      "name": "IF mission",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5120,
        980
      ]
    },
    {
      "parameters": {
        "chatId": "-4130957615",
        "text": "=PAS PASSE DANS ACTIONNEUR DE PRODUCTION #{{ $execution.id }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "MarkdownV2"
        }
      },
      "id": "fd7398db-12bf-4f7c-927e-0865cb0aaec1",
      "name": "Send Instructions",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        5320,
        960
      ],
      "credentials": {
        "telegramApi": {
          "id": "rUijC7XE7TL12tph",
          "name": "Lester AGI"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "={{ $vars.vectorDatabaseEndpoint }}vectors/fetch",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"onoff\",\n  \"ids\": [\"onoff\"]\n}",
        "options": {}
      },
      "id": "c7c6356a-39b4-4879-9df0-e8b315e52340",
      "name": "Fetch onoff",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -60,
        900
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "MGND8ynCD26RRnsW",
        "options": {}
      },
      "id": "75686575-0544-43e3-8365-dd4978e5425e",
      "name": "Actionneur de Production1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        380,
        1120
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/status waiting\";\n\nreturn {\"json\": json};"
      },
      "id": "ade87496-681d-4df5-881a-7f9fb6665942",
      "name": "mission set waiting",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        160,
        1120
      ]
    },
    {
      "parameters": {
        "name": "actionneur_de_production",
        "description": "La fonction \"actionneur_de_production\" permet au Manager d'effectuer des actions sur les missions. Permet de lancer, arrÃªter, ou complÃ©ter la mission en cours d'execution.\n\nquery :\n/status todo/doing/waiting/done : Modifie le statut d'une mission. ex : '/status todo' kinName\n\nExemples :\n- Continuer la boucle de production: \"/status todo kinname\\n\\n%TODOLIST% et %Prochaine action Ã  rÃ©aliser%\"\n- GÃ©rer une exception : \"/status waiting kinname\\n\\n%Explication de l'exception% \"\n- ComplÃ©ter une mission : \"/status done kinname\\n\\n%Travail acocmpli%\"\n- Eaner une nouvelle mission : \"/nouvellemission kinname\\n\\n%Description dÃ©tailÃ©e% \"",
        "workflowId": "MGND8ynCD26RRnsW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "json",
              "stringValue": "={{ JSON.stringify($node[\"input\"].json) }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "={{ $node[\"input\"].json.kinDemandeur }}"
            },
            {
              "name": "missionDemandeur",
              "stringValue": "={{ $node[\"input\"].json.missionDemandeur }}"
            }
          ]
        }
      },
      "id": "2660a464-bc13-46d6-8124-1971b7f8fc23",
      "name": "Actionneur de production (match)",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1180,
        2340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "026b34bb-7dfa-4fa4-af16-d78a4e166711",
              "leftValue": "={{ $json.vectors.onoff.metadata.value }}",
              "rightValue": "on",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "31242434-5483-4b4c-90ac-006ddf022057",
      "name": "If on",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        160,
        900
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function truncateStringsInJson(obj) {\n    // VÃ©rifier si l'objet est null ou undefined\n    if (obj === null || obj === undefined) {\n        return obj;\n    }\n\n    // Parcourir les propriÃ©tÃ©s de l'objet\n    for (let key in obj) {\n        if (typeof obj[key] === 'string' && key !== \"json\") {\n            // Tronquer les strings Ã  500 caractÃ¨res et ajouter \"[...]\" si nÃ©cessaire\n            if (obj[key].length > 5000) {\n                obj[key] = obj[key].substring(0, 5000) + \"[...]\";\n            }\n        } else if (typeof obj[key] === 'object') {\n            // Appliquer la fonction de maniÃ¨re rÃ©cursive pour les objets et tableaux\n            truncateStringsInJson(obj[key]);\n        }\n    }\n\n    return obj;\n}\n\n// Function to remove null attributes from a JSON object\nfunction removeNullAttributes(obj) {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] === null || obj[key] == \"\") {\n            delete obj[key];\n        } else if (typeof obj[key] === 'object') {\n            // Recursive call for nested objects\n            removeNullAttributes(obj[key]);\n        }\n    });\n}\n\nlet json = JSON.parse(JSON.stringify($json));\n\ndelete json.json;\ndelete json.query;\ndelete json.response;\ndelete json.command;\n\ndelete json.thread;\ndelete json.entireThread;\ndelete json.promptProducteur;\n\n\njson = truncateStringsInJson(json);\n\n// Remove threads from the json object\nremoveNullAttributes(json);\n\nif (json.mission )  {\n  json.mission = json.mission.length > 10000 ? \"[...]\" : \"\" + json.mission.substring(json.mission.length - 10000);\n}\n\nreturn {\"json\": json};"
      },
      "id": "8fe697df-fe1e-4424-8bfb-618f5cd4f0d5",
      "name": "clean mission",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3280,
        980
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://kinbase-71e4f70.svc.apw5-4e34-81fa.pinecone.io/query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"missions\",\n  \"includeMetadata\": true,\n  \"topK\": 1,\n  \"filter\": { \"threadId\" : \"{{ $node[\"clean mission\"].json.threadId }}\", \"kin\": \"{{ $node[\"clean mission\"].json.kin }}\", \"status\": \"done\"},\n  \"vector\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }}\n}",
        "options": {}
      },
      "id": "3faf1142-fde6-4f3b-9569-9b8819cc5ea0",
      "name": "Get kin mission done",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5320,
        1160
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ Object.keys($json.matches).length > 0 }}",
              "value2": true
            }
          ]
        }
      },
      "id": "91dfafac-274c-473b-9372-03e88b0c8011",
      "name": "IF mission1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5500,
        1160
      ]
    },
    {
      "parameters": {
        "workflowId": "MGND8ynCD26RRnsW",
        "options": {}
      },
      "id": "7d7d0edb-865b-46dd-b2ca-0d4b42b7a765",
      "name": "Actionneur de Production",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        5980,
        1180
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"clean mission\"].json;\n\njson.query = \"/status todo\";\n\nreturn {\"json\": json};"
      },
      "id": "0cd1862c-abd8-4614-8b25-600f008aaaeb",
      "name": "mission set todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5760,
        1180
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "mission",
              "stringValue": "=[INFORMATIF - Date]\n\n{{ $node[\"entree\"].json.date }}\n\n[/INFORMATIF - Date]\n\n===\n\n[INFORMATIF - Client]\n\n{{ $node[\"entree\"].json.client }}\n\n[/INFORMATIF - Client]\n\n\n===\n\n[INFORMATIF - Mission]\n\n{{ $node[\"entree\"].json.mission.length > 5000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.mission.substring($node[\"sortie\"].json.mission.length - 5000)}}\n\n[/INFORMATIF - Mission]\n\n\n===\n\n[INFORMATIF - Dernier Kin Producteur ]\n\n{{ $node[\"entreer\"].json.kin }}\n\n[/INFORMATIF - Dernier Kin Producteur ]\n\n\n===\n\n[INFORMATIF - DerniÃ¨re production du Kin Producteur]\n\n{{ $node[\"Producteur\"].json.output.length > 8000 ? \"[...]\" : \"\" }}{{ $node[\"Producteur\"].json.output.substring($node[\"Producteur\"].json.output.length - 8000)}}\n\n[/INFORMATIF - DerniÃ¨re production du Kin Producteur]\n\n\n===\n\n[INFORMATIF - Dernier Message du KinManager]\n\n{{ $node[\"Manager\"].json.output }}\n\n[/INFORMATIF - Dernier Message du KinManager]\n\n===\n\n[PROCESSUS - Mission : RÃ©daction & Envoi D'Email]\n\nTa mission est de rÃ©diger et d'envoyer le mail appropriÃ© au client Ã  partir des informations dont tu disposes.\n\n[/PROCESSUS - Mission : RÃ©daction & Envoi D'Email]"
            }
          ]
        },
        "options": {}
      },
      "id": "0f9237ab-0467-4856-8a76-c42644268636",
      "name": "mission kinmail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        5760,
        1000
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = JSON.parse(JSON.stringify($node[\"sortie\"].json));\n\ndelete json.query;\n\n// Mettre Ã  jour le Kin\njson.kinDemandeur = json.kin;\njson.kin = \"kinmail\";\njson.format = \"pdf\";\n\n// Mettre Ã  jour la mission\njson.missionDuDemandeur = json.mission;\njson.mission = $node[\"mission kinmail\"].json.mission;\n\n// Function to remove null attributes from a JSON object\nfunction removeNullAttributes(obj) {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] === null || obj[key] == \"\") {\n            delete obj[key];\n        } else if (typeof obj[key] === 'object') {\n            // Recursive call for nested objects\n            removeNullAttributes(obj[key]);\n        }\n    });\n}\n\n// Function to remove threads\nfunction removePropertiesWithThread(obj) {\n    for (let key in obj) {\n        if (key.toLowerCase().includes('thread')) {\n            // Supprime la propriÃ©tÃ© si la clÃ© contient 'thread'\n            delete obj[key];\n        } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n            // Appel rÃ©cursif si la propriÃ©tÃ© est un objet\n            removePropertiesWithThread(obj[key]);\n        }\n    }\n}\n\n// Remove threads from the json object\nremoveNullAttributes(json);\n\n// Remove null attributes from the json object\nremovePropertiesWithThread(json);\n\nreturn {\"json\": json};"
      },
      "id": "4710bd82-3e05-41e2-9ddd-54e8dc00963d",
      "name": "nouvelleMission kinmail",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6000,
        1000
      ]
    },
    {
      "parameters": {
        "workflowId": "DXYPhavwlYlTKPqu",
        "options": {}
      },
      "id": "30f44149-398a-49df-819d-e345aaa0f329",
      "name": "Lancement de Mission kinMail",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        6200,
        1000
      ]
    },
    {
      "parameters": {
        "workflowId": "=EYWde6gUS9Qq2ok7",
        "options": {}
      },
      "id": "d748b04c-f27c-4140-a626-9d4392c540d3",
      "name": "Send  Notifications",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4540,
        1160
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "name": "crud_mission",
        "description": "La fonction \"crud_mission\" permet au Manager d'effectuer des actions sur les missions. Permet de lancer, arrÃªter, ou modifier la mission en cours d'execution.\n\nquery :\n/status todo/doing/waiting/done : Modifie le statut de la mission en cours (ex : '/status done')\n\nExemples :\n- Continuer la boucle de production: \"/status todo kinname\\n\\n%TODOLIST% et %Prochaine action Ã  rÃ©aliser%\"\n- GÃ©rer une exception : \"/status waiting kinname\\n\\n%Explication de l'exception% \"\n- ComplÃ©ter une mission : \"/status done kinname\\n\\n%Travail acocmpli%\"\n- Eaner une nouvelle mission : \"/nouvellemission kinname\\n\\n%Description dÃ©tailÃ©e% \"",
        "workflowId": "MGND8ynCD26RRnsW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "json",
              "stringValue": "={{ JSON.stringify($node[\"clean mission\"].json) }}"
            }
          ]
        }
      },
      "id": "85cafd5a-dd48-4b2e-8eec-2a612785ee30",
      "name": "CRUD Mission",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        4180,
        1240
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "client": "dynergie",
          "documentGoogleDriveId": "1IRdsFCVDx76on6roj5XoJg9oy1UVPGvW",
          "executionId": "113335",
          "instructions": "[PROCESSUS - Avancement de la Mission]\n\nTODOLIST :\n- **RÃ©cupÃ©ration des Ã©tudes via la fonction \"recherche_google_scholar\"** : TODO\n- **Validation du corpus d'Ã©tudes** : TODO\n\n[/PROCESSUS - Avancement de la Mission]\n\n---\n\n[INSTRUCTION - Suivi et Activation]\n\nkinsotabeta, la premiÃ¨re Ã©tape de ta mission est de lancer une recherche approfondie sur \"Soudure hybride laser arc de piÃ¨ces en alliages d'aluminium\" avec une attention particuliÃ¨re aux Ã©tudes publiÃ©es aprÃ¨s 2015. Utilise la fonction \"recherche_google_scholar\" pour rassembler un corpus d'Ã©tudes pertinentes. Ce corpus constituera la base de l'Ã©tat de l'art demandÃ© par TOMA pour amÃ©liorer la qualitÃ© des soudures en alliages d'aluminium, dans le contexte trÃ¨s spÃ©cifique des systÃ¨mes d'Ã©changeurs de chaleur, avec un accent sur la durabilitÃ© et la conductivitÃ© thermique.\n\n[/INSTRUCTION - Suivi et Activation]\n\n---\n\n[actionneur_de_production]",
          "kin": "kinsotabeta",
          "mailFrom": "From: Lester Reynolds <lreynolds@dynergie.fr>",
          "mailId": "18d65c0a0f3a5c9b",
          "mailSubject": "Ã©tat de l'art. * Soudure hybrique laser arc de piÃ©ces en alliages d'aluminium",
          "mission": "[PROCESSUS - MISSION]\n\nCONSIGNE DE LA MISSION:\n* Je voudrais un Ã©tat de l'art.\n* Soudure hybrique laser arc de piÃ©ces en alliages d'aluminium\n* Les rÃ©fÃ©rences devront etre postÃ©rieures Ã  : 2015\n\nCONTEXTE DU PORTEUR\nNom de l'entitÃ© qui porte les travaux de recherche* : TOMA\nProposition de valeur de l'entitÃ©* : Conception, prototypage et fabrication\nde systÃ¨mes d'Ã©change de chaleur\nDescription succincte des principales activitÃ©s* : Conception, prototypage\net fabrication\n\nCONTEXTE APPLICATIF\nApplication qui utilisera le rÃ©sultat des travaux de recherche* : SystÃ¨mes\nd'Ã©changeur de chaleur\nBut applicatif (proposition de valeur de l'application)* : TransfÃ©rer la\nchaleur d'un endroit Ã  un autre\nContexte d'usage de l'application* : tout domaine d'application, mais en\nprioritÃ©, la mobilitÃ©, les application industrielles, le secteur maritime,\net la cogÃ©nÃ©ration Ã©nergÃ©tique\nIdÃ©al applicatif (le meilleur effet possible de votre application)* :\nTransfert parfait et immÃ©diat de toute la chaleur non dÃ©sirÃ©e.\nContraintes sur les moyens disponibles (optionnel) : Les solution doivent\npouvoir etre produites industriellement et rester compÃ©titives\nExigences sur les rÃ©sultats attendus (optionnel) : Les solution doivent\nprÃ©senter une excellente efficacitÃ© et durabilitÃ©\n\nPROJET DE RECHERCHE\nQuestion principale de recherche (celle Ã  laquelle contribuent ultimement\ntous les travaux)* : Comment amÃ©liorer la qualitÃ© des soudure des piÃ©ces\nmÃ©talliques en alliage d'aluminium\n\nTravaux de recherche envisagÃ©s dans le cadre de ce projet (Vous pouvez\nindiquer plusieurs travaux de recherche, en prÃ©cisant pour chacun) :\nDÃ©signation des travaux* : Modulation des paramÃ¨tres de la soudure LASER arc\nDescription succincte des travaux* : Etude de l'influence des paramÃ¨tres de\nmodulation du faisceau laser dans le cadre de la soudure hybride laser-arc\nde piÃ©ces en alliage d'aluminium\nObjectif de recherche associÃ© aux travaux* :  Mieux comprendre l'influence\ndes paramÃ¨tres sur la qualitÃ© des soudures obtenues\nApport applicatif attendu des travaux* : AmÃ©lioration de la durabilitÃ© et\nde la conductivitÃ© thermique des soudures\nFocus de l'Ã©tat de l'art sur certains sous objectifs de recherche\n(optionnel) :\nFocus sur certains domaines scientifiques (optionnel) :\n\nDÃ©signation des travaux* : formulation de barres d'apport\nDescription succincte des travaux* :  Nous Ã©tudions l'influence de la\nformulation des barres sur la qualitÃ© des soudures obtenues dans le cadre\nde soudure hybrique laser-ard de piÃ¨ces en alliage d'aluminium.\nObjectif de recherche associÃ© aux travaux* : Nous cherchons Ã  trouver de\nmeilleures formulation des barres d'apport dans le cadre de la soudure\nlaser arc de piÃ©ces d'alliages d'aluminium\nApport applicatif attendu des travaux* : AmÃ©lioration de la durabilitÃ© et\nde la conductivitÃ© thermique des soudures\nFocus de l'Ã©tat de l'art sur certains sous objectifs de recherche\n(optionnel) :\nFocus sur certains domaines scientifiques (optionnel) :\n\n\n[/PROCESSUS - MISSION]\n\n---\n",
          "status": "todo",
          "threadFrom": "Lester Reynolds <lreynolds@dynergie.fr>",
          "threadId": "18d65c0a0f3a5c9b",
          "threadSubject": "Ã©tat de l'art. * Soudure hybrique laser arc de piÃ©ces en alliages d'aluminium",
          "startTimestamp": "2024-02-01T18:54:20.453+01:00",
          "sync": false
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any",
    "saveExecutionProgress": true,
    "executionTimeout": 2400,
    "errorWorkflow": "PYJaVWpuygsfVZry"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [
        14
      ]
    },
    "node:Nico reÃ§oit un email": {
      "lastTimeChecked": 1706021400,
      "possibleDuplicates": [
        "18d36ccb1edf6bcf"
      ]
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    },
    {
      "createdAt": "2023-12-17T21:33:59.044Z",
      "updatedAt": "2023-12-17T21:33:59.044Z",
      "id": "cV0ITFyTfPijMrvR",
      "name": "kin"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-01T17:55:35.000Z",
  "versionId": "2544d2bf-4fa3-42d8-bc3d-dd0562e7b220"
}