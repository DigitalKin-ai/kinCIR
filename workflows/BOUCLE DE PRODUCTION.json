{
  "active": false,
  "connections": {
    "EXCEPTION - Kin Non-Actif": {
      "main": [
        [
          {
            "node": "kinmatcheur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "kinmail",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recherche Google Scholar": {
      "ai_tool": [
        [
          {
            "node": "kinchercheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de la base d'Ã©tudes": {
      "ai_tool": [
        [
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsota",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert to binary data": {
      "main": [
        [
          {
            "node": "Update Thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Thread": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "thread": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Producteur": {
      "main": [
        [
          {
            "node": "Convert to binary data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send  Notifications",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input": {
      "main": [
        [
          {
            "node": "thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "Fetch onoff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Producteur": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "defaultEmbedding": {
      "main": [
        [
          {
            "node": "Prompt Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Prompt": {
      "ai_tool": [
        [
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message au CTO": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinarchitecte",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinontologie",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message au Client": {
      "ai_tool": [
        [
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur d'executions": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Code": {
      "ai_tool": [
        [
          {
            "node": "kindev",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "kincir": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinlca": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinrsi": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsota": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincirbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kindev": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinontologie": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinsotabeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kincadreurbeta": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmail": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmatcheur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinarchitecte": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinpo": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinevaluateur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kintesteur": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinfacturation": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Kin": {
      "ai_tool": [
        [
          {
            "node": "kinpo",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinarchitecte",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinrsi",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kincadreurbeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinmatcheur",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de document": {
      "ai_tool": [
        [
          {
            "node": "kinlca",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsota",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinsotabeta",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinchercheurbeta",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Listeur de missions": {
      "ai_tool": [
        [
          {
            "node": "kinevaluateur",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "kinfacturation",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Fetch onoff": {
      "main": [
        [
          {
            "node": "If on",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If on": {
      "main": [
        [
          {
            "node": "defaultEmbedding",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "mission set todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send  Notifications": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "CRUD Mission": {
      "ai_tool": [
        [
          {
            "node": "kinmatcheur",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "mission set todo": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de source": {
      "ai_tool": [
        [
          {
            "node": "kinlca",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "BOUCLE DE MANAGEMENT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "kincir",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinlca",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinrsi",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsota",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincirbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kindev",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinontologie",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinsotabeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinchercheurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kincadreurbeta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinmatcheur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinarchitecte",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinpo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinevaluateur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kintesteur",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinfacturation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "kinontologiedomaine",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "EXCEPTION - Kin Non-Actif",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinontologiedomaine": {
      "main": [
        [
          {
            "node": "Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-17T12:47:07.331Z",
  "id": "RCzPi7XT4ijau6eF",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "BOUCLE DE PRODUCTION",
  "nodes": [
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let output = \"[EXCEPTION - Kin Non-Actif]\\n\\nLe Kin \" + $node[\"entree\"].json.kin + \" n'est pas actif ou n'existe pas.\\n\\n[EXCEPTION - Kin Non-Actif]\";\n\nreturn {\"json\": {\"promptProducteur\": output}};"
      },
      "id": "b30ad405-8b7c-4905-b553-729cba27b1f6",
      "name": "EXCEPTION - Kin Non-Actif",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2180,
        1740
      ]
    },
    {
      "parameters": {
        "name": "send_email",
        "description": "La fonction \"send_email\" envoie l'email Ã  partir d'une query contenant le contenu de l'email formattÃ© au format HTML, et permet donc au Kin d'envoyer des emails en autonomie.\n\nPour l'utiliser, passe le contenu du mail dÃ©sirÃ© dans \"query\", au format HTML.",
        "workflowId": "rr8aeSM8QYyY8Po4",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.kinDemandeur }}"
            },
            {
              "name": "missionDemandeur",
              "stringValue": "={{ $node[\"entree\"].json.missionDemandeur }}"
            },
            {
              "name": "mailId",
              "stringValue": "={{ $node[\"entree\"].json.mailId }}"
            }
          ]
        }
      },
      "id": "b60ceba5-a13c-4435-9fd7-ee2b0592a005",
      "name": "Send Email",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1400,
        1320
      ]
    },
    {
      "parameters": {
        "name": "recherche_google_scholar",
        "description": "La fonction \"recherche_google_scholar\" renvoie la premiÃ¨re page des rÃ©sultats de Google Scholar Ã  partir d'une liste de queries en Anglais, filtrÃ©s et avec une Ã©valuation de leur pertinence. Il est possible de passer la date limite des Ã©tudes.\n\nQuery exemple :\n``\nJe souhaite faire des recherches pour amÃ©liorer l'Ã©quipe de Kin. Etudes aprÃ¨s 2020 :\n- \"Multi-Agent Systems LLM\",\n- \"multi_agent collaboration GPT\",\n- \"Complex systemsÂ agentsÂ LLM\".\n``",
        "workflowId": "syCSVTnhcjp4jtCz",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "7d888ebd-2ba1-49ba-80ff-cfd0f039b76c",
      "name": "Recherche Google Scholar",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1400,
        -200
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_la_base_d_etudes",
        "description": "Le \"questionneur_de_la_base_d_etudes\" retourne une rÃ©ponse issue d'Ã©tudes pertinentes Ã  partir d'un objectif Ã  dÃ©montrer ou une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage :oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ© (verbatim ou non)",
        "workflowId": "yQ79P9nuVKhkwZpD",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "d0418c0c-9f6a-483e-951f-d7c87ad5e5af",
      "name": "Questionneur de la base d'Ã©tudes",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1540,
        -200
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "entireThread",
        "destinationKey": "thread",
        "options": {
          "fileName": "={{ $node[\"thread\"].binary.fileName }}",
          "mimeType": "text/markdown",
          "useRawData": true
        }
      },
      "id": "03403065-0cfc-46da-a2c6-74327fdec287",
      "name": "Convert to binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        3160,
        800
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "={{ $node[\"thread\"].json[\"documentGoogleDriveId\"] }}",
          "mode": "id"
        },
        "changeFileContent": true,
        "inputDataFieldName": "thread",
        "newUpdatedFileName": "={{ $node[\"thread\"].binary.thread[\"fileName\"] }}",
        "options": {}
      },
      "id": "955aeec0-3574-4162-a122-9295342ea6d2",
      "name": "Update Thread",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3400,
        800
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Z5nSsC9JGaYw1Ng3",
          "name": "Google Drive DK via Nicolas"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "YWxRZmBa38HYCjnv",
        "options": {}
      },
      "id": "22c290eb-05e2-4a50-8d7a-8c6b8adc36af",
      "name": "thread",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -780,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\nif ($json.output != null) {\n  json.output = $json.output;\n} else {\n  json.output = \"[EXCEPTION - Error with OpenAI call]\\n\\n\" + $prevNode.name +\" returned an error when calling OpenAI Assistant\\n\\n[/EXCEPTION - Error with OpenAI call]\"; \n}\n\njson.dernierProducteur = $prevNode.name;\njson.promptProducteur = $node[\"Prompt Producteur\"].json.promptProducteur;\n\njson.entireThread += '\\n\\n---\\n\\n' + json.output;\njson.thread += '\\n\\n---\\n\\n' + json.output;\n\nreturn {\"json\": json};"
      },
      "id": "56074961-40df-4a44-aec3-3b05e23ee95e",
      "name": "Producteur",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2960,
        960
      ]
    },
    {
      "parameters": {},
      "id": "7c02ddc3-ee31-4dae-93c5-0732aef06b62",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1240,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nreturn {\"json\": json};"
      },
      "id": "e5febf44-35ef-4b23-9c82-ec284e20adab",
      "name": "input",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1000,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"input\"].json;\n\n// Cleaner les datas utilisÃ©es\ndelete json.output;\ndelete json.dernierProducteur;\ndelete json.promptProducteur;\njson.remainingThread = \"\";\n\n// PrÃ©parer le nouveau thread\njson.entireThread = $node[\"thread\"].json.thread;\njson.thread = $node[\"thread\"].json.thread;\n\n// PrÃ©parer les nouvelles instructions\njson.instructions = json.query?json.query:json.instructions; // Cas fonction GPT\n\nMAX_LENGTH = 10000;\nif (json.thread.length > MAX_LENGTH) {\n    json.thread = \"Le dÃ©but du document est dÃ©jÃ  rÃ©digÃ©, voici le thread[...]\\n\\n\" + json.thread.substring(json.thread.length - MAX_LENGTH);\n    json.remainingThread = json.entireThread.substring(0, json.entireThread.length - MAX_LENGTH);\n}\n\nif (!json.documentGoogleDriveId) {\n  json.documentGoogleDriveId = $node[\"thread\"].json.documentGoogleDriveId;\n}\n\njson.date = $now.toString();\njson.executionId = $execution.id;\n\nreturn {\"json\": json};"
      },
      "id": "f2943232-b99c-4e69-ae50-48dd527aa0a6",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -580,
        960
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "=promptProducteur",
              "stringValue": "=MISSION GLOBALE\n===============\n\n{{ $node[\"entree\"].json.mission.length > 10000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.mission.substring($node[\"entree\"].json.mission.length - 10000)}}\n\nTHREAD D'AVANCEMENT\n===============\n\n{{ $node[\"entree\"].json.thread.length > 20000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.thread.substring($node[\"entree\"].json.thread.length - 20000)}}\n\nINSTRUCTIONS\n===============\n\n{{ $node[\"entree\"].json.instructions }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "id": "c8110551-dcae-4a3e-a6eb-2f2b5296f6e6",
      "name": "Prompt Producteur",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        260,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "=IJeSapyzv0Y9koZ9",
        "options": {}
      },
      "id": "ccea7645-c366-453e-88bb-bf694a62112d",
      "name": "defaultEmbedding",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        60,
        960
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_prompt",
        "description": "Le questionneur_de_prompt retourne un extrait du prompt systÃ¨me du Kin demandÃ© ou une rÃ©pond Ã  une question sur le prompt Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e contenant :\n- Le nom du Kin dont tu souhaites rÃ©cupÃ©rer le prompt,\n- La section demandÃ©e (Proposition de Valeur, Action nÂ°1, etc.)\n- Verbatim : Si les extraits du prompt doivent Ãªtre retranscrit verbatim",
        "workflowId": "1gSRJ9a1XiIgSYRx",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "c93aedc5-e1fa-4e24-bff1-d881e1eb03bf",
      "name": "Questionneur de Prompt",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2360,
        980
      ]
    },
    {
      "parameters": {
        "name": "message_au_cto",
        "description": "La fonction message_au_cto envoie le message passÃ© dans \"query\" au CTO de DigitalKin, Nicolas Lester Reynolds.\n\nIl peut Ãªtre utilisÃ© pour signaler un problÃ¨me, demander de l'aide ou une modification, demander un dÃ©blocage, ou suggÃ©rer une amÃ©lioration.",
        "workflowId": "NjRYPuz1EgoPxWfP",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "525488b7-c5f1-4d1e-a503-4a936b97afd9",
      "name": "Message au CTO",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2180,
        940
      ]
    },
    {
      "parameters": {
        "name": "message_au_client",
        "description": "La fonction \"message_au_client\" envoie le message passÃ© dans \"query\" au commanditaire de la mission.\n\nIl peut Ãªtre utilisÃ© pour demander des prÃ©cisions, demander des validations, signaler un problÃ¨me, ou tout autre chose.\n\nCette fonction est asynchrone, et ne doit pas perturber le dÃ©roulement de la mission.",
        "workflowId": "NjRYPuz1EgoPxWfP",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "2858802a-37b7-47c6-893c-4840b205ee1e",
      "name": "Message au Client",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2180,
        1500
      ],
      "disabled": true
    },
    {
      "parameters": {
        "name": "questionneur_d_executions",
        "description": "Le questionneur_d_executions retourne une rÃ©ponse issue de les executions n8n de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (filtre optionnel) Le status des executions \"status: error\" (default), \"status: waiting\", \"status: success\"\n- (filtre optionnel) Le workflowId des executions dÃ©sirÃ© \"workflowId: %ID%\"\n- Les informations que tu cherches, avec les  Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "ZTyYwHXmIk6UTURZ",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "4b527df8-4fe7-40b1-9422-72574a541b2c",
      "name": "Questionneur d'executions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2440,
        -20
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_code",
        "description": "Le Questionneur de code retourne une rÃ©ponse issue de la codebase n8n de DigitalKin Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- Les informations que tu cherches, avec les mots clÃ©s et Ã©lÃ©ments de contexte.\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "kLKx8F1dt8gfkjry",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "70df518c-8c09-41d0-b6ab-4e39606bc96c",
      "name": "Questionneur de Code",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2320,
        -20
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_bU27N3NS5XZ0lH4AFOuN8kb7",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "705274a2-abf4-4031-a7f1-58fc18d7f395",
      "name": "kincir",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        860,
        480
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_581bbg7Bmja1nCBKeiGg9Rgu",
        "text": "={{ $json.promptProducteur }}",
        "nativeTools": [
          "code_interpreter"
        ],
        "options": {}
      },
      "id": "f9e05a8a-d972-4464-92ed-25b4ec2d142d",
      "name": "kinlca",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -20
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_WKY0lRXB0rrJTFIm3HYv8jlE",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a441e8e3-0802-4dc2-af20-6bd09e04ce0d",
      "name": "kinrsi",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        -380
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_7abHKvQqtVij29X6ybyEvAbZ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a4c0ce08-9cd7-4ded-bdbe-2d682c579eb6",
      "name": "kinsota",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        140
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_TwVBZeoLx80udowj5MIoG6Pq",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a5006fdd-836e-4162-8aba-f641634ffc78",
      "name": "kincirbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        860,
        640
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_KEwBhc34Qsh3dcu2Gu8bgFne",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "abb1b363-7706-4b86-a21b-83d3e1c9819d",
      "name": "kindev",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        -20
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_3pQx4lfP0EN6Jstj8kozdBtC",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "a353ab78-cdd5-4eaa-ab35-6807844c5773",
      "name": "kinontologie",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        -180
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "3e041b0a-99e2-476c-b22f-d0ac74d6c94c",
      "name": "kinchercheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -400
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_MHJDvt7FT6gcWBFdJsZqJ52C",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "d714c7bc-4ca8-4ffd-8e69-ed576ab4e76d",
      "name": "kinsotabeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        320
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "5d7bae62-2aaf-4b09-82fb-309e7858ee5a",
      "name": "kinchercheurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -200
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_i59drQwQdShF5SmdHgqd3gXG",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "1eb9f059-f81e-471f-891c-6e1501327452",
      "name": "kincadreur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2400,
        1340
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_EwmKBIJWKqCJECb0nVBVju45",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "0c203a91-b441-489b-811c-696a03f79c73",
      "name": "kincadreurbeta",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2420,
        1520
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_RKZEJLbWald8azZuvxrnnSxL",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "66c38b58-db91-47b3-a21a-81f51ac5b0c1",
      "name": "kinmail",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1080,
        1300
      ],
      "retryOnFail": false,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "87a95772-b560-4d27-9d4a-99dae4e30442",
      "name": "kinmatcheur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2420,
        1740
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_L1WY5sdn3wnugM8RoJZBHETh",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "86f62d0c-47f6-4112-a167-fd48ebe111c7",
      "name": "kinarchitecte",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        140
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "84b0acda-ca8d-46da-bc63-39e8a65b44a3",
      "name": "kinpo",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        340
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "47796ca9-bfe1-4b87-9655-ee84850f6fca",
      "name": "kinevaluateur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        580
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "74f07f2e-5f09-4003-9fec-0542d4e02973",
      "name": "kintesteur",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2580,
        800
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assistantId": "asst_8umriZllMPt14U8qy2T0jCmQ",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "37286259-2d70-43fc-92ff-8a21fa3546aa",
      "name": "kinfacturation",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1080,
        1480
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "name": "questionneur_de_kin",
        "description": "La fonction questionneur_de_kin permet de poser Ã  un Kin de l'Ã©quipe une question rapide  qui n'est pas en rapport avec une mission spÃ©cifique.\n\nPour bien l'utiliser :\n- Mentionne le nom du @Kin,\n- Explique ton contexte et ton intention d'usage,\n- ta question.",
        "workflowId": "m3wfYxyTxFXqib9D",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            }
          ]
        }
      },
      "id": "d879938d-ebc2-4c36-85c5-6d96d0fcb272",
      "name": "Questionneur de Kin",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        2020,
        960
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_document",
        "description": "=Le questionneur_de_document retourne une rÃ©ponse issue du contenu du document final sur lequel travaille le Kin Producteur, Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (optionnel) Si tu souhaites du verbatim,\n- Les informations que tu cherches,\n- L'intention d'usage : tu souhaites faire de la rÃ©ponse,\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "anybPoo9G98Nx3qW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "documentGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.documentGoogleDriveId }}"
            },
            {
              "name": "format",
              "stringValue": "md"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "4faf9751-9732-4db7-9f09-fb28a63018a4",
      "name": "Questionneur de document",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1720,
        960
      ]
    },
    {
      "parameters": {
        "name": "listeur_de_missions",
        "description": "Le listeur_de_missions permet de rÃ©cupÃ©rer la liste des missions en cours, terminÃ©es, et en attente.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- (optionnel) Le statut des tÃ¢ches dÃ©sirÃ©es (toto/doing/done/waiting)\n- (filtre optionnel) Le Kin dÃ©sirÃ©\n- Si tu cherches des informations particuliÃ¨res,\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "7gSW7ZaAHc61PVPS",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "587f90b0-7308-4b02-8623-3284b0c6c4b0",
      "name": "Listeur de missions",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1460,
        960
      ]
    },
    {
      "parameters": {
        "url": "={{ $vars.vectorDatabaseEndpoint }}vectors/fetch",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"onoff\",\n  \"ids\": [\"onoff\"]\n}",
        "options": {}
      },
      "id": "c7c6356a-39b4-4879-9df0-e8b315e52340",
      "name": "Fetch onoff",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -380,
        960
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "026b34bb-7dfa-4fa4-af16-d78a4e166711",
              "leftValue": "={{ $json.vectors.onoff.metadata.value }}",
              "rightValue": "on",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "31242434-5483-4b4c-90ac-006ddf022057",
      "name": "If on",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -160,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "=EYWde6gUS9Qq2ok7",
        "options": {}
      },
      "id": "d748b04c-f27c-4140-a626-9d4392c540d3",
      "name": "Send  Notifications",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3160,
        620
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "name": "crud_mission",
        "description": "La fonction \"crud_mission\" permet au Manager d'effectuer des actions sur les missions. Permet de lancer, arrÃªter, ou modifier la mission en cours d'exÃ©cution.\n\nAppels disponibles :\n   - Pour **continuer la boucle de production**, si l'analyse montre que la mission est sur la bonne voie et qu'il suffit de poursuivre selon le plan Ã©tabli :\n     ```\n     /crud_mission/update/execution todo\n     ```\n   - Pour **gÃ©rer une exception**, si un obstacle imprÃ©vu se prÃ©sente nÃ©cessitant une action corrective ou une adaptation :\n     ```\n     /crud_mission/update/status exception\n     ```\n   - Pour **formuler une demande spÃ©cifique**, lorsqu'une expertise, une action, ou une ressource spÃ©cifique d'un autre Kin est nÃ©cessaire pour poursuivre :\n     ```\n     - /crud_mission/create/nomdukindemandÃ© <Description dÃ©taillÃ©e de la nouvelle mission, y compris le contexte de la mission, l'objectif spÃ©cifique de cette demande, et son importance pour l'avancÃ©e de la mission du demandeur>.\n     ```\n   - Pour **conclure la mission**, lorsque tous les objectifs sont atteints et que la mission peut Ãªtre considÃ©rÃ©e comme terminÃ©e :\n     ```\n     /crud_mission/update/status done\n     ```",
        "workflowId": "HLDDZOmG8kuk2zTi",
        "fields": {
          "values": [
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            }
          ]
        }
      },
      "id": "85cafd5a-dd48-4b2e-8eec-2a612785ee30",
      "name": "CRUD Mission",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1940,
        1500
      ]
    },
    {
      "parameters": {
        "content": "# UF AmÃ©lioration Continue",
        "height": 1677.1050484998564,
        "width": 1219.5279693808732
      },
      "id": "4dbbe16f-89bc-4919-a46e-4b9fdafec1bd",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        -685.385748179589
      ]
    },
    {
      "parameters": {
        "content": "# UF PRODUCTION",
        "height": 1678.7077168166893,
        "width": 1137.0587249575672
      },
      "id": "4fe9aea2-f9d5-4200-8d44-6b475866a5eb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        620,
        -680
      ]
    },
    {
      "parameters": {
        "content": "\n\n\n\n# UF MANAGEMENT",
        "height": 1175.0204629103996,
        "width": 1191.0347008570102
      },
      "id": "3572c142-67c5-4e36-923d-a5f41b06e9c4",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        1020
      ]
    },
    {
      "parameters": {
        "content": "\n\n\n\n# UF RELATION CLIENT",
        "height": 1168.8754104629538,
        "width": 1119.066732991086
      },
      "id": "61cf0eb5-05cb-4f74-b9e9-48e4137a24cc",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        1020
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "7482cc49-365d-4e7a-a4ef-9f431d001d65",
      "name": "CRUD Mission : Update status",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        260,
        1160
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/mission/update/status \\\"todo\\\"\";\n\nreturn {\"json\": json};"
      },
      "id": "551ef40c-afef-420a-8777-1a1e69234c03",
      "name": "mission set todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        1160
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_source",
        "description": "Le questionneur_de_source retourne une rÃ©ponse issue d'un document source spÃ©cifique Ã  partir d'une demande informationnelle dÃ©taillÃ©e.\n\nPour bien l'utiliser, il faut rÃ©diger un paragraphe de demande dÃ©taillÃ©e, contenant :\n- La citation de l'Ã©tude,\n- Les informations que tu cherches,\n- L'intention d'usage : oÃ¹ tu en es dans les instructions et ce que tu souhaites faire,\n- Le format de rÃ©ponse dÃ©sirÃ©.",
        "workflowId": "aoOczsm5IKBTtydy",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "sourceGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.sourceGoogleDriveId }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "0f130d0e-3a84-4baa-9a59-1e35c62f9dce",
      "name": "Questionneur de source",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1300,
        -20
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "80b46e16-7f8f-486c-b558-59913336869f",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3620,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "0LhMxlt62MaWdiqs",
        "options": {}
      },
      "id": "47ea54ca-a3fb-4beb-a0ff-170080b3c96d",
      "name": "BOUCLE DE MANAGEMENT",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3860,
        960
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_MHJDvt7FT6gcWBFdJsZqJ52C",
        "text": "={{ $json.promptProducteur }}",
        "options": {}
      },
      "id": "b901b36d-5e42-4c56-85e7-c641fbafdd3a",
      "name": "kinontologiedomaine",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        840,
        -600
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincir",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "ee0b2c5b-62fd-4c09-bfca-f844e805e9ad",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinlca",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2a5fab45-e697-4ba3-96ea-3f1bdc5a7655",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinrsi",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsota",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "72d86350-5484-42da-86d0-02205e464813",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincirbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6485b142-ec38-459a-9d57-c73998d1ec69",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kindev",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "6f847cf9-95ef-46d0-a2fc-dd71c81e9e7f",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinontologie",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b1b17da-cb6e-45e2-94b0-6489cc899831",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "74f492b7-3bec-4816-ae99-a1a88314f9ff",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinsotabeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "0b7fbcf3-4e28-4b4a-9c08-ce4e3b263604",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinchercheurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "d31caef0-4d25-4ed3-9e1d-eea4ca6dbc76",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "e830f692-818a-4c36-a976-38294ef3f1c8",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kincadreurbeta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "2caba844-9c03-4c51-8262-9be51e095df7",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmail",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "bd30facf-18e2-45ab-9c15-61b1a5aa0661",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinmatcheur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "dec09ac9-dbf2-48a1-88c1-274f1d1309ee",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinarchitecte",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "58985013-b664-435a-8964-e97aaa0935b6",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinpo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "873de981-5c16-4165-8467-009d17277dfa",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinevaluateur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "b2a3e685-74d6-46b7-9e2d-03a95d595ea0",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kintesteur",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "cd4effcc-9084-463b-ae02-db173847297e",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinfacturation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "c2bd6b6f-a902-4b50-8b1b-8a906880d697",
                    "leftValue": "={{  $node[\"entree\"].json.kin }}",
                    "rightValue": "kinontologiedomaine",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "35511810-4ea6-4cba-81db-2a0d6198b44f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        460,
        800
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "client": "digitalkin",
          "commandText": "\"todo\" : La prochaine Ã©tape importante de la mission consiste Ã  analyser les rÃ©sultats obtenus par les chercheurs dans l'Ã©tude documentÃ©e dans \"2010 porcelet.pdf\". Cette analyse devrait se concentrer sur l'interprÃ©tation des donnÃ©es, l'Ã©valuation de la significativitÃ© statistique des dÃ©couvertes et la dÃ©termination de leur pertinence clinique. Cette phase est essentielle pour comprendre l'impact rÃ©el du traitement homÃ©opathique Coli 30K sur la prÃ©vention de la diarrhÃ©e chez les porcelets provoquÃ©e par Escherichia coli. La synthÃ¨se des rÃ©sultats aidera Ã  clarifier les contributions de cette recherche au domaine de la mÃ©decine vÃ©tÃ©rinaire et Ã  l'utilisation d'alternatives aux antibiotiques.",
          "date": "2024-02-06T10:22:51.208+01:00",
          "dernierProducteur": "kinlca",
          "documentGoogleDriveId": "1nHei2BhCILpf_L-5MRhT72U3CQKxDypW",
          "executionId": "137560",
          "firstAttribute": "status",
          "format": "pdf",
          "instructions": "[INSTRUCTION - Avancement de la Mission et DÃ©termination de la Prochaine Action]\n\n**TODOLIST :**\n- 1. DÃ©termination de l'Intention Communicationnelle : TODO\n- 2. Ãlaboration du Contenu et Ajout de la Touche Personnelle : TODO\n- 3. Mise en Forme HTML et Envoi : TODO\n- 4. Envoi de l'email via la fonction \"send_email\": TODO\n\n**Prochaine Action Ã  RÃ©aliser :**\n\n*Ãtape :* **DÃ©termination de l'Intention Communicationnelle**\n\nCette premiÃ¨re Ã©tape consiste Ã  clarifier l'objectif principal et le message clÃ© que nous souhaitons communiquer au client dans notre courriel. L'intention est de l'informer avec concision des rÃ©sultats et recommandations issues de l'analyse critique sur l'usage de l'homÃ©opathie pour la prÃ©vention de la diarrhÃ©e Ã  Escherichia coli chez les porcelets, et de souligner l'achÃ¨vement rÃ©ussi de la mission.\n\n- **Intention Principale :** Informer le client des conclusions et des recommandations futures dÃ©coulant de la mission de lecture critique et analyse.\n- **Message ClÃ© :** La mission a Ã©tÃ© complÃ©tÃ©e avec succÃ¨s, apportant des insights significatifs sur le potentiel de l'homÃ©opathie comme alternative aux antibiotiques dans le traitement de la diarrhÃ©e Ã  E. coli chez les porcelets, tout en soulignant la nÃ©cessitÃ© de recherches supplÃ©mentaires pour confirmer et gÃ©nÃ©raliser les rÃ©sultats de l'Ã©tude.\n\n[/INSTRUCTION - Avancement de la Mission et DÃ©termination de la Prochaine Action]\n\n---\n\n[INSTRUCTION - Lancement de la mission]\n\nLa mission pour kinmail est formellement lancÃ©e avec la premiÃ¨re Ã©tape identifiÃ©e : dÃ©terminer avec soin l'intention communicationnelle derriÃ¨re l'email Ã  adresser au client, en s'assurant d'intÃ©grer les rÃ©sultats clÃ©s et les recommandations pour les recherches futures. Il est crucial de veiller Ã  ce que le courriel soit informatif, pertinent et alignÃ© avec les attentes et les besoins du client.\n\n[/INSTRUCTION - Lancement de la mission]\n\n---",
          "kin": "kinmail",
          "kinDemandeur": "kinlca",
          "mailFrom": "From: Lester Reynolds <l.reynolds@digitalkin.ai>",
          "mailId": "18d7da28de4fde9b",
          "mailSubject": "Porcelet 2010",
          "mission": "Date : 2024-02-06T10:22:51.208+01:00\nClient : digitalkin\n\n===\n\n**INFORMATIF - Mission :**\n\n[PROCESSUS - MISSION]\n\n-- \nNicolas Lester Reynolds\nCTO @ Digitalkin.ai <https://DigitalKin.ai>\n+33621636737\nBookez-moi sur Calendy <https://calendly.com/l-reynolds-digitalkin/call>\n\n\nFile attached with email : 2010 porcelet.pdf\n\n[/PROCESSUS - MISSION]\n\n---\n\n\n===\n\n**INFORMATIF - DerniÃ¨re production du kinlca :**\n\n[...] concerne les limites de leur recherche est louable. Ils reconnaissent que leur Ã©tude n'est pas universellement gÃ©nÃ©ralisable en raison de variations potentielles entre les fermes, et insistent sur la nÃ©cessitÃ© de reproduire les rÃ©sultats dans diffÃ©rents contextes pour renforcer la crÃ©dibilitÃ© de leurs conclusions.\n\n### Implications Pratiques\n\nLes implications pratiques suggÃ©rÃ©es par l'Ã©tude, notamment l'usage de l'homÃ©opathie comme alternative aux antibiotiques, sont d'une pertinence notable. Cette perspective est particuliÃ¨rement critique face Ã  la crise actuelle de rÃ©sistance aux antibiotiques et offre une option prometteuse pour les pratiques vÃ©tÃ©rinaires, surtout dans l'Ã©levage biologique.\n\n### ReproductibilitÃ©\n\nLe plaidoyer des auteurs pour des Ã©tudes futures visant Ã  tester la reproductibilitÃ© de leurs rÃ©sultats souligne une volontÃ© d'intÃ©gritÃ© scientifique. La reproductibilitÃ© est une pierre angulaire de la recherche et ce point de vue rÃ©itÃ¨re la nÃ©cessitÃ© de validation additionnelle.\n\n### Contexte Scientifique\n\nLa mise en contexte des rÃ©sultats par rapport au dÃ©bat gÃ©nÃ©ral sur l'homÃ©opathie en mÃ©decine vÃ©tÃ©rinaire est bien articulÃ©e. Non seulement ces rÃ©sultats contribuent-ils Ã  l'Ã©vidence croissante en faveur de l'homÃ©opathie, mais ils ouvrent Ã©galement la voie Ã  des questions approfondies sur son application effective dans le domaine vÃ©tÃ©rinaire.\n\n## SynthÃ¨se de la Discussion\n\nDans l'ensemble, la section de discussion et de conclusion de l'Ã©tude fait preuve d'une rÃ©flexion critique nuancÃ©e concernant les implications, les limites et le contexte scientifique plus large. Tout en soulignant l'utilitÃ© potentielle de leurs dÃ©couvertes, les auteurs maintiennent une approche Ã©quilibrÃ©e, reconnaissant la nÃ©cessitÃ© d'Ã©tudes complÃ©mentaires pour vÃ©rifier et gÃ©nÃ©raliser leurs rÃ©sultats dans la pratique de la mÃ©decine vÃ©tÃ©rinaire.\n\n[/CONTENU - Critique de la Discussion et des Conclusions]\n\n---\n\nLe prochain pas dans notre processus d'analyse critique serait de **Conduire une Analyse Critique** de l'ensemble de l'Ã©tude. Je vais maintenant poursuivre avec cette tÃ¢che.\n[CONTENU - Critique Globale]\n\n## Analyse Critique\n\nL'Ã©tude portant sur l'utilisation du nosode homÃ©opathique **Coli 30K** pour la prÃ©vention de la diarrhÃ©e Ã  _Escherichia coli_ chez les porcelets offre une contribution intÃ©ressante Ã  la littÃ©rature sur les alternatives aux antibiotiques dans le secteur vÃ©tÃ©rinaire. Voici une critique globale des aspects principaux de l'Ã©tude.\n\n### Points Forts\n\n- **Approche mÃ©thodologique rigoureuse** : L'emploi d'un essai randomisÃ©, en double aveugle et contrÃ´lÃ© par placebo, assure une base solide pour l'Ã©valuation de l'efficacitÃ© du traitement homÃ©opathique.\n- **Signification statistique des rÃ©sultats** : La rÃ©duction significative de l'incidence de la diarrhÃ©e dans le groupe traitÃ© avec Coli 30K, par rapport au groupe placebo, est un argument robuste en faveur de l'efficacitÃ© du traitement.\n- **Discussion Ã©quilibrÃ©e des implications et limites** : Les auteurs prÃ©sentent une rÃ©flexion approfondie sur les implications pratiques de leurs dÃ©couvertes tout en reconnaissant ouvertement les limites de leur Ã©tude.\n\n### Limitations et Biais Potentiels\n\n- **GÃ©nÃ©ralisabilitÃ© des rÃ©sultats** : L'efficacitÃ© du traitement pourrait varier selon les conditions spÃ©cifiques, telle que la race des porcelets ou le contexte de la ferme, ce qui limite la gÃ©nÃ©ralisation des rÃ©sultats.\n- **Absence de discussion sur les effets indÃ©sirables** : Le manque d'information sur la tolÃ©rance et les effets indÃ©sirables liÃ©s au traitement homÃ©opathique constitue une lacune importante pour Ã©valuer la sÃ©curitÃ© du traitement.\n\n### ReproductibilitÃ© et ApplicabilitÃ© des RÃ©sultats\n\nLa nÃ©cessitÃ© de reproduire les rÃ©sultats dans diffÃ©rents contextes soulignÃ©e par les auteurs est essentielle pour valider l'applicabilitÃ© du traitement homÃ©opathique Ã  l'Ã©chelle plus large. L'Ã©tude ouvre la voie Ã  des recherches futures pour explorer cette piste.\n\n## Conclusion\n\nCette Ã©tude marque un pas important vers l'identification d'alternatives viables aux antibiotiques pour la gestion de la diarrhÃ©e Ã  E. coli chez les porcelets. Toutefois, si les rÃ©sultats prÃ©sentent une Ã©vidente promesse, leur application pratique nÃ©cessite des Ã©tudes complÃ©mentaires pour confirmer l'efficacitÃ© et la sÃ»retÃ© du traitement dans diffÃ©rents contextes et sur des populations variÃ©es. La dÃ©marche scientifique adoptÃ©e par les auteurs, ainsi que la reconnaissance des limites de leur travail, instaure une base de confiance et d'ouverture pour la poursuite des investigations dans ce domaine [...]",
          "missionDuDemandeur": "[PROCESSUS - MISSION]\n\n-- \nNicolas Lester Reynolds\nCTO @ Digitalkin.ai <https://DigitalKin.ai>\n+33621636737\nBookez-moi sur Calendy <https://calendly.com/l-reynolds-digitalkin/call>\n\n\nFile attached with email : 2010 porcelet.pdf\n\n[/PROCESSUS - MISSION]\n\n---\n",
          "remainingThread": "[INFORMATIF - Structure attendue du Rapport LCA (Lecture Critique & Analyse)]\r\n\r\n# Rapport Lecture Critique & Analyse - Titre de l'Ãtude\r\n## Objectif de l'Ãtude - RÃ©sumÃ© de l'objectif dÃ©clarÃ© de l'Ã©tude.\r\n## MÃ©thodologie\r\n### Design de l'Ãtude - Type de design et rÃ©fÃ©rences des guides d'Ã©valuation de qualitÃ©.\r\n### MÃ©thode dâanalyse â Intention to treat ou en Per protocol\r\n### Taille de l'Ãchantillon - Ãvaluation de la pertinence de la taille de l'Ã©chantillon pour les conclusions de l'Ã©tude.\r\n### MÃ©thodes Statistiques - AdÃ©quation des mÃ©thodes statistique",
          "sourceGoogleDriveId": "1EAb7wBhurQ10TEabV3s-s616SkZnBdie",
          "startTimestamp": "2024-02-06T10:33:49.320+01:00",
          "status": "todo",
          "sync": false,
          "threadFrom": "Lester Reynolds <l.reynolds@digitalkin.ai>",
          "threadId": "18d7da23f72fb055",
          "threadSubject": "Porcelet 2010"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any",
    "saveExecutionProgress": true,
    "executionTimeout": 2400,
    "errorWorkflow": "PYJaVWpuygsfVZry"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [
        14
      ]
    },
    "node:Nico reÃ§oit un email": {
      "lastTimeChecked": 1706021400,
      "possibleDuplicates": [
        "18d36ccb1edf6bcf"
      ]
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    },
    {
      "createdAt": "2023-12-17T21:33:59.044Z",
      "updatedAt": "2023-12-17T21:33:59.044Z",
      "id": "cV0ITFyTfPijMrvR",
      "name": "kin"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-07T10:55:17.000Z",
  "versionId": "8d4aed75-9c90-4d8f-88f9-3d70531175de"
}