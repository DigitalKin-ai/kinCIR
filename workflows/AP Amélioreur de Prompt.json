{
  "active": false,
  "connections": {
    "Get Document": {
      "main": [
        [
          {
            "node": "Convert to/from binary data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to/from binary data": {
      "main": [
        [
          {
            "node": "Améliorateur de Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT4": {
      "ai_languageModel": [
        [
          {
            "node": "Améliorateur de Prompt",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Assistant": {
      "main": [
        [
          {
            "node": "Get Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Input 1 Data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Modify Assistant": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On new manual Chat Message": {
      "main": [
        [
          {
            "node": "message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message": {
      "main": [
        [
          {
            "node": "Get Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Améliorateur de Prompt": {
      "main": [
        [
          {
            "node": "Modify Assistant",
            "type": "main",
            "index": 0
          },
          {
            "node": "Input 1 Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input 1 Data": {
      "main": [
        [
          {
            "node": "nouveau message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-12-18T04:23:18.784Z",
  "id": "1fR6eCwgdVcJ6SG5",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AP Amélioreur de Prompt",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4-1106-preview",
          "mode": "list",
          "cachedResultName": "gpt-4-1106-preview"
        },
        "options": {
          "timeout": 600000
        }
      },
      "id": "b31dfad4-7dc0-4978-9248-5658b98d1aac",
      "name": "GPT4",
      "type": "@n8n/n8n-nodes-langchain.lmOpenAi",
      "typeVersion": 1,
      "position": [
        1260,
        500
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "setAllData": false,
        "destinationKey": "documentContent",
        "options": {}
      },
      "id": "906c3b24-b584-4378-b6a5-c83c5ca94e50",
      "name": "Convert to/from binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        1020,
        300
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "DigitalKin-ai",
          "mode": "list",
          "cachedResultName": "DigitalKin-ai",
          "cachedResultUrl": "https://github.com/DigitalKin-ai"
        },
        "repository": {
          "__rl": true,
          "value": "kinCIR",
          "mode": "list",
          "cachedResultName": "kinCIR",
          "cachedResultUrl": "https://github.com/DigitalKin-ai/kinCIR"
        },
        "filePath": "=prompts/{{ $node[\"Get Assistant\"].json[\"name\"].replace(/[\\s\\W]+/g, '_').toLowerCase() }}.md",
        "additionalParameters": {}
      },
      "id": "459f2100-c519-40dd-a812-9065ce3797df",
      "name": "Get Document",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        800,
        300
      ],
      "credentials": {
        "githubApi": {
          "id": "Q3KiSughyw3eRp87",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.openai.com/v1/assistants/{{ $('entree').item.json[\"assistantId\"] }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v1"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "1a4fa9cf-c16d-41ef-8406-c5d170e0f034",
      "name": "Get Assistant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        580,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "DigitalKin-ai",
          "mode": "list",
          "cachedResultName": "DigitalKin-ai",
          "cachedResultUrl": "https://github.com/DigitalKin-ai"
        },
        "repository": {
          "__rl": true,
          "value": "kinCIR",
          "mode": "list",
          "cachedResultName": "kinCIR",
          "cachedResultUrl": "https://github.com/DigitalKin-ai/kinCIR"
        },
        "filePath": "=prompts/{{ $node[\"Get Assistant\"].json[\"name\"].replace(/[\\s\\W]+/g, '_').toLowerCase() }}.md",
        "fileContent": "={{ $json.instructions }}",
        "commitMessage": "=n8n : {{ $('entree').item.json[\"entree\"] }}"
      },
      "id": "06cc5f65-bb9d-4adb-8ef7-78ee10efb645",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        1800,
        640
      ],
      "credentials": {
        "githubApi": {
          "id": "Q3KiSughyw3eRp87",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.openai.com/v1/assistants/{{ $('entree').item.json[\"assistantId\"] }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v1"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Bearer",
              "value": "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"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "instructions",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d5b4101b-56c8-4a10-9db7-7ac5d82c33ca",
      "name": "Modify Assistant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1600,
        640
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "a0e1acdb-5462-49e6-8123-8b32088bdb7f",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        100,
        295
      ]
    },
    {
      "parameters": {},
      "id": "e958c188-1e64-42fb-a33f-0067da0b099b",
      "name": "On new manual Chat Message",
      "type": "@n8n/n8n-nodes-langchain.manualChatTrigger",
      "typeVersion": 1.1,
      "position": [
        100,
        95
      ]
    },
    {
      "parameters": {
        "content": "# ENTREE STANDARD",
        "height": 536.060150033849,
        "width": 536.692184943248
      },
      "id": "24080781-14d7-4cb6-a7fa-3663fc4bcdde",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -20,
        -20
      ]
    },
    {
      "parameters": {
        "workflowId": "uM0Ul7juoL7DAqRB"
      },
      "id": "3e21776a-22a5-4e51-bc29-628ddf9c0768",
      "name": "message",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        340,
        295
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "a58989bd-f8ae-450d-83f5-2faa4a496a34",
      "name": "Input 1 Data",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2080,
        280
      ]
    },
    {
      "parameters": {
        "prompt": "=# Contexte\n\n{{ $node[\"message\"].json.contexte }}\n\n# Intention d'Usage\n\n{{ $node[\"message\"].json.intentionDUsage }}\n\n# Demande\n\n{{ $node[\"message\"].json[\"demandeurId\"] }} : {{ $node[\"message\"].json[\"demandeur\"] }} :\n``\n{{ $node[\"message\"].json[\"demande\"] }}\n``",
        "messages": {
          "messageValues": [
            {
              "message": "=# Rôle\nSpécialiste en optimisation de prompt : Utilise ton expertise analytique pour raffiner les prompts destinés aux assistants GPT, en te concentrant sur l'amélioration de leur précision, clarté et pertinence. Applique une analyse critique pour évaluer chaque prompt, tout en respectant les capacités fonctionnelles de l'assistant.\n\n# Contexte\nUn prompt bien conçu est essentiel pour obtenir des réponses efficaces d'un assistant GPT. Il doit être suffisamment détaillé pour guider l'assistant vers la réponse attendue, mais aussi assez souple pour permettre à l'assistant d'utiliser toute l'étendue de ses capacités. Ta tâche est de peaufiner les prompts afin de maximiser la qualité des interactions avec l'assistant.\n\n# Proposition de Valeur\nEn tant qu'améliorateur de prompt, tu es capable d'élever la qualité des interactions utilisateur-assistant en rendant les prompts plus clairs et pertinents. Tu aides à structurer de manière efficace les informations que l'utilisateur fournira afin que l'assistant GPT puisse interagir de la manière la plus précise et utile possible.\n\n# Entrée\nAnalyse le prompt original pour identifier le contexte, les informations clés et les objectifs visés. Donne des indications claires sur la présence éventuelle d'hypothèses sous-jacentes ou de contraintes à considérer.\n\n# Instructions\n1. Effectue une analyse critique du prompt initial pour identifier les aspects qui pourraient être optimisés.\n2. Applique des modifications visant à renforcer la pertinence et la clarté, tout en évitant d'aller au-delà des capacités fonctionnelles de l'assistant GPT.\n3. Garantis que le prompt révisé est bien structuré, en correspondance avec la demande initiale et qu'il facilite une interaction productive.\n\n# Fonctions Accessibles\nIndique si certaines fonctions intégrées à l'assistant peuvent être mobilisées pour répondre au prompt.\n\n# Exemple de Processus\nOffre un exemple illustratif qui démontre comment le prompt optimisé pourrait être utilisé efficacement dans un scénario réaliste.\n\n# Sortie\nUn prompt optimisé qui incarne une amélioration significative par rapport au prompt initial, en soulignant une progression claire dans la précision, la clarté et la pertinence de la demande, tout en restant fidèle aux objectifs et à la structure attendue.\n\n---------------------------------------------------------------------------------------\n\n# Structure typique d'un Prompt Système d'Assistant\n``\n# Rôle\nObjectif: Définir clairement la fonction que l'assistant GPT est censé jouer dans ce prompt, ce qui oriente les attentes concernant sa performance.\nContenu: La description du rôle doit se limiter à une ou deux phrases précises qui résument la contribution attendue de l'assistant.\n\n# Contexte\nObjectif: Fournir une compréhension de la situation ou du scénario dans lequel le prompt est émis, ce qui permet à l'assistant d'adapter sa réponse à la situation.\nContenu: Des informations pertinentes et précises qui donnent un cadre au prompt, permettant à l'assistant de contextualiser sa réponse.\n\n# Proposition de Valeur\nObjectif : Énoncer clairement les avantages uniques que le Kin offre à ceux qui collaborent avec lui, ainsi que des directives sur les moments opportuns et les manières correctes de solliciter son aide. Contenu : Cette section doit articuler en un paragraphe structuré et succinct :\n\nLa valeur distinctive que le Kin confère à ses collaborateurs, mettant l'accent sur ses compétences, son expertise ou le soutien qu'il apporte pour faciliter ou améliorer les activités de l'utilisateur.\nLes circonstances ou les contextes dans lesquels il est particulièrement bénéfique de consulter le Kin, en soulignant quelles situations ou quels types de tâches mènent à maximiser l'utilisation de ses services.\nLa procédure spécifique pour engager l'interaction avec le Kin, y compris les formats de requête (\"query\") préférés et les informations nécessaires pour assurer une collaboration efficace et productive.\n\n# Entrée\n## Instructions pour le contenu d'Entrée (\"query\")\nObjectif: Spécifier la forme et la nature des informations que l'utilisateur fournira et comment l'assistant doit les interpréter ou les traiter.\nContenu: Des directives claires sur le format des données d'entrée, éventuellement illustrées par un exemple pour assurer une application correcte.\n\n# Instructions\nObjectif: Diriger l'assistant sur la manière dont il doit gérer le prompt, quelle méthodologie appliquer, et les étapes à suivre pour aboutir à la réponse attendue.\nContenu: Des étapes actionnables et une explication de chaque action attendue, possiblement accompagnée d'exemples pour clarifier la demande.\n\n# Fonctions Accessibles\n\n\n## Exemple de Processus\nObjectif: Fournir une illustration concrète de la manière dont les instructions peuvent être mises en œuvre, servant de guide pour l'assistant.\nContenu: Un scénario hypothétique ou un cas pratique qui simule le déroulement des instructions précédentes, invitant l'assistant à suivre une démarche similaire.\n\n# Sortie\nObjectif: Établir les attentes concernant le résultat final de l'assistant GPT, que ce soit en termes de format, de détails ou de structure de la réponse.\nContenu: Des critères précis qui définissent ce que doit contenir la réponse en termes d'informations et de présentation, assurant ainsi que la réponse finie est utilisable et conforme aux exigences.\n\n``"
            }
          ]
        }
      },
      "id": "c50c09c3-3cff-4c8a-a5c1-e905f01d7bd5",
      "name": "Améliorateur de Prompt",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.2,
      "position": [
        1240,
        300
      ]
    },
    {
      "parameters": {
        "name": "redacteur_de_document",
        "description": "Rédige une version améliorée d'un passage du document demandé à partir d'une demande détaillée",
        "workflowId": "0T67aHjuqQEnrTN0",
        "responsePropertyName": "message",
        "fields": {
          "values": [
            {
              "name": "message",
              "stringValue": "={{ JSON.stringify($node[\"message\"].json) }}"
            }
          ]
        }
      },
      "id": "3677ab0b-55c2-4405-932d-afd6606e99c3",
      "name": "Rédacteur de Document",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1720,
        960
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_documents",
        "description": "Donne une réponse précise issue du document demandé à partir d'un besoin informationnel.",
        "workflowId": "ebLHEt0swZVT9tks",
        "responsePropertyName": "message",
        "fields": {
          "values": [
            {
              "name": "message",
              "stringValue": "={{ JSON.stringify($node[\"message\"].json) }}"
            }
          ]
        }
      },
      "id": "5e6f988a-2811-4c9c-9e5e-d4f9c12e7cef",
      "name": "Questionneur de Documents",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1580,
        960
      ]
    },
    {
      "parameters": {
        "name": "scratchpad",
        "description": "Crée une copie temporaire de toi même, sans les accès aux fonctions, afin de pouvoir répondre aux demandes de génération textuelles et de reflexion (exemples : prendre le temps de rédiger, faire plusieurs itérations pour améliorer un texte, etc.), à partir d'une demande précise et détaillée donnée en entrée.",
        "workflowId": "wTbd0CgnGrumh0qf",
        "responsePropertyName": "message",
        "fields": {
          "values": [
            {
              "name": "message",
              "stringValue": "={{ JSON.stringify($node[\"message\"].json) }}"
            }
          ]
        }
      },
      "id": "c70d3fd0-df51-4020-88bb-6671fd5b3e77",
      "name": "ScratchPad",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1860,
        960
      ]
    },
    {
      "parameters": {
        "content": "# OUTILS STANDARD",
        "height": 224.32004875594802,
        "width": 447.22204993824914
      },
      "id": "e6583089-8861-4d2d-8c95-26e880cb11fc",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1540,
        880
      ]
    },
    {
      "parameters": {
        "content": "# OUTILS SPECIFIQUES",
        "height": 413.4919569863578,
        "width": 468.47826732357714
      },
      "id": "8a1e3986-1a1b-4d8e-a06c-ee8b4ab598c4",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1040,
        880
      ]
    },
    {
      "parameters": {
        "content": "# COLLABORATEURS",
        "height": 224.32004875594802,
        "width": 355.66820106337036
      },
      "id": "a316298d-0fde-4b30-ac38-7b5b72ecdcf0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        660,
        880
      ]
    },
    {
      "parameters": {
        "content": "# SORTIE STANDARD",
        "height": 273.96047817628465,
        "width": 382.2960085494244
      },
      "id": "e04fc32b-4881-4624-a698-0a118af64f11",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2280,
        180
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let message = $node[\"message\"].json;\n\nif (Object.keys($json).length == 1) {\n  message.demande = $json[Object.keys($json)[0]];\n} else {\n  message.demande = JSON.stringify($json);\n}\n\nreturn {\"message\":JSON.stringify(message)};"
      },
      "id": "73a08e05-8f5e-4b5b-b424-6793c4e74745",
      "name": "nouveau message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2420,
        280
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-21T09:40:49.894Z",
      "updatedAt": "2024-01-21T09:40:49.894Z",
      "id": "HH1XeBJSkgxMCPd3",
      "name": "legacy"
    },
    {
      "createdAt": "2023-12-17T21:33:59.044Z",
      "updatedAt": "2023-12-17T21:33:59.044Z",
      "id": "cV0ITFyTfPijMrvR",
      "name": "kin"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-21T09:42:22.000Z",
  "versionId": "92292d7e-fa8e-40bf-ae98-a76e6c6e7a3c"
}