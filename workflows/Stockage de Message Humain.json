{
  "active": false,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Document": {
      "main": [
        [
          {
            "node": "Convert to/from binary data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to/from binary data": {
      "main": [
        [
          {
            "node": "Ajouter en début de fichier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message": {
      "main": [
        [
          {
            "node": "Get Producteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Return message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message à ajouter": {
      "main": [
        [
          {
            "node": "Escape Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envoi de notification Telegram": {
      "main": [
        [
          {
            "node": "Get Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ajouter en début de fichier": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escape Markdown": {
      "main": [
        [
          {
            "node": "Envoi de notification Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Producteur": {
      "main": [
        [
          {
            "node": "Message à ajouter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-12-20T14:18:11.585Z",
  "id": "zFvWhh3Py5ll45B3",
  "meta": null,
  "name": "Stockage de Message Humain",
  "nodes": [
    {
      "parameters": {},
      "id": "dd586566-423a-4097-a518-dea801db2ffb",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        840,
        200
      ]
    },
    {
      "parameters": {},
      "id": "6f484a5a-38d0-470c-8a3d-82e50303b42f",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        840,
        420
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "DigitalKin-ai",
          "mode": "list",
          "cachedResultName": "DigitalKin-ai",
          "cachedResultUrl": "https://github.com/DigitalKin-ai"
        },
        "repository": {
          "__rl": true,
          "value": "kinCIR",
          "mode": "list",
          "cachedResultName": "kinCIR",
          "cachedResultUrl": "https://github.com/DigitalKin-ai/kinCIR"
        },
        "filePath": "=feedback-humain.md",
        "additionalParameters": {}
      },
      "id": "13fd05d1-a933-4250-96d3-10fb8a33cb48",
      "name": "Get Document",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        2080,
        200
      ],
      "credentials": {
        "githubApi": {
          "id": "Q3KiSughyw3eRp87",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "setAllData": false,
        "destinationKey": "documentContent",
        "options": {}
      },
      "id": "89f225ab-ad32-4f3b-bf54-ec8f8591b35a",
      "name": "Convert to/from binary data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1.1,
      "position": [
        2300,
        200
      ]
    },
    {
      "parameters": {
        "content": "## Stocke et envoie le message sur Telegram",
        "height": 348.839423945907,
        "width": 548.1198073088228
      },
      "id": "71230ee8-b038-40ff-9cc5-05e2e21cef29",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1060,
        -180
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{JSON.stringify($json)}}",
        "options": {}
      },
      "id": "44dad061-a0e4-4e0b-9450-3fd1454c75ac",
      "name": "message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1060,
        200
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "DigitalKin-ai",
          "mode": "list",
          "cachedResultName": "DigitalKin-ai",
          "cachedResultUrl": "https://github.com/DigitalKin-ai"
        },
        "repository": {
          "__rl": true,
          "value": "kinCIR",
          "mode": "list",
          "cachedResultName": "kinCIR",
          "cachedResultUrl": "https://github.com/DigitalKin-ai/kinCIR"
        },
        "filePath": "=feedback-humain.md",
        "fileContent": "={{ $json.modifiedDocumentContent }}",
        "commitMessage": "=n8n : {{ $node[\"message\"].json[\"demande\"] }}"
      },
      "id": "3c49ade3-00d9-4883-9faa-d81b5f21b914",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        2740,
        200
      ],
      "credentials": {
        "githubApi": {
          "id": "Q3KiSughyw3eRp87",
          "name": "GitHub account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "messageAAjouter",
              "stringValue": "=# Le {{(() => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };\n    return new Date().toLocaleString('fr-FR', options);\n})(); }} : Message de Humain ({{ $json[\"id\"] }})\n\n``\n{{ $('message').item.json[\"demande\"] }}\n``\n"
            }
          ]
        },
        "options": {}
      },
      "id": "9a56549c-f18e-4371-93e8-2b6646f74d5a",
      "name": "Message à ajouter",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1480,
        200
      ]
    },
    {
      "parameters": {
        "chatId": "=-1002105587743",
        "text": "={{ $json.escapedText }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_notification": true,
          "parse_mode": "MarkdownV2"
        }
      },
      "id": "f19b2988-2083-448f-9930-8542c18be904",
      "name": "Envoi de notification Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1880,
        200
      ],
      "credentials": {
        "telegramApi": {
          "id": "36XnU2tVylnKh3kr",
          "name": "Telegram account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const documentContent = $json.documentContent;\nconst newContent = $node[\"Message à ajouter\"].json.messageAAjouter;\n\n// Ajoute newContent au début du document\nconst modifiedDocumentContent = newContent + '\\n' + documentContent;\n\nreturn {\"json\":{\"modifiedDocumentContent\": modifiedDocumentContent}};\n"
      },
      "id": "36ef4beb-145d-4855-bd5a-8db7baf2eb1f",
      "name": "Ajouter en début de fichier",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2520,
        200
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\"json\":$node[\"message\"].json};"
      },
      "id": "594032cb-89ae-4211-8bd6-f24d136cc17c",
      "name": "Return message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3060,
        200
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function escapeMarkdownV2(text) {\n    return text.replace(/[_*\\[\\]()~`>#\\+=\\-{}\\.!|]/g, match => '\\\\' + match)\n               .replace(/(\\n```)([a-z]*\\n[\\s\\S]+?\\n```)/g, (match, p1, p2) => p1.replace('\\n', '') + p2);\n}\n\n// Exemple d'utilisation\nconst originalText = $json.messageAAjouter;\nconst escapedText = escapeMarkdownV2(originalText);\n\nreturn {\"json\":{\"escapedText\":escapedText}};\n"
      },
      "id": "186a4a78-ebc6-4010-88a3-3aa17149792d",
      "name": "Escape Markdown",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        200
      ]
    },
    {
      "parameters": {
        "url": "=https://api.openai.com/v1/assistants/{{ $('message').item.json[\"producteurId\"] }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "OpenAI-Beta",
              "value": "assistants=v1"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "d90b87a1-d1a2-404e-9f2b-f7f56d93f7d8",
      "name": "Get Producteur",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1280,
        200
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {
    "When clicking \"Execute Workflow\"": [
      {
        "json": {
          "query": "Réalise une première version du document en entier",
          "kinName": "kincir_dynergie",
          "demandeur": "KinCIR - Générateur de programme R&D",
          "demandeurId": "asst_PtFkjK3WpkPD5u6ZLc6toZ0q",
          "producteurId": "asst_RMuliVrHho2VxBhfZBG1cnTN",
          "contexte": "L’entreprise WeDressFair est spécialisée dans la mode durable et éthique. \nActivité : Elle identifie et certifie des fabricants d’articles de mode durable et éthique, fait la promotion de leurs articles soulignant l’aspect durable et éthique, et commercialise leurs articles via internet et ses boutiques.\n\nLe but de l’entreprise est d’augmenter la part de mode durable et éthique dans la mode.\nLe principal objectif de recherche est de parvenir à influencer la consommation, et la production, d’articles de mode responsable et éthique.\nLes thématiques de recherche sont :  \nParvenir à influencer les consommateurs à réaliser des achats de vêtements provenant de marques responsables et éthiques.  \nParvenir à influencer les marques à produire des vêtements responsables et éthiques.\nParvenir à montrer l’impact de nos activités sur la consommation de biens de mode et mesurer cet impact sur l’environnement.",
          "intentionDUsage": "Ces éléments seront utilisés pour démontrer l'éligibilité au dispositif CRÉDIT IMPÔT RECHERCHE (CIR) de travaux de recherche sur le thème de la mode durable, dans le cadre d'un rescrit CIR."
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-12-17T10:07:55.424Z",
      "updatedAt": "2023-12-20T20:25:13.009Z",
      "id": "DzuSxffpFOEBRhld",
      "name": "outil"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2023-12-20T16:48:57.000Z",
  "versionId": "b79d982a-9165-48be-baf4-f16a61360527"
}