{
  "active": true,
  "connections": {
    "set kinCredits": {
      "main": [
        [
          {
            "node": "Upsert kinCredits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "defaultEmbedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get body": {
      "main": [
        [
          {
            "node": "Kin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission kindev": {
      "main": [
        [
          {
            "node": "todo kindev",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "todo kindev": {
      "main": [
        [
          {
            "node": "Lancement de Mission kinDev",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Fetch onoff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "defaultEmbedding": {
      "main": [
        [
          {
            "node": "Get missions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get kinCredits": {
      "main": [
        [
          {
            "node": "set kinCredits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lancement de Mission kinDev": {
      "main": [
        [
          {
            "node": "/crud_mission/update/status error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get missions": {
      "main": [
        [
          {
            "node": "IF mission",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch onoff": {
      "main": [
        [
          {
            "node": "If on",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If on": {
      "main": [
        [
          {
            "node": "defaultEmbedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission : Update status": {
      "main": [
        [
          {
            "node": "/crud_mission/update/execution doing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kin": {
      "main": [
        [
          {
            "node": "Get kinCredits",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "mission kindev",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission : Update execution doing": {
      "main": [
        [
          {
            "node": "get body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF mission": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "/crud_mission/update/status doing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/update/status doing": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/update/execution doing": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update execution doing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/update/status error": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update status error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-23T14:34:33.442Z",
  "id": "uryTpGQcTgxTMlVP",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "CRONS",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 60
            }
          ]
        }
      },
      "id": "8ee08608-6d88-425d-b6b2-96951f3f2db0",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -700,
        380
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let client = $node[\"entree\"].json.client;\n\nlet kinCredits = $vars.startingKinCredits;\n\nif (Object.keys($json.vectors).length > 0 && $json.vectors[client]) {\n  kinCredits = $json.vectors[client].metadata.kinCredits;\n}\n\nlet startDate = new Date($node[\"get body\"].json[\"startTimestamp\"]);\n\nlet elapsedTime = Date.now() - startDate.getTime(); // Get current time and subtract start time\n\n// Convert milliseconds to minutes and subtract from kinCredits\n// Assuming elapsedTime needs to be in minutes for kinCredits calculation\nkinCredits = Math.floor(kinCredits - (elapsedTime / 60000)); // 60000 ms in a minute\n\nreturn {\"kinCredits\": kinCredits, \"client\": client};"
      },
      "id": "9d3b246c-d003-4132-8c69-c5e3df3adaf7",
      "name": "set kinCredits",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1940,
        820
      ]
    },
    {
      "parameters": {},
      "id": "3ba76c39-33a7-4a79-a4cd-96158a00bc40",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -100,
        560
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "$execution.customData.set(\"DOING\", \"true\");\n\nlet json = {\n  ...$node[\"entree\"].json,\n  \"startTimestamp\" : $now,\n  \"sync\" : false\n};\n\nreturn {\"json\": json};"
      },
      "id": "c517ddfa-df34-4eee-a2fc-e7f778f7153d",
      "name": "get body",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1260,
        580
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "mission",
              "stringValue": "=[PROCESSUS - Mission : Création de Rapport d'erreur]\n\nLa Boucle de Production a renvoyé une erreur.\nTa mission est de rédiger un rapport d'erreur et suggestion de correction à partir des informations dont tu disposes.\n\n[/PROCESSUS - Mission : Création de Rapport d'erreur]\n\n---\n\n[INFORMATIF - Date]\n\n{{ $node[\"Kin\"].json.date }}\n\n[/INFORMATIF - Date]\n\n---\n\n[INFORMATIF - Client]\n\n{{ $node[\"Kin\"].json.client }}\n\n[/INFORMATIF - Client]\n\n---\n\n[INFORMATIF - Mission du {{ $node[\"Kin\"].json.kin }}]\n\n{{ $node[\"Kin\"].json.mission.length > 8000 ? \"[...]\" : \"\" }}{{ $node[\"Kin\"].json.mission.substring($node[\"Kin\"].json.mission.length - 8000)}}\n\n[/INFORMATIF du {{ $node[\"Kin\"].json.kin }}]\n\n\n---\n\n[INFORMATIF - Dernier Kin Producteur ]\n\n{{ $node[\"Kin\"].json.dernierProducteur }}\n\n[/INFORMATIF - Dernier Kin Producteur ]\n\n\n---\n\n[INFORMATIF - Dernière production du Kin Producteur]\n\n{{ $node[\"Kin\"].json.output.length > 8000 ? \"[...]\" : \"\" }}{{ $node[\"Kin\"].json.output.substring($node[\"Kin\"].json.output.length - 8000)}}\n\n[/INFORMATIF - Dernière production du Kin Producteur]\n\n\n---\n\n[INFORMATIF - Dernier Message du KinManager]\n\n{{ $node[\"Kin\"].json.instructions }}\n\n[/INFORMATIF - Dernier Message du KinManager]\n\n---\n\n[INFORMATIF - Message d'erreur]\n\n{{ $node[\"Kin\"].json.error }}\n\n[/INFORMATIF - Message d'erreur]"
            }
          ]
        },
        "options": {}
      },
      "id": "3b669477-4c6d-47b1-9d98-814944c3b185",
      "name": "mission kindev",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        1720,
        600
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = JSON.parse(JSON.stringify($node[\"Kin\"].json));\n\ndelete json.query;\n\n// Mettre à jour le Kin\njson.kinDemandeur = json.kin;\njson.kin = \"kindev\";\njson.format = \"pdf\";\n\n// Mettre à jour la mission\njson.missionDuDemandeur = json.mission;\njson.mission = $node[\"mission kindev\"].json.mission;\n\n// Function to remove null attributes from a JSON object\nfunction removeNullAttributes(obj) {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] === null || obj[key] == \"\") {\n            delete obj[key];\n        } else if (typeof obj[key] === 'object') {\n            // Recursive call for nested objects\n            removeNullAttributes(obj[key]);\n        }\n    });\n}\n\n// Function to remove threads & prompts\nfunction removePropertiesWithThread(obj) {\n    for (let key in obj) {\n        if (key.toLowerCase().includes('thread') || key.toLowerCase().includes('prompt')) {\n            // Supprime la propriété si la clé contient 'thread'\n            delete obj[key];\n        } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n            // Appel récursif si la propriété est un objet\n            removePropertiesWithThread(obj[key]);\n        }\n    }\n}\n\n// Remove threads from the json object\nremoveNullAttributes(json);\n\n// Remove null attributes from the json object\nremovePropertiesWithThread(json);\n\nreturn {\"json\": json};"
      },
      "id": "91fb0126-ba4d-44d2-aee5-5c4447d0425a",
      "name": "todo kindev",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1940,
        600
      ],
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": "=IJeSapyzv0Y9koZ9",
        "options": {}
      },
      "id": "4309723d-5ded-4ff0-9215-8615e10edd17",
      "name": "defaultEmbedding",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        120,
        380
      ]
    },
    {
      "parameters": {
        "url": "={{ $vars.vectorDatabaseEndpoint }}vectors/fetch",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"kinCredits\",\n  \"ids\": \"{{ $node[\"entree\"].json.client }}\"\n}",
        "options": {}
      },
      "id": "3814c871-e51d-4d1c-a5fc-d7ba3d18a344",
      "name": "Get kinCredits",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1720,
        820
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $vars.vectorDatabaseEndpoint }}vectors/upsert",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"namespace\": \"kinCredits\",\n\"vectors\": {\n\"id\": \"{{ $node[\"entree\"].json.client }}\",\n\"metadata\": {{ JSON.stringify($json) }},\n\"values\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }}\n}\n}",
        "options": {}
      },
      "id": "4c6d4107-22b5-445d-b6b2-c4ddd40231a6",
      "name": "Upsert kinCredits",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        2160,
        820
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "DXYPhavwlYlTKPqu",
        "options": {}
      },
      "id": "3f9f23a5-b706-4b41-91a6-0b2155858a25",
      "name": "Lancement de Mission kinDev",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2160,
        600
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "## TODO : AJouter verif Kinactif"
      },
      "id": "29d04526-55ea-4146-97a3-7e8242cb10b8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        500,
        280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $vars.vectorDatabaseEndpoint }}query",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"missions\",\n  \"includeMetadata\": true,\n  \"topK\": 1,\n  \"filter\" : {\"status\": \"todo\"},\n  \"vector\": {{ JSON.stringify($node[\"defaultEmbedding\"].json.defaultEmbedding) }}\n}",
        "options": {}
      },
      "id": "75a3339b-0ebc-419f-8245-cd6767ce62c5",
      "name": "Get missions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        340,
        380
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $vars.vectorDatabaseEndpoint }}vectors/fetch",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"onoff\",\n  \"ids\": [\"onoff\"]\n}",
        "options": {}
      },
      "id": "adebbd6f-6c9d-4a64-941c-aa0dda8a0995",
      "name": "Fetch onoff",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -420,
        380
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "026b34bb-7dfa-4fa4-af16-d78a4e166711",
              "leftValue": "={{ $json.vectors.onoff.metadata.value }}",
              "rightValue": "on",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4a1d3487-a36e-482e-b5d7-668cc8d0cb46",
      "name": "If on",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        380
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "25e082ce-2030-47a0-8ec0-3652d6ce416d",
      "name": "CRUD Mission : Update status",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1480,
        380
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "7d411433-0ad3-40c9-bfa9-602348de4545",
      "name": "CRUD Mission : Update status error",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2600,
        600
      ]
    },
    {
      "parameters": {
        "workflowId": "=RCzPi7XT4ijau6eF",
        "options": {}
      },
      "id": "2b11eef6-d1fc-46e7-891e-dece1a8d405d",
      "name": "Kin",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1480,
        680
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "11d38fd1-7512-4126-b8f6-0ef036e102e6",
      "name": "CRUD Mission : Update execution doing",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1940,
        380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ Object.keys($json.matches).length > 0 }}",
              "value2": true
            }
          ]
        }
      },
      "id": "539e0adc-cb2d-45e8-8dd6-6ee4217382cf",
      "name": "IF mission",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        580,
        380
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"Get missions\"].json.matches[0].metadata;\n\njson.status = \"doing\";\njson.execution = \"doing\";\njson.date = $now.toString();\njson.executionId = $execution.id;\n\nreturn {\"json\": json};"
      },
      "id": "77a81cf9-d90b-4c15-8401-a461b76d7ee7",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        380
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/crud_mission/update/status doing\";\n\nreturn {\"json\": json};"
      },
      "id": "021fb58a-dd9e-4b16-b9b2-82bc75c2e668",
      "name": "/crud_mission/update/status doing",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1260,
        380
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/crud_mission/update/execution doing\";\n\nreturn {\"json\": json};"
      },
      "id": "b168ff6a-23d8-4d2b-9080-d8c769b95f4d",
      "name": "/crud_mission/update/execution doing",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1720,
        380
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/crud_mission/update/status error\";\n\nreturn {\"json\": json};"
      },
      "id": "b431785a-0f2c-4c3c-9dab-ec3371246dc9",
      "name": "/crud_mission/update/status error",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2380,
        600
      ]
    },
    {
      "parameters": {
        "content": "## Get defaultEmbedding\nhttps://kins.app.n8n.cloud/workflow/IJeSapyzv0Y9koZ9",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "eb848b38-fd9b-4e54-9e17-ea8b7908e614",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        260
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "f1abebc3-0b88-4b04-9cbc-7f4b6bbea5e9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1400,
        280
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "8cd3b585-744f-4aaf-b69d-521b35e2a117",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        280
      ]
    },
    {
      "parameters": {
        "content": "## BOUCLE DE PRODUCTION\nhttps://kins.app.n8n.cloud/workflow/RCzPi7XT4ijau6eF",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "20f731f6-241f-46fb-80b3-71de98c6615b",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1400,
        560
      ]
    },
    {
      "parameters": {
        "content": "## Not share (workflow deleted - refactoré dans crud mission)\nhttps://kins.app.n8n.cloud/workflow/DXYPhavwlYlTKPqu",
        "height": 337.1180096162573,
        "width": 250.71967654986526
      },
      "id": "67f189a8-619c-4ce2-8bba-1bcf71c969fb",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2080,
        457.43370704644735
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "e319bc17-91c5-42a0-a229-09e486deaaec",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2520,
        520
      ]
    }
  ],
  "pinData": {
    "When clicking \"Execute Workflow\"": [
      {
        "json": {
          "query": "Réalise une première version du document en entier",
          "kinName": "kincir_dynergie",
          "demandeur": "KinCIR - Générateur de programme R&D",
          "demandeurId": "asst_PtFkjK3WpkPD5u6ZLc6toZ0q",
          "producteurId": "asst_RMuliVrHho2VxBhfZBG1cnTN",
          "contexte": "L’entreprise WeDressFair est spécialisée dans la mode durable et éthique. \nActivité : Elle identifie et certifie des fabricants d’articles de mode durable et éthique, fait la promotion de leurs articles soulignant l’aspect durable et éthique, et commercialise leurs articles via internet et ses boutiques.\n\nLe but de l’entreprise est d’augmenter la part de mode durable et éthique dans la mode.\nLe principal objectif de recherche est de parvenir à influencer la consommation, et la production, d’articles de mode responsable et éthique.\nLes thématiques de recherche sont :  \nParvenir à influencer les consommateurs à réaliser des achats de vêtements provenant de marques responsables et éthiques.  \nParvenir à influencer les marques à produire des vêtements responsables et éthiques.\nParvenir à montrer l’impact de nos activités sur la consommation de biens de mode et mesurer cet impact sur l’environnement.",
          "intentionDUsage": "Ces éléments seront utilisés pour démontrer l'éligibilité au dispositif CRÉDIT IMPÔT RECHERCHE (CIR) de travaux de recherche sur le thème de la mode durable, dans le cadre d'un rescrit CIR.",
          "demande": "Réalise une première version du document en entier",
          "message": "# Contexte\n\nL’entreprise WeDressFair est spécialisée dans la mode durable et éthique. \nActivité : Elle identifie et certifie des fabricants d’articles de mode durable et éthique, fait la promotion de leurs articles soulignant l’aspect durable et éthique, et commercialise leurs articles via internet et ses boutiques.\n\nLe but de l’entreprise est d’augmenter la part de mode durable et éthique dans la mode.\nLe principal objectif de recherche est de parvenir à influencer la consommation, et la production, d’articles de mode responsable et éthique.\nLes thématiques de recherche sont :  \nParvenir à influencer les consommateurs à réaliser des achats de vêtements provenant de marques responsables et éthiques.  \nParvenir à influencer les marques à produire des vêtements responsables et éthiques.\nParvenir à montrer l’impact de nos activités sur la consommation de biens de mode et mesurer cet impact sur l’environnement.\n\n# Intention d'Usage\n\nCes éléments seront utilisés pour démontrer l'éligibilité au dispositif CRÉDIT IMPÔT RECHERCHE (CIR) de travaux de recherche sur le thème de la mode durable, dans le cadre d'un rescrit CIR.\n\n# Demande de KinCIR - Générateur de programme R&D\n\n"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-23T15:32:23.987Z",
      "updatedAt": "2024-01-23T15:32:23.987Z",
      "id": "wt7Cl4Mt8mR1bDh4",
      "name": "admin"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-08T15:09:26.000Z",
  "versionId": "58ed05be-7804-4fa8-87f0-e167000898fd"
}