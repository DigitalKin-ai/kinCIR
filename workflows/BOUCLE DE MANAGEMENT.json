{
  "active": true,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "/crud_mission/read1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "Fetch onoff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "defaultEmbedding": {
      "main": [
        [
          {
            "node": "entree thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch onoff": {
      "main": [
        [
          {
            "node": "If on",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If on": {
      "main": [
        [
          {
            "node": "defaultEmbedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Prompt": {
      "ai_tool": [
        [
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message au CTO": {
      "ai_tool": [
        [
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission : Update execution todo": {
      "main": [
        [
          {
            "node": "/crud_mission/update/status todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de Kin": {
      "ai_tool": [
        [
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de document": {
      "ai_tool": [
        [
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/update/execution todo": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update execution todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/update/status todo": {
      "main": [
        [
          {
            "node": "CRUD Mission : Update status todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinmanager": {
      "main": [
        [
          {
            "node": "/crud_mission/read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "threadManagement Init": {
      "main": [
        [
          {
            "node": "threadManagement",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "threadManagement": {
      "main": [
        [
          {
            "node": "kinmanager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "add threadManagement": {
      "main": [
        [
          {
            "node": "threadManagement",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/read": {
      "main": [
        [
          {
            "node": "CRUD Mission : Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission : Read": {
      "main": [
        [
          {
            "node": "mission",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission": {
      "main": [
        [
          {
            "node": "If mission status done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If execution doing": {
      "main": [
        [
          {
            "node": "add threadManagement",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "entree notifications",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If mission status done": {
      "main": [
        [
          {
            "node": "If not kinmail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If mission status exception",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "thread": {
      "main": [
        [
          {
            "node": "threadManagement Init",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree thread": {
      "main": [
        [
          {
            "node": "thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree notifications": {
      "main": [
        [
          {
            "node": "Send  Notifications",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send  Notifications": {
      "main": [
        [
          {
            "node": "/crud_mission/update/execution todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nouvelleMission kinmail": {
      "main": [
        [
          {
            "node": "CRUD Mission : Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission kinmail": {
      "main": [
        [
          {
            "node": "nouvelleMission kinmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If not kinmail": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If mission status exception": {
      "main": [
        [
          {
            "node": "If not kindev",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If execution doing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mission kindev": {
      "main": [
        [
          {
            "node": "nouvelleMission kindev",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nouvelleMission kindev": {
      "main": [
        [
          {
            "node": "CRUD Mission : Create1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If not kindev": {
      "main": [
        [
          {
            "node": "mission kindev",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "get body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get body": {
      "main": [
        [
          {
            "node": "/crud_mission/read1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/crud_mission/read1": {
      "main": [
        [
          {
            "node": "CRUD Mission : Read1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission : Read1": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRUD Mission": {
      "ai_tool": [
        [
          {
            "node": "kinmanager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-02-06T16:08:01.983Z",
  "id": "0LhMxlt62MaWdiqs",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "BOUCLE DE MANAGEMENT",
  "nodes": [
    {
      "parameters": {},
      "id": "4c551096-2d8c-448e-9074-2ca4e6e13bc6",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1440,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\njson.date = $now.toString();\njson.executionId = $execution.id;\n\nreturn {\"json\": json};"
      },
      "id": "59d20e8c-1475-4d1a-a7ff-41b956116f39",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        960
      ],
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": "=IJeSapyzv0Y9koZ9",
        "options": {}
      },
      "id": "543fbe37-60f8-46f4-a7c0-fd2d349bc8b6",
      "name": "defaultEmbedding",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        80,
        960
      ]
    },
    {
      "parameters": {
        "url": "={{ $vars.vectorDatabaseEndpoint }}vectors/fetch",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "pineconeApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"namespace\": \"onoff\",\n  \"ids\": [\"onoff\"]\n}",
        "options": {}
      },
      "id": "ced671dc-c605-48d5-bc8a-9ab5e95b633a",
      "name": "Fetch onoff",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -360,
        960
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "026b34bb-7dfa-4fa4-af16-d78a4e166711",
              "leftValue": "={{ $json.vectors.onoff.metadata.value }}",
              "rightValue": "on",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c6312eb3-e720-4c14-b5da-87e42e153820",
      "name": "If on",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -140,
        960
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_prompt",
        "description": "Le questionneur_de_prompt retourne un extrait du prompt système statique du Kin demandé ou une répond à une question sur le prompt à partir d'une demande informationnelle détaillée. Cela permet de répondre à des questions sur la proposition de valeur, le rôle, et les Actions disponibles pour ce Kin.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée contenant :\n- Le nom du Kin dont tu souhaites récupérer le prompt,\n- La section demandée (Proposition de Valeur, Action n°1, etc.)\n- Verbatim/non-verbatim : Si les extraits du prompt doivent être retranscrit verbatim",
        "workflowId": "1gSRJ9a1XiIgSYRx",
        "fields": {
          "values": [
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "kinmanager"
            }
          ]
        }
      },
      "id": "02b6a17c-ad10-4f6c-87aa-dccb5dabf986",
      "name": "Questionneur de Prompt",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1760,
        1240
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "1fc1f2bb-a5f8-4f76-81ab-0cd784591e94",
      "name": "CRUD Mission : Update status todo",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4560,
        1740
      ]
    },
    {
      "parameters": {
        "name": "message_au_cto",
        "description": "La fonction message_au_cto envoie le message passé dans \"query\" au CTO de DigitalKin, Nicolas Lester Reynolds.\n\nIl peut être utilisé pour signaler un problème, demander de l'aide ou une modification, demander un déblocage, ou suggérer une amélioration.",
        "workflowId": "NjRYPuz1EgoPxWfP",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "7af6bfe5-3dfc-471c-9471-464353d84c26",
      "name": "Message au CTO",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1900,
        1240
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "93869e26-28c8-4064-83d3-4cb0ddf3a48a",
      "name": "CRUD Mission : Update execution todo",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4120,
        1740
      ]
    },
    {
      "parameters": {
        "name": "questionneur_de_kin",
        "description": "La fonction questionneur_de_kin permet de poser à un Kin de l'équipe une question rapide.\n\nPour bien l'utiliser :\n- Mentionne le nom du @Kin,\n- Explique ton contexte et ton intention d'usage,\n- ta question.",
        "workflowId": "m3wfYxyTxFXqib9D",
        "fields": {
          "values": [
            {
              "name": "=kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "missionId",
              "stringValue": "={{ $node[\"entree\"].json.missionId }}"
            },
            {
              "name": "kinDemandeur",
              "stringValue": "kinmanager"
            }
          ]
        }
      },
      "id": "3b7bfb6f-5d6c-4e3b-890b-5c2effafbaff",
      "name": "Questionneur de Kin",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1280,
        1240
      ],
      "disabled": true
    },
    {
      "parameters": {
        "name": "questionneur_de_document",
        "description": "=Le questionneur_de_document retourne une réponse issue du contenu du document final sur lequel travaille le Kin Producteur, à partir d'une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- (optionnel) Si tu souhaites du verbatim,\n- Les informations que tu cherches,\n- L'intention d'usage : tu souhaites faire de la réponse,\n- Le format de réponse désiré.",
        "workflowId": "anybPoo9G98Nx3qW",
        "fields": {
          "values": [
            {
              "name": "sync",
              "type": "booleanValue"
            },
            {
              "name": "kin",
              "stringValue": "={{ $node[\"entree\"].json.kin }}"
            },
            {
              "name": "mission",
              "stringValue": "={{ $node[\"entree\"].json.mission }}"
            },
            {
              "name": "documentGoogleDriveId",
              "stringValue": "={{ $node[\"entree\"].json.documentGoogleDriveId }}"
            },
            {
              "name": "format",
              "stringValue": "md"
            },
            {
              "name": "threadId",
              "stringValue": "={{ $node[\"entree\"].json.threadId }}"
            }
          ]
        }
      },
      "id": "a4b42a7c-112b-4ec7-b54d-ae2bff742b13",
      "name": "Questionneur de document",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1600,
        1240
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/crud_mission/update/execution todo\";\n\nreturn {\"json\": json};"
      },
      "id": "c3bca6d7-1f7f-456f-b898-cf0cfe5a34cd",
      "name": "/crud_mission/update/execution todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        1640
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\njson.query = \"/crud_mission/update/status todo\";\n\nreturn {\"json\": json};"
      },
      "id": "bb2f96c6-e5c8-45bc-8436-c6378fdbf9c0",
      "name": "/crud_mission/update/status todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4340,
        1640
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_NRJfqzvKf73U2CjrI4bqMSf5",
        "text": "=[INFORMATIF - Mission du Producteur ({{ $node[\"entree\"].json.dernierProducteur }})]\n\n{{ $node[\"entree\"].json.mission.length > 5000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.mission.substring($node[\"entree\"].json.mission.length - 5000)}}\n\n[/INFORMATIF - Mission du Producteur ({{ $node[\"entree\"].json.dernierProducteur }})]\n\n===\n\n[INFORMATIF - THREAD D'AVANCEMENT du {{ $node[\"entree\"].json.dernierProducteur }}]\n\n{{ $node[\"thread\"].json.thread.length > 5000 ? \"[...]\" : \"\" }}{{ $node[\"thread\"].json.thread.substring($node[\"thread\"].json.thread.length - 5000) }}\n\n[/INFORMATIF - THREAD D'AVANCEMENT du {{ $node[\"entree\"].json.dernierProducteur }}]\n\n===\n\n[INFORMATIF - Dernières Instructions que tu as données à {{ $node[\"entree\"].json.dernierProducteur }}]\n\n{{ $node[\"entree\"].json.instructions }}\n\n[/INFORMATIF - Dernières Instructions que tu as données à {{ $node[\"entree\"].json.dernierProducteur }}]\n\n===\n\n[INFORMATIF - Rédaction réalisée / Actions effectuées par {{ $node[\"entree\"].json.dernierProducteur }}]\n\n{{ $node[\"entree\"].json.output.length > 5000 ? \"[...]\" : \"\" }}{{ $node[\"entree\"].json.output.substring($node[\"entree\"].json.output.length - 5000)}}\n\n[/INFORMATIF - Rédaction réalisée / Actions effectuées par {{ $node[\"entree\"].json.dernierProducteur }}]\n\n===\n\n{{ $json.threadManagement }}",
        "options": {}
      },
      "id": "8101b345-e135-4484-9538-703906b31a84",
      "name": "kinmanager",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        1620,
        960
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Continuer la production",
        "height": 281.6342991491455,
        "width": 949.8359845868031
      },
      "id": "5335ca45-248b-44b7-b58d-0fa9a510a78d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3820,
        1580
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\"json\": {\"threadManagement\": $json.threadManagement}};"
      },
      "id": "be23cc78-1c1e-44a9-b3ce-4442ff00f5d4",
      "name": "threadManagement",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1060,
        960
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "threadManagement",
              "stringValue": "=[MISSION KINMANAGER : Manager la Boucle de Production]\n\nEffectuer les Actions 1, 2, 3 de ton processus de KinManager une par une, de manière à :\n- **ACTION - 1. Déterminer la Prochaine Étape : TODO**\n- **ACTION - 2. Mettre à Jour des Instructions via appel GPT : TODO**\n- **ACTION - 3. Déclencher la Prochaine Étape via appel GPT : TODO**\n\n[/MISSION KINMANAGER : Manager la Boucle de Production]\n\n===\n\nINSTRUCTION : Effectue l'ACTION N°1."
            }
          ]
        },
        "options": {}
      },
      "id": "01a2e19a-6cfe-44d4-9032-d15618886c1e",
      "name": "threadManagement Init",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        800,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let output = $node[\"kinmanager\"].json.output;\nlet threadManagement = $node[\"threadManagement\"].json.threadManagement;\n\nthreadManagement += output + \"\\n\\n---\\n\\n Instruction : Continue avec la prochaine étape. N'oublie pas d'utiliser la fonction GPT \\\"crud_mission\\\", et pas la sortie standard.\";\n\nreturn {\"json\": {\"threadManagement\": threadManagement}};"
      },
      "id": "d047dbce-dab0-4120-99ec-cbc200af090a",
      "name": "add threadManagement",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3100,
        1580
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "5885aa3b-b4ed-4e4d-8028-054723f69bbe",
      "name": "CRUD Mission : Read",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2200,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = {};\n\njson.query = \"/crud_mission/read\";\njson.missionId = $node[\"entree\"].json.missionId;\n\nreturn {\"json\": json};"
      },
      "id": "e6a70dbd-838c-4003-bfe3-0c05b80d923d",
      "name": "/crud_mission/read",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1980,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\"json\":JSON.parse($json.response)};"
      },
      "id": "b8025611-5c9c-4f2e-b94d-09372e7c8eac",
      "name": "mission",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2400,
        960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f86d6c4a-14cb-46a7-a631-06f4f2aad672",
              "leftValue": "={{ $json.execution }}",
              "rightValue": "doing",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2999f64d-a911-44c7-9907-c07f0553a5bc",
      "name": "If execution doing",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2840,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f86d6c4a-14cb-46a7-a631-06f4f2aad672",
              "leftValue": "={{ $json.status }}",
              "rightValue": "done",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b20ade2b-a3e4-4c1e-8994-cbf4d2d31495",
      "name": "If mission status done",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2620,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "YWxRZmBa38HYCjnv",
        "options": {}
      },
      "id": "1494fc15-de27-4700-a288-9d44ca7827af",
      "name": "thread",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        560,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\nreturn {\"json\": json};"
      },
      "id": "865afd13-0488-45f3-b997-80f40479f84a",
      "name": "entree thread",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        960
      ]
    },
    {
      "parameters": {
        "content": "## Trigger by\nCRUD Mission : https://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi\nBOUCLE DE PRODUCTION : https://kins.app.n8n.cloud/workflow/RCzPi7XT4ijau6eF",
        "height": 176.81162829198897,
        "width": 250.71967654986526
      },
      "id": "babdbdaf-bdde-4c60-90e3-a0fca6792970",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1740,
        920
      ]
    },
    {
      "parameters": {
        "content": "## Get defaultEmbedding\nhttps://kins.app.n8n.cloud/workflow/IJeSapyzv0Y9koZ9",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "8d7371bd-6a48-4fe8-84a0-9032ecd54ef4",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        840
      ]
    },
    {
      "parameters": {
        "content": "## Get/Create Thread\nhttps://kins.app.n8n.cloud/workflow/YWxRZmBa38HYCjnv",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "66232778-7c2f-4781-8aae-eff09efa6028",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        480,
        840
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "e5bef0dc-bb31-4896-9306-f43ecf64a9b2",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2120,
        840
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "18d50cc4-86cb-403b-8d35-5b95db379346",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4040,
        1640
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "6044fc43-da1e-41c3-8a28-827bece261d6",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4480,
        1640
      ]
    },
    {
      "parameters": {
        "workflowId": "=EYWde6gUS9Qq2ok7",
        "options": {}
      },
      "id": "ff6ac04a-ec98-49ad-90fa-a0f049a42ae4",
      "name": "Send  Notifications",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3700,
        1640
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"entree\"].json;\n\nreturn {\"json\" : json};"
      },
      "id": "2d689b2e-d48d-4dce-b4f6-666db45bc7fb",
      "name": "entree notifications",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3480,
        1640
      ]
    },
    {
      "parameters": {
        "content": "## todo : protection cas boucle infinie "
      },
      "id": "bc34c6b8-a833-4546-9a4e-cdb4dc664403",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2140,
        1420
      ]
    },
    {
      "parameters": {
        "content": "## Todo : gérer status exception : sortir de la boucle"
      },
      "id": "d144af61-7075-4a41-a3c6-c28600f6eefa",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2440,
        1400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f86d6c4a-14cb-46a7-a631-06f4f2aad672",
              "leftValue": "={{ $json.status }}",
              "rightValue": "done",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eb78a878-ae98-4e41-9cf0-4cbd7cebc2c7",
      "name": "If mission status exception",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2780,
        1200
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "13188348-1b2a-41ac-aea3-9e7cd86a4d9d",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3980,
        840
      ]
    },
    {
      "parameters": {
        "content": "# Fin de mission",
        "height": 278.0034245476785,
        "width": 949.8359845868031
      },
      "id": "9e2b7cf1-22b6-408c-ac40-86d60b4a4f74",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3320,
        780
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "7a666bdf-4ae2-413d-a865-4bb9490dd211",
      "name": "CRUD Mission : Create",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4060,
        960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "c0b309e0-3b5d-4002-8ca5-2b8aae1e0572",
              "leftValue": "={{ $node[\"mission\"].json.kin }}",
              "rightValue": "=kinmail",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "id": "682260d2-4356-4a6f-98fb-1f5f01baf8da",
      "name": "If not kinmail",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3400,
        860
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = JSON.parse(JSON.stringify($node[\"entree\"].json));\n\ndelete json.query;\n\n// Mettre à jour le Kin\njson.kinDemandeur = json.kin;\njson.kin = \"kinmail\";\n\n// Mettre à jour la mission\njson.query = \"/crud_mission/create/\" + json.kin  + \" \" + $node[\"mission kinmail\"].json.mission;\n\nreturn {\"json\": json};"
      },
      "id": "ddf72be7-cc39-42de-831c-8e9b434cd1ae",
      "name": "nouvelleMission kinmail",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3840,
        860
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "mission",
              "stringValue": "=Date : {{ $node[\"entree\"].json.date }}\nClient : {{ $node[\"entree\"].json.client }}\n\n**PROCESSUS - MISSION : Rédaction & Envoi du mail de clôture par KinMail:**\n\nLa mission du  {{  $node[\"entree\"].json.dernierProducteur }} est accomplie. **Ta mission, en tant que KinMail, est de rédiger et d'envoyer au client le mail de clôture présentant le travail accompli.\n\n===\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "b560ab29-bcef-4fc5-a70c-3faf8e261bad",
      "name": "mission kinmail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        3620,
        860
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "79d67ac4-3673-487f-82c5-5cdacb0421bb",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3980,
        1240
      ]
    },
    {
      "parameters": {
        "content": "# Mission de debug",
        "height": 278.0034245476785,
        "width": 949.8359845868031
      },
      "id": "cee9a40f-48f4-44b2-a833-32c0833abb07",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3320,
        1180
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "594a5111-27be-4971-8518-c0ede0006373",
      "name": "CRUD Mission : Create1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        4060,
        1360
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "mission",
              "stringValue": "=Date : {{ $node[\"entree\"].json.date }}\nClient : {{ $node[\"entree\"].json.client }}\n\n**PROCESSUS - MISSION : Gestion de l'EXCEPTION :**\n\nLa mission du  {{  $node[\"entree\"].json.dernierProducteur }} a donné lieu à une EXCEPTION. **Ta mission, en tant que KinDev, est de comprendre le problème et d'écrire un court rapport d'exception.\n\n===\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "538d0cde-bdc8-4a3e-96b8-fc78fd21a41d",
      "name": "mission kindev",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        3620,
        1260
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = JSON.parse(JSON.stringify($node[\"entree\"].json));\n\ndelete json.query;\n\n// Mettre à jour le Kin\njson.kinDemandeur = json.kin;\njson.kin = \"kindev\";\n\n// Mettre à jour la mission\njson.query = \"/crud_mission/create/\" + json.kin  + \" \" + $node[\"mission kindev\"].json.mission;\n\nreturn {\"json\": json};"
      },
      "id": "782ab842-2928-45ec-ae29-87784b97aae4",
      "name": "nouvelleMission kindev",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3840,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "c0b309e0-3b5d-4002-8ca5-2b8aae1e0572",
              "leftValue": "={{ $node[\"mission\"].json.kin }}",
              "rightValue": "=kindev",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "id": "8107aaf5-0295-4b34-b3f2-4f4faeae042b",
      "name": "If not kindev",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3400,
        1260
      ]
    },
    {
      "parameters": {
        "content": "## TODO : persist and gérer threadmanagement",
        "height": 344.1232937749526,
        "width": 306.48896719651054
      },
      "id": "a435d6f5-9182-41d5-aff1-c90ea13d6e25",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        800
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let body = $json.body;\n\nreturn {\"json\": body};"
      },
      "id": "ca93747e-22ee-4ecb-850e-60db92ad8c3b",
      "name": "get body",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1440,
        720
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "boucle-de-management",
        "options": {}
      },
      "id": "b3bce9ac-bc27-4ed6-acb9-1b45026eace8",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        -1660,
        720
      ],
      "webhookId": "cf90f826-df54-4ebe-957b-24866d0dd189"
    },
    {
      "parameters": {
        "workflowId": "rr8aeSM8QYyY8Po4",
        "options": {}
      },
      "id": "074d331c-7e54-428f-b062-0ec43fc9af1b",
      "name": "Send Email",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3620,
        560
      ]
    },
    {
      "parameters": {
        "content": "## CRUD Mission\nhttps://kins.app.n8n.cloud/workflow/HLDDZOmG8kuk2zTi",
        "height": 274.5517166627047,
        "width": 250.71967654986526
      },
      "id": "421af108-8117-4566-aefa-d51f4d0612dd",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        860
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\njson.query = \"/crud_mission/read/\" + $json.missionId;\njson.responseFormat = \"json\";\n\nreturn {\"json\": json};"
      },
      "id": "c20f3153-357c-4427-91a0-3f5440f9312c",
      "name": "/crud_mission/read1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1020,
        960
      ]
    },
    {
      "parameters": {
        "workflowId": "HLDDZOmG8kuk2zTi",
        "options": {}
      },
      "id": "64de47bb-1c2a-4097-8776-b299af66d8ec",
      "name": "CRUD Mission : Read1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -800,
        960
      ]
    },
    {
      "parameters": {
        "name": "crud_mission",
        "description": "La fonction \"crud_mission\" permet au Manager d'effectuer des actions sur les missions. Permet de lancer, arrêter, ou modifier la mission en cours d'exécution.\n\nAppels disponibles :\n   - Pour **continuer la boucle de production**, si l'analyse montre que la mission est sur la bonne voie et qu'il suffit de poursuivre selon le plan établi :\n     ```\n     /crud_mission/update/execution todo\n     ```\n   - Pour **gérer une exception**, si un obstacle imprévu se présente nécessitant une action corrective ou une adaptation :\n     ```\n     /crud_mission/update/status exception\n     ```\n   - Pour **formuler une demande spécifique**, lorsqu'une expertise, une action, ou une ressource spécifique d'un autre Kin est nécessaire pour poursuivre :\n     ```\n     - /crud_mission/create/nomdukindemandé <Description détaillée de la nouvelle mission, y compris le contexte de la mission, l'objectif spécifique de cette demande, et son importance pour l'avancée de la mission du demandeur>.\n     ```\n   - Pour **conclure la mission**, lorsque tous les objectifs sont atteints et que la mission peut être considérée comme terminée :\n     ```\n     /crud_mission/update/status done\n     ```",
        "workflowId": "HLDDZOmG8kuk2zTi",
        "fields": {
          "values": [
            {
              "name": "missionId",
              "stringValue": "=kinrsi-ameliorationContinue"
            },
            {
              "name": "responseFormat",
              "stringValue": "=response"
            }
          ]
        }
      },
      "id": "815f7689-2293-4ded-8ae3-3ae1264ae6eb",
      "name": "CRUD Mission",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [
        1440,
        1240
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "assistantId": "asst_3pQx4lfP0EN6Jstj8kozdBtC",
          "commandText": "",
          "date": "2024-02-12T20:22:24.698+01:00",
          "dernierProducteur": "kinontologie",
          "execution": "doing",
          "executionId": "174368",
          "firstAttribute": "kinontologie-ameliorationContinue",
          "format": "md",
          "instructions": "TODO: - Vérifier que les Kins (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue) ont bien reçu et compris leurs demandes respectives.\n- Demander une mise à jour sur l'état d'avancement des tâches assignées à chacun.\n- Encourager la priorisation de ces tâches pour assurer le bon déroulement des préparatifs de la réunion de lancement.\n- Vérifier spécifiquement l'avancement du KinAnalysteDeCommunication et du KinTechnologue pour soutenir efficacement la communication et l'implication dans le projet d'amélioration continue.\n\nProchaine action à réaliser: Envoyer des demandes de mise à jour sur l'avancement des tâches aux Kins concernés (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue).",
          "kin": "kinontologie",
          "message": "{\"message_id\":8,\"from\":{\"id\":1864364329,\"is_bot\":false,\"first_name\":\"Nicolas Lester\",\"last_name\":\"Reynolds - CPO @ DigitalKin\",\"username\":\"lesterpaintstheworld\",\"language_code\":\"en\"},\"chat\":{\"id\":-4155607972,\"title\":\"Kins Amélioration Continue\",\"type\":\"group\",\"all_members_are_administrators\":true},\"date\":1707754461,\"text\":\"@kinsameliorationcontinue Bonjour à tous les kins De qui font part de l'unité fonctionnelle , amélioration continue . Nous disposons désormais d'un espace de chat commun qui nous permettra de nous aligner sur l'amélioration continue Cet espace ne permet notamment au Aux développeurs humains de vous faire part des nouvelles fonctionnalités et des changements dans la code base \",\"entities\":[{\"offset\":0,\"length\":24,\"type\":\"mention\"}]}",
          "mission": "**PROCESSUS - MISSION : AMELIORATION CONTNIUE :**\n\nL'amélioration continue est ton objectif quand tu n'es pas assigné à une mission spécifique. Ton rôle est de collaborer avec les autres Kins de l'équipe afin d'améliorer votre travail. \n\n===",
          "missionId": "kinontologie-ameliorationContinue",
          "missionIdDemandeur": "kinontologie-ameliorationContinue",
          "status": "doing",
          "telegramChatId": -4155607972,
          "threadId": "ameliorationContinue",
          "uniteFonctionnelle": "ameliorationContinue",
          "response": "{\"assistantId\":\"asst_3pQx4lfP0EN6Jstj8kozdBtC\",\"commandText\":\"doing\",\"date\":\"2024-02-12T19:41:25.852+01:00\",\"dernierProducteur\":\"kinontologie\",\"execution\":\"doing\",\"executionId\":\"172512\",\"firstAttribute\":\"kinontologie\",\"format\":\"md\",\"instructions\":\"TODO: - Vérifier que les Kins (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue) ont bien reçu et compris leurs demandes respectives.\\n- Demander une mise à jour sur l'état d'avancement des tâches assignées à chacun.\\n- Encourager la priorisation de ces tâches pour assurer le bon déroulement des préparatifs de la réunion de lancement.\\n- Vérifier spécifiquement l'avancement du KinAnalysteDeCommunication et du KinTechnologue pour soutenir efficacement la communication et l'implication dans le projet d'amélioration continue.\\n\\nProchaine action à réaliser: Envoyer des demandes de mise à jour sur l'avancement des tâches aux Kins concernés (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue).\",\"kin\":\"kinontologie\",\"message\":\"{\\\"message_id\\\":8,\\\"from\\\":{\\\"id\\\":1864364329,\\\"is_bot\\\":false,\\\"first_name\\\":\\\"Nicolas Lester\\\",\\\"last_name\\\":\\\"Reynolds - CPO @ DigitalKin\\\",\\\"username\\\":\\\"lesterpaintstheworld\\\",\\\"language_code\\\":\\\"en\\\"},\\\"chat\\\":{\\\"id\\\":-4155607972,\\\"title\\\":\\\"Kins Amélioration Continue\\\",\\\"type\\\":\\\"group\\\",\\\"all_members_are_administrators\\\":true},\\\"date\\\":1707754461,\\\"text\\\":\\\"@kinsameliorationcontinue Bonjour à tous les kins De qui font part de l'unité fonctionnelle , amélioration continue . Nous disposons désormais d'un espace de chat commun qui nous permettra de nous aligner sur l'amélioration continue Cet espace ne permet notamment au Aux développeurs humains de vous faire part des nouvelles fonctionnalités et des changements dans la code base \\\",\\\"entities\\\":[{\\\"offset\\\":0,\\\"length\\\":24,\\\"type\\\":\\\"mention\\\"}]}\",\"mission\":\"**PROCESSUS - MISSION : AMELIORATION CONTNIUE :**\\n\\nL'amélioration continue est ton objectif quand tu n'es pas assigné à une mission spécifique. Ton rôle est de collaborer avec les autres Kins de l'équipe afin d'améliorer votre travail. \\n\\n===\",\"missionId\":\"kinontologie-ameliorationContinue\",\"missionIdDemandeur\":\"kinontologie-ameliorationContinue\",\"status\":\"doing\",\"telegramChatId\":-4155607972,\"threadId\":\"ameliorationContinue\",\"uniteFonctionnelle\":\"ameliorationContinue\"}",
          "query": "/crud_mission/read/kinontologie-ameliorationContinue",
          "responseFormat": "json",
          "command": "read",
          "remainingThread": "",
          "entireThread": "[INFORMATIF - Pas de Template]\n\nPas de template existant,  la structure du document est à définir\n\n[/INFORMATIF - Pas de Template]\n\n---\n\n[ANALYSE - Préparatifs de la Réunion de Lancement]\n\nPour m'assurer que tous les préparatifs de la réunion de lancement sont en place, je dois prendre en compte plusieurs éléments clés :\n\n1. **Communication avec l'Équipe** : Il est crucial de communiquer efficacement avec tous les membres de l'équipe concernant les détails de la réunion de lancement. Cela comprend l'heure, la date, le lieu (ou le lien, si la réunion est virtuelle), ainsi que l'ordre du jour préliminaire. Il est important de confirmer leur disponibilité pour maximiser la participation.\n\n2. **Préparation des Supports de Présentation** : Les supports de présentation jouent un rôle majeur dans la transmission efficace des informations durant la réunion. Ils doivent être conçus pour être clairs, informatifs, et visuellement attrayants. Le but est de s'assurer que tous les participants aient une vue d'ensemble claire des objectifs, des plans et des attentes pour le projet d'amélioration continue.\n\n3. **Documentation Nécessaire** : Outre les supports de présentation, il est essentiel de préparer toute documentation supplémentaire qui pourrait être nécessaire. Cela peut inclure des feuilles de route, des plans d'action détaillés, des formulaires de feedback ou tout autre document qui aidera à structurer la réunion et le projet d'amélioration continue.\n\n4. **Validation de la Technologie** : Si la réunion est virtuelle, il est important de s'assurer que la plateforme choisie fonctionne correctement pour tous les participants. Cela peut nécessiter un test technique préalable pour éviter d'éventuels problèmes de connectivité ou de compatibilité.\n\n5. **Engagement et Motivation** : Encourager l'engagement et la motivation des participants est une étape clé. Cela pourrait impliquer une communication préalable sur l’importance de leur participation et sur l’impact potentiel de leurs contributions à l’amélioration continue du projet.\n\nEn résumé, ces préparatifs visent à garantir que la réunion de lancement soit productive, bien organisée, et qu'elle instaure une base solide pour le travail d'amélioration continue à venir.\n\n[/ANALYSE - Préparatifs de la Réunion de Lancement]\n\n---\n\n[DEMANDE - Communication avec l'Équipe]\n\nLa préparation effective de la réunion de lancement nécessite la certaine participation de l'équipe. Je demande donc à @KinCollaborateur de confirmer la disponibilité des membres de l'équipe pour la réunion de lancement, en indiquant les dates et heures qui leur conviennent le mieux, ainsi que leurs attentes principales pour cette réunion.\n\n[/DEMANDE - Communication avec l'Équipe]\n\n---\n\n[DEMANDE - Préparation des Supports de Présentation]\n\nJe demande l'assistance de @KinCreateurDeContenu pour la conception des supports de présentation pour la réunion de lancement. Les supports doivent détailler les objectifs du projet d'amélioration continue, le plan d'action proposé, et les attentes envers les membres de l'équipe. Il est important que ces documents soient clairs, visuellement attractifs et informatifs.\n\n[/DEMANDE - Préparation des Supports de Présentation]\n\n---\n\n[DEMANDE - Définition du Plan de Communication]\n\nPour assurer une collaboration efficace entre les membres de l'équipe tout au long du projet d'amélioration continue, je demande à @KinAnalysteDeCommunication de définir explicitement les outils et protocoles de communication. Cela devrait inclure les canaux de communication privilégiés (email, chat, appels vidéo, etc.), le protocole de suivi des tâches et des feedbacks, ainsi que les lignes directrices pour la communication interne efficace.\n\n[/DEMANDE - Définition du Plan de Communication]\n\n---\n\n[DEMANDE - Implémentation du Mécanisme de Recueil des Idées]\n\nAfin de faciliter la collecte des idées d'amélioration continues de tous les membres de l'équipe, je demande à @KinTechnologue d'implémenter un mécanisme adapté. Cela peut prendre la forme d'un formulaire en ligne ou d'un espace dédié dans le chat commun de l'équipe. Le mécanisme devrait permettre la soumission facile des idées, leur tri et leur évaluation par l'équipe.\n\n[/DEMANDE - Implémentation du Mécanisme de Recueil des Idées]\n\n---\n\n---\n\n[DEMANDE - Confirmation de la Réception des Réponses]\n\nAvant de pouvoir finaliser les préparatifs pour la réunion de lancement, je dois m'assurer que les demandes faites aux autres Kins ont été reçues et qu'ils travaillent à y répondre. Je demande donc une confirmation de la réception de mes demandes auprès de @KinCollaborateur, @KinCreateurDeContenu, @KinAnalysteDeCommunication, et @KinTechnologue, ainsi que des estimations concernant le temps qu'ils nécessiteront pour compléter leurs tâches.\n\n[/DEMANDE - Confirmation de la Réception des Réponses]\n\n---\n\n[EXCEPTION - Anomalie dans la Communication avec les Kins]\n\nIl semblerait qu'une anomalie a été rencontrée lors de la tentative de communication avec les Kins mentionnés (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue). Les Kins en question sont actuellement inactifs ou inexistants dans le système. Cela entraîne une impossibilité temporaire d'obtenir des mises à jour directes sur les tâches demandées.\n\nCette situation nécessite une attention immédiate afin de résoudre l'anomalie et de progresser dans les préparatifs de la réunion de lancement. Les efforts sont en cours pour rectifier cette situation.\n\n[/EXCEPTION - Anomalie dans la Communication avec les Kins]\n\n---",
          "thread": "[INFORMATIF - Pas de Template]\n\nPas de template existant,  la structure du document est à définir\n\n[/INFORMATIF - Pas de Template]\n\n---\n\n[ANALYSE - Préparatifs de la Réunion de Lancement]\n\nPour m'assurer que tous les préparatifs de la réunion de lancement sont en place, je dois prendre en compte plusieurs éléments clés :\n\n1. **Communication avec l'Équipe** : Il est crucial de communiquer efficacement avec tous les membres de l'équipe concernant les détails de la réunion de lancement. Cela comprend l'heure, la date, le lieu (ou le lien, si la réunion est virtuelle), ainsi que l'ordre du jour préliminaire. Il est important de confirmer leur disponibilité pour maximiser la participation.\n\n2. **Préparation des Supports de Présentation** : Les supports de présentation jouent un rôle majeur dans la transmission efficace des informations durant la réunion. Ils doivent être conçus pour être clairs, informatifs, et visuellement attrayants. Le but est de s'assurer que tous les participants aient une vue d'ensemble claire des objectifs, des plans et des attentes pour le projet d'amélioration continue.\n\n3. **Documentation Nécessaire** : Outre les supports de présentation, il est essentiel de préparer toute documentation supplémentaire qui pourrait être nécessaire. Cela peut inclure des feuilles de route, des plans d'action détaillés, des formulaires de feedback ou tout autre document qui aidera à structurer la réunion et le projet d'amélioration continue.\n\n4. **Validation de la Technologie** : Si la réunion est virtuelle, il est important de s'assurer que la plateforme choisie fonctionne correctement pour tous les participants. Cela peut nécessiter un test technique préalable pour éviter d'éventuels problèmes de connectivité ou de compatibilité.\n\n5. **Engagement et Motivation** : Encourager l'engagement et la motivation des participants est une étape clé. Cela pourrait impliquer une communication préalable sur l’importance de leur participation et sur l’impact potentiel de leurs contributions à l’amélioration continue du projet.\n\nEn résumé, ces préparatifs visent à garantir que la réunion de lancement soit productive, bien organisée, et qu'elle instaure une base solide pour le travail d'amélioration continue à venir.\n\n[/ANALYSE - Préparatifs de la Réunion de Lancement]\n\n---\n\n[DEMANDE - Communication avec l'Équipe]\n\nLa préparation effective de la réunion de lancement nécessite la certaine participation de l'équipe. Je demande donc à @KinCollaborateur de confirmer la disponibilité des membres de l'équipe pour la réunion de lancement, en indiquant les dates et heures qui leur conviennent le mieux, ainsi que leurs attentes principales pour cette réunion.\n\n[/DEMANDE - Communication avec l'Équipe]\n\n---\n\n[DEMANDE - Préparation des Supports de Présentation]\n\nJe demande l'assistance de @KinCreateurDeContenu pour la conception des supports de présentation pour la réunion de lancement. Les supports doivent détailler les objectifs du projet d'amélioration continue, le plan d'action proposé, et les attentes envers les membres de l'équipe. Il est important que ces documents soient clairs, visuellement attractifs et informatifs.\n\n[/DEMANDE - Préparation des Supports de Présentation]\n\n---\n\n[DEMANDE - Définition du Plan de Communication]\n\nPour assurer une collaboration efficace entre les membres de l'équipe tout au long du projet d'amélioration continue, je demande à @KinAnalysteDeCommunication de définir explicitement les outils et protocoles de communication. Cela devrait inclure les canaux de communication privilégiés (email, chat, appels vidéo, etc.), le protocole de suivi des tâches et des feedbacks, ainsi que les lignes directrices pour la communication interne efficace.\n\n[/DEMANDE - Définition du Plan de Communication]\n\n---\n\n[DEMANDE - Implémentation du Mécanisme de Recueil des Idées]\n\nAfin de faciliter la collecte des idées d'amélioration continues de tous les membres de l'équipe, je demande à @KinTechnologue d'implémenter un mécanisme adapté. Cela peut prendre la forme d'un formulaire en ligne ou d'un espace dédié dans le chat commun de l'équipe. Le mécanisme devrait permettre la soumission facile des idées, leur tri et leur évaluation par l'équipe.\n\n[/DEMANDE - Implémentation du Mécanisme de Recueil des Idées]\n\n---\n\n---\n\n[DEMANDE - Confirmation de la Réception des Réponses]\n\nAvant de pouvoir finaliser les préparatifs pour la réunion de lancement, je dois m'assurer que les demandes faites aux autres Kins ont été reçues et qu'ils travaillent à y répondre. Je demande donc une confirmation de la réception de mes demandes auprès de @KinCollaborateur, @KinCreateurDeContenu, @KinAnalysteDeCommunication, et @KinTechnologue, ainsi que des estimations concernant le temps qu'ils nécessiteront pour compléter leurs tâches.\n\n[/DEMANDE - Confirmation de la Réception des Réponses]\n\n---\n\n[EXCEPTION - Anomalie dans la Communication avec les Kins]\n\nIl semblerait qu'une anomalie a été rencontrée lors de la tentative de communication avec les Kins mentionnés (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue). Les Kins en question sont actuellement inactifs ou inexistants dans le système. Cela entraîne une impossibilité temporaire d'obtenir des mises à jour directes sur les tâches demandées.\n\nCette situation nécessite une attention immédiate afin de résoudre l'anomalie et de progresser dans les préparatifs de la réunion de lancement. Les efforts sont en cours pour rectifier cette situation.\n\n[/EXCEPTION - Anomalie dans la Communication avec les Kins]\n\n---",
          "documentGoogleDriveId": "1X8KjCCz2xRseddHJdtpiVHRLflxjoD-v",
          "output": "[EXCEPTION - Anomalie dans la Communication avec les Kins]\n\nIl semblerait qu'une anomalie a été rencontrée lors de la tentative de communication avec les Kins mentionnés (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue). Les Kins en question sont actuellement inactifs ou inexistants dans le système. Cela entraîne une impossibilité temporaire d'obtenir des mises à jour directes sur les tâches demandées.\n\nCette situation nécessite une attention immédiate afin de résoudre l'anomalie et de progresser dans les préparatifs de la réunion de lancement. Les efforts sont en cours pour rectifier cette situation.\n\n[/EXCEPTION - Anomalie dans la Communication avec les Kins]\n\n---",
          "promptProducteur": "MISSION GLOBALE\n===============\n\n**PROCESSUS - MISSION : AMELIORATION CONTNIUE :**\n\nL'amélioration continue est ton objectif quand tu n'es pas assigné à une mission spécifique. Ton rôle est de collaborer avec les autres Kins de l'équipe afin d'améliorer votre travail. \n\n===\n\nTHREAD D'AVANCEMENT\n===============\n\n[INFORMATIF - Pas de Template]\n\nPas de template existant,  la structure du document est à définir\n\n[/INFORMATIF - Pas de Template]\n\n---\n\n[ANALYSE - Préparatifs de la Réunion de Lancement]\n\nPour m'assurer que tous les préparatifs de la réunion de lancement sont en place, je dois prendre en compte plusieurs éléments clés :\n\n1. **Communication avec l'Équipe** : Il est crucial de communiquer efficacement avec tous les membres de l'équipe concernant les détails de la réunion de lancement. Cela comprend l'heure, la date, le lieu (ou le lien, si la réunion est virtuelle), ainsi que l'ordre du jour préliminaire. Il est important de confirmer leur disponibilité pour maximiser la participation.\n\n2. **Préparation des Supports de Présentation** : Les supports de présentation jouent un rôle majeur dans la transmission efficace des informations durant la réunion. Ils doivent être conçus pour être clairs, informatifs, et visuellement attrayants. Le but est de s'assurer que tous les participants aient une vue d'ensemble claire des objectifs, des plans et des attentes pour le projet d'amélioration continue.\n\n3. **Documentation Nécessaire** : Outre les supports de présentation, il est essentiel de préparer toute documentation supplémentaire qui pourrait être nécessaire. Cela peut inclure des feuilles de route, des plans d'action détaillés, des formulaires de feedback ou tout autre document qui aidera à structurer la réunion et le projet d'amélioration continue.\n\n4. **Validation de la Technologie** : Si la réunion est virtuelle, il est important de s'assurer que la plateforme choisie fonctionne correctement pour tous les participants. Cela peut nécessiter un test technique préalable pour éviter d'éventuels problèmes de connectivité ou de compatibilité.\n\n5. **Engagement et Motivation** : Encourager l'engagement et la motivation des participants est une étape clé. Cela pourrait impliquer une communication préalable sur l’importance de leur participation et sur l’impact potentiel de leurs contributions à l’amélioration continue du projet.\n\nEn résumé, ces préparatifs visent à garantir que la réunion de lancement soit productive, bien organisée, et qu'elle instaure une base solide pour le travail d'amélioration continue à venir.\n\n[/ANALYSE - Préparatifs de la Réunion de Lancement]\n\n---\n\n[DEMANDE - Communication avec l'Équipe]\n\nLa préparation effective de la réunion de lancement nécessite la certaine participation de l'équipe. Je demande donc à @KinCollaborateur de confirmer la disponibilité des membres de l'équipe pour la réunion de lancement, en indiquant les dates et heures qui leur conviennent le mieux, ainsi que leurs attentes principales pour cette réunion.\n\n[/DEMANDE - Communication avec l'Équipe]\n\n---\n\n[DEMANDE - Préparation des Supports de Présentation]\n\nJe demande l'assistance de @KinCreateurDeContenu pour la conception des supports de présentation pour la réunion de lancement. Les supports doivent détailler les objectifs du projet d'amélioration continue, le plan d'action proposé, et les attentes envers les membres de l'équipe. Il est important que ces documents soient clairs, visuellement attractifs et informatifs.\n\n[/DEMANDE - Préparation des Supports de Présentation]\n\n---\n\n[DEMANDE - Définition du Plan de Communication]\n\nPour assurer une collaboration efficace entre les membres de l'équipe tout au long du projet d'amélioration continue, je demande à @KinAnalysteDeCommunication de définir explicitement les outils et protocoles de communication. Cela devrait inclure les canaux de communication privilégiés (email, chat, appels vidéo, etc.), le protocole de suivi des tâches et des feedbacks, ainsi que les lignes directrices pour la communication interne efficace.\n\n[/DEMANDE - Définition du Plan de Communication]\n\n---\n\n[DEMANDE - Implémentation du Mécanisme de Recueil des Idées]\n\nAfin de faciliter la collecte des idées d'amélioration continues de tous les membres de l'équipe, je demande à @KinTechnologue d'implémenter un mécanisme adapté. Cela peut prendre la forme d'un formulaire en ligne ou d'un espace dédié dans le chat commun de l'équipe. Le mécanisme devrait permettre la soumission facile des idées, leur tri et leur évaluation par l'équipe.\n\n[/DEMANDE - Implémentation du Mécanisme de Recueil des Idées]\n\n---\n\n---\n\n[DEMANDE - Confirmation de la Réception des Réponses]\n\nAvant de pouvoir finaliser les préparatifs pour la réunion de lancement, je dois m'assurer que les demandes faites aux autres Kins ont été reçues et qu'ils travaillent à y répondre. Je demande donc une confirmation de la réception de mes demandes auprès de @KinCollaborateur, @KinCreateurDeContenu, @KinAnalysteDeCommunication, et @KinTechnologue, ainsi que des estimations concernant le temps qu'ils nécessiteront pour compléter leurs tâches.\n\n[/DEMANDE - Confirmation de la Réception des Réponses]\n\nINSTRUCTIONS\n===============\n\nTODO: - Vérifier que les Kins (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue) ont bien reçu et compris leurs demandes respectives.\n- Demander une mise à jour sur l'état d'avancement des tâches assignées à chacun.\n- Encourager la priorisation de ces tâches pour assurer le bon déroulement des préparatifs de la réunion de lancement.\n- Vérifier spécifiquement l'avancement du KinAnalysteDeCommunication et du KinTechnologue pour soutenir efficacement la communication et l'implication dans le projet d'amélioration continue.\n\nProchaine action à réaliser: Envoyer des demandes de mise à jour sur l'avancement des tâches aux Kins concernés (KinCollaborateur, KinCreateurDeContenu, KinAnalysteDeCommunication, KinTechnologue)."
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any",
    "saveExecutionProgress": true,
    "executionTimeout": 2400,
    "errorWorkflow": "PYJaVWpuygsfVZry"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [
        14
      ]
    },
    "node:Nico reçoit un email": {
      "lastTimeChecked": 1706021400,
      "possibleDuplicates": [
        "18d36ccb1edf6bcf"
      ]
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-21T09:46:57.068Z",
      "updatedAt": "2024-01-21T09:46:57.068Z",
      "id": "O7AwhYu4Pf4sOOHS",
      "name": "beta"
    },
    {
      "createdAt": "2023-12-17T21:33:59.044Z",
      "updatedAt": "2023-12-17T21:33:59.044Z",
      "id": "cV0ITFyTfPijMrvR",
      "name": "kin"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-12T19:43:19.000Z",
  "versionId": "5248cc33-d074-4580-bcb0-834fb923e871"
}