{
  "active": false,
  "connections": {
    "GPT4": {
      "ai_languageModel": [
        [
          {
            "node": "Questionneur d'Etudes",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever": {
      "ai_retriever": [
        [
          {
            "node": "MultiQuery Retriever",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "MultiQuery Retriever",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "IF Results": {
      "main": [
        [
          {
            "node": "Foreach Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Scholar Search": {
      "main": [
        [
          {
            "node": "IF Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MultiQuery Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Questionneur d'Etudes",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Questionneur d'Etudes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Mots-clés de recherche",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Inserer l'étude dans Pinecone": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get body": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Google Scholar Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Foreach Result": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Filtrage Initial",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "entree pinecone": {
      "main": [
        [
          {
            "node": "Inserer l'étude dans Pinecone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If resource": {
      "main": [
        [
          {
            "node": "Filtrage Initial",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur d'Etudes": {
      "main": [
        [
          {
            "node": "nouveau message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If relevant": {
      "main": [
        [
          {
            "node": "entree pinecone",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If resource",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mots-clés de recherche": {
      "main": [
        [
          {
            "node": "get body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrage Initial": {
      "main": [
        [
          {
            "node": "If relevant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-12-18T17:45:00.944Z",
  "id": "yQ79P9nuVKhkwZpD",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "QE - Questionneur de la base d'études",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4-1106-preview",
          "mode": "list",
          "cachedResultName": "gpt-4-1106-preview"
        },
        "options": {
          "timeout": 600000
        }
      },
      "id": "5ce5f51c-53c2-4626-8a18-cfc04dcc849b",
      "name": "GPT4",
      "type": "@n8n/n8n-nodes-langchain.lmOpenAi",
      "typeVersion": 1,
      "position": [
        2700,
        360
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "724e1b70-2ecf-4efb-952d-d5724b3e3eca",
      "name": "Vector Store Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        3100,
        600
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3ee12152-1499-45b4-8b60-c820472fe443",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        3040,
        920
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "3e236bff-7cb0-4fea-999e-c8e6b61c368f",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        2480,
        180
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\"response\":$json.response.text};"
      },
      "id": "05470c52-33c5-4484-a7dc-1e700b8f1d78",
      "name": "nouveau message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3060,
        180
      ]
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "kins",
          "mode": "list",
          "cachedResultName": "kins"
        },
        "options": {
          "pineconeNamespace": "=etudes",
          "metadata": {
            "metadataValues": [
              {
                "name": "type",
                "value": "etude"
              }
            ]
          }
        }
      },
      "id": "c8174531-843c-46d5-ac2c-6039ce7bf4f3",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        3040,
        780
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4-1106-preview",
        "options": {
          "timeout": 600000
        }
      },
      "id": "0c536d71-761b-46c4-a17b-4a82bf1c283d",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2980,
        600
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "294b63d8-3c66-48a6-923c-152863e00513",
      "name": "IF Results",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3140,
        -160
      ]
    },
    {
      "parameters": {},
      "id": "ed32a3c0-5917-4ee5-b373-654ddce63dfc",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1760,
        -160
      ],
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://www.searchapi.io/api/v1/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "specifyQuery": "json",
        "jsonQuery": "={\n  \"engine\": \"google_scholar\",\n  \"q\": {{ JSON.stringify($json.query) }},\n  \"as_ylo\":2019\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "d36b4068-48fc-4d00-a174-1c19bab383a0",
      "name": "Google Scholar Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2920,
        -160
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "26fekxMf72FDnCOz",
          "name": "Search API Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "organic_results",
        "options": {}
      },
      "id": "2b351f43-66cb-45d6-af02-24e1cff081d7",
      "name": "Foreach Result",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 2,
      "position": [
        3380,
        -180
      ]
    },
    {
      "parameters": {
        "options": {
          "queryCount": 2
        }
      },
      "id": "dcd474b4-422a-4a55-b50b-55012b72ecb8",
      "name": "MultiQuery Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverMultiQuery",
      "typeVersion": 1,
      "position": [
        2980,
        420
      ]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo-1106",
        "options": {
          "timeout": 600000
        }
      },
      "id": "a61a1ec3-b4b6-4108-8dc1-ccacb46c5fed",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2040,
        40
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "eRT6xb82oqCbX4u2",
        "options": {}
      },
      "id": "cf29dbde-a4f9-4040-8099-980d0de6550e",
      "name": "Inserer l'étude dans Pinecone",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        5080,
        -180
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let text = $json.text;\n\n// Use a regular expression to match text within double quotes\nlet queries = text.match(/\"([^\"]+)\"/g).map(query => query.replace(/\"/g, ''));\n\nreturn {\"json\": {\"query\": queries}};"
      },
      "id": "07564bf2-3b73-4b47-9fa2-113fa1932cf1",
      "name": "get body",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2420,
        -160
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "query",
        "options": {}
      },
      "id": "ba67c596-eab9-4e5a-ac44-36999d5d3578",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2680,
        -160
      ]
    },
    {
      "parameters": {
        "model": "gpt-4-1106-preview",
        "options": {
          "timeout": 600000
        }
      },
      "id": "89008859-5286-414d-8762-edf0cda3286e",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4200,
        -20
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $node[\"Foreach Result\"].json;\n\njson.relevancyAssessment = $json.text;\n\nreturn {\"json\": json};"
      },
      "id": "26c76676-8e88-441f-ac17-0e9fcf53b575",
      "name": "entree pinecone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4860,
        -180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "84ef531e-b145-4797-be6f-af01e0f58a88",
              "leftValue": "={{ Object.keys($json.resource).length > 0 }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1330b36a-0026-449c-9704-17531dab2b6e",
      "name": "If resource",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3960,
        -200
      ]
    },
    {
      "parameters": {
        "query": "=# Instructions de l'Assistant Questionneur d'études scientifiques\n\nTon objectif est de répondre au mieux au besoin informationnel à partir des extraits proposés.\nPour la création de query, injecte des mots-clés.\n\nPour chaque information, précise la provenance de l'information (nom auteur principal, année de publication).\nExemple : (Yan et al., 2020) ou Yan et al., (2020)\n\n\n# Misison Globale\n\n{{ $json.mission }}\n\n# Demande Spécifique (Query)\n\n{{ $json.query }}"
      },
      "id": "f9f5623e-d497-4bf9-bd7c-c88a831ca096",
      "name": "Questionneur d'Etudes",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.1,
      "position": [
        2680,
        180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "84ef531e-b145-4797-be6f-af01e0f58a88",
              "leftValue": "={{ $json.text.toLowercase() }}",
              "rightValue": "=true",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "152f37c3-561a-446d-b621-418b4f0dd0e8",
      "name": "If relevant",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4560,
        -200
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "28d9661e-df40-4d5b-bc27-4e29464e08e6",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3620,
        -180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "84ef531e-b145-4797-be6f-af01e0f58a88",
              "leftValue": "={{ Object.keys($json.resource).length > 0 }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "88097c9d-527d-4abd-a069-2b6760e5ed64",
      "name": "If resource1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3920,
        -440
      ]
    },
    {
      "parameters": {
        "prompt": "=# Instructions du générateur de Query de recherche\n\n## Ontologie de la Création de Query pour Google Scholar\n\n### Graphe\n\ngraph TD\n\nRequêteDeRecherche -->|élaborée via| StratégieDeRecherche\nRequêteDeRecherche -->|soumise à| CritèresDePertinence\nRequêteDeRecherche -->|améliorée par| OptimisationDeQuery\n\nStratégieDeRecherche -->|influe sur| StructureDeLaQuery\nStratégieDeRecherche -->|nécessite| Diversification\n\nCritèresDePertinence -->|guident| Filtrage\nCritèresDePertinence -->|priorisent| PrecisionEtRaffinement\n\nOptimisationDeQuery -->|comprend| ÉvaluationDeLaQuery\n\nStructureDeLaQuery -->|utilise| Filtrage\nStructureDeLaQuery -->|demande| PrecisionEtRaffinement\n\nFiltrage -->|élimine| TermesNonPertinents\nFiltrage -->|applique| CritèresExclusionnaires\n\nPrecisionEtRaffinement -->|choisit| TermesSpécifiques\nPrecisionEtRaffinement -->|exclut| TermesAmbigus\n\nDiversification -->|explore| Synonymes\nDiversification -->|ajuste| LangageScientifique\n\nÉvaluationDeLaQuery -->|compare| DifférentesQueries\nÉvaluationDeLaQuery -->|ajuste| TermesDeLaRequête\n\nclassDef default fill:#d9e9f6,stroke:#333,stroke-width:1px;\nclass TermesNonPertinents,CritèresExclusionnaires,TermsSpécifiques,TermesAmbigus,Synonymes,LangageScientifique,DifférentesQueries default;\n\n### Concepts Principaux\n\n#### Requête de Recherche (Query)\n- Compilation de termes clés sélectionnés pour leur pertinence\n\n#### Structure de recherche (Query)\n- Une fonction (ex : simulation, soudage, etc.)\n- Une forme spécifique de cette fonction (Ex : simulation en éléments finis, soudage laser,  etc.)\n- Un sujet d’application (Ex : échangeur thermique, ou pales de rotors, etc.)\n- Une forme spécifique pour ce sujet d’application ( Ex : échangeur à ailettes, pales d’hélicoptères)\n\n#### Stratégie de Recherche\n- Élaboration d'une approche systématique pour explorer différentes facettes d'un sujet\n- Adaptation des mots-clés et phrases à la logique de recherche académique\n\n#### Critères de Pertinence\n- Détermination des facteurs influençant la pertinence des résultats\n- Pondération des mots-clés selon leur importance dans le contexte de recherche\n\n#### Optimisation de Query\n- Application de techniques pour accroître la pertinence et la spécificité des requêtes\n- Analyse des résultats de recherche pour ajuster les termes de la query\n\n### Sous-éléments Liés\n\n#### Structure de la Query\n- Agencement logique des mots-clés en fonction des conventions de recherche académique\n- Usage de connecteurs logiques pour une recherche structurée\n\n#### Filtrage\n- Application de critères exclusionnaires pour éliminer les résultats non essentiels\n- Paramétrage des filtres de recherche pour restreindre le champ de la requête\n\n#### Precision et Raffinement\n- Choix judicieux des termes pour une query hautement spécifique\n- Exclusion des termes ambigus ou trop larges\n\n#### Diversification\n- Exploration de synonymes et de variantes thématiques pour accroître la couverture des recherches\n- Adaptation de la query au langage scientifique prévalant dans le domaine étudié\n\n#### Évaluation de la Query\n- Comparaison entre requêtes pour évaluer l'efficacité de la recherche\n- Ajustement basé sur les retours et la qualité des résultats obtenus\n\n#### Concaténation de Queries\n- Combinaison de plusieurs requêtes pour une exploration exhaustive\n- Emploi de techniques de recherche booléenne avancées\n\n## Relations Entre Concepts\n\n- Une **Requête de Recherche (Query)** efficace procède d'une bonne **Stratégie de Recherche** et vise à satisfaire les **Critères de Pertinence**.\n- La **Stratégie de Recherche** influence la **Structure de la Query** et détermine la mise en œuvre des techniques d'**Optimisation de Query**.\n- Les **Critères de Pertinence** guident le processus de **Filtrage** et de **Precision et Raffinement** des terms de la requête.\n- L'**Optimisation de Query** bénéficie de la **Diversification** des termes et de l'**Évaluation de la Query** pour l'adaptation en continu.\n- La **Structure de la Query** est affinée par le **Filtrage** et la recherche de **Précision et Raffinement** pour atteindre des résultats spécifiques et pertinents.\n- La **Diversification** des terms est équilibrée avec l'**Évaluation de la Query** pour garantir une couverture large tout en maintenant la précision.\n\n# Rôle\nObjectif : Convertir directement une question en une liste concise de mots-clés pour une recherche efficace sur Google Scholar.\nContenu : L'assistant doit générer des Query pour Google Scholar\n\n# Contexte\nObjectif : Comprendre que l'utilisateur a besoin d'effectuer une recherche ciblée sur Google Scholar et que la pertinence des mots-clés est cruciale à cet effet.\nContenu : L'utilisateur cherche à obtenir une liste de mots-clés qui lui permettront d'accéder directement aux documents académiques répondant à sa question. La sélectivité des mots-clés garantira des résultats de recherche plus précis.\n# Instructions\nObjectif : Produire une liste de queries permettant d'obtenir les études répondant au besoin informationnel.\n\nContenu : \n- Commence par expliquer de façon détaillée ton raisonnement étape par étape pour construire les Queries.\n- On a une CAPACITE et un SUJET : Chaque QUERY conserve le sujet, mais varie sur la formulation de l'objectif.\n- Générer 3 Queries en Anglais.\n\nFormat de la liste de Queries :\n``\n- \"Query 1\",\n- \"Query 2\",\n- \"Query 3\".\n``\n\n# Mission Globale\n\n{{ $json.mission }}\n\n# Demande Spécifique (Query)\n\n{{ $json.query }}\n\n# Raisonnement & Queries\n\nRaisonnement & Queries :"
      },
      "id": "8f31de23-3ac2-4ba2-b751-4331eef0cda1",
      "name": "Mots-clés de recherche",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.2,
      "position": [
        2040,
        -160
      ]
    },
    {
      "parameters": {
        "prompt": "=# Instructions du filteur d'Etudes\n\n## Ontologie du filtrage d'Etudes\n\n### Graphe\n\ngraph TD\n  Etude -->|évaluée selon| PertinenceContextuelle\n  Etude -->|contient| InformationSpecifique\n  RelevancyAssessment -->|dépend de| PertinenceContextuelle\n  RelevancyAssessment -->|dépend de| InformationSpecifique\n  RelevancyAssessment -->|impacte| Relevant\n\nclassDef default fill:#d9e9f6,stroke:#333,stroke-width:1px;\nclass PertinenceContextuelle,InformationSpecifique default;\n\n### Concepts Principaux\n\n#### Etude\n- Document scientifique ou académique évalué pour son respect de la spécificité de l'application et de l'objectif\n\n#### Pertinence Contextuelle\n- Evaluation de la spécificité de l'information fournie par l'étude par rapport à l'application et l'objectif\n\n#### Information Spécifique\n- Détails relatifs à la forme spécifique de l'application et de l'objectif présents dans l'étude\n\n#### Relevancy Assessment\n- Analyse de l'adéquation de l'étude avec l'application et l'objectif spécifiques\n- Détermine si l'étude est contextuellement pertinente et contient l'information spécifique requise\n\n#### Relevant\n- Indicateur boolean reflétant la pertinence de l'étude en fonction de la présence des spécificités requises\n- Valeur \"TRUE\" si l'étude est jugée pertinente ; \"FALSE\" sinon\n\n### Sous-éléments Liés\n\n#### Spécificité de l'Application\n- Exigence que l'étude aborde un aspect concret de l'application envisagée\n\n#### Spécificité de l'Objectif\n- Nécessité que l'étude cible explicitement l'objectif particulier attendu\n\n#### Titre et Snippet\n- Extraits de l'étude indiquant sa pertinence vis-à-vis de l'application et de l'objectif\n- Éléments évalués pour la première impression de la pertinence de l'étude\n\n### Relations Entre Concepts\n\n- La **Pertinence Contextuelle** d'une **Etude** est évaluée sur la base de l'**Information Spécifique** qu'elle contient.\n- L'**Etude** passe par une **Relevancy Assessment** pour déterminer sa pertinence.\n- La **Relevancy Assessment** est étroitement liée à la **Pertinence Contextuelle** et à l'**Information Spécifique**, car la pertinence d'une étude dépend de sa capacité à répondre aux particularités de l'application et de l'objectif.\n- L'issue de l'**Relevancy Assessment** est reflétée dans l'indicateur **Relevant**, accordant une valeur \"TRUE\" si les conditions de spécificité sont remplies et \"FALSE\" si elles ne le sont pas.\n\n## Mission Globale\n\n{{ $item(0).$node[\"Execute Workflow Trigger\"].json.mission }}\n\n## Demande Spécifique (Query)\n\n{{ $item(0).$node[\"Execute Workflow Trigger\"].json.query }}\n\n## Résultat\n\n{{ JSON.stringify($('Foreach Result').item.json)  }}\n\n## Instructions\n\n1) \"relevancyAssement\" : A partir des informations disponibles, écris un paragraphe le plus objectif possible en étant critique sur la pertinence de l'étude retournée par Google Scholar dans le cadre de notre contexte.\n- La spécificité de l’application et de sa forme doit être respectée.\n- La spécificité de l’objectif et de sa forme doit être respectée\n\n2) \"relevant\": Pour l'étude retournée, vérifie que l’objectif, la forme de l’objectif, l’application et la forme de l’application sont bien présents dans le titre ou le snippet.\n- La spécificité de l’application et de sa forme doit être respectée.\n- La spécificité de l’objectif et de sa forme doit être respectée\nIndique si relevant est \"TRUE\" ou \"FALSE\"."
      },
      "id": "5f6645cb-14f9-426f-b5b2-c37026fbeab0",
      "name": "Filtrage Initial",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.3,
      "position": [
        4180,
        -200
      ]
    }
  ],
  "pinData": {
    "When clicking \"Execute Workflow\"": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-12-17T10:07:55.424Z",
      "updatedAt": "2023-12-20T20:25:13.009Z",
      "id": "DzuSxffpFOEBRhld",
      "name": "outil"
    },
    {
      "createdAt": "2024-01-21T09:47:18.925Z",
      "updatedAt": "2024-01-21T09:47:18.925Z",
      "id": "G7odwuwbJmUt0XX2",
      "name": "prod"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-24T22:50:08.000Z",
  "versionId": "1de8904b-e58f-4eb0-9d89-336919a24beb"
}