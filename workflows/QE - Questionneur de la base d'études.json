{
  "active": true,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "kinchercheur - Forumation de Queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "temporary thread": {
      "main": [
        [
          {
            "node": "Convert thread to document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If queries": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "queries": {
      "main": [
        [
          {
            "node": "If queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree queries": {
      "main": [
        [
          {
            "node": "queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "entree requeteur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert thread to document": {
      "main": [
        [
          {
            "node": "entree queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "outputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "outputs": {
      "main": [
        [
          {
            "node": "kinchercheur - Synthèse de l'information",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheur - Forumation de Queries": {
      "main": [
        [
          {
            "node": "temporary thread",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "kinchercheur - Synthèse de l'information": {
      "main": [
        [
          {
            "node": "response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Requêteur direct de la base d'étude": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree requeteur": {
      "main": [
        [
          {
            "node": "Requêteur direct de la base d'étude",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-12-18T17:45:00.944Z",
  "id": "yQ79P9nuVKhkwZpD",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "QE - Questionneur de la base d'études",
  "nodes": [
    {
      "parameters": {},
      "id": "3e236bff-7cb0-4fea-999e-c8e6b61c368f",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        2180,
        -100
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nif (json.json) {\n json = {\n   ...JSON.parse(json.json),\n   ...json\n }; \n}\n\nif (json.chatInput) {\n  json.query = json.chatInput;\n  json.kin = \"Un humain\";\n}\n\nreturn {\"json\": json};"
      },
      "id": "bba22dbe-fc17-4184-8d44-86867e9c0628",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2420,
        -100
      ]
    },
    {
      "parameters": {
        "jsCode": "let response = \"\";\n\n// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  response += item.json.output + \"\\n\\n\";\n}\n\nif ($item(0).$node[\"entree\"].json.chatInput != null) {\n  return {\"output\": response};\n}\n\n\nreturn {\"json\": {\"response\": response}};"
      },
      "id": "44ba6799-b609-4524-87f8-2127cad0d0b1",
      "name": "response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4480,
        100
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\"json\":{\"thread\": $json.output}};"
      },
      "id": "c4be20f3-8d8f-429d-8094-b80719a11e3e",
      "name": "temporary thread",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3080,
        -100
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "queries",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "efbd02c8-7173-4162-8f3d-062d07dcd60a",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2660,
        100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a84d1012-5b07-4af0-ae7e-2d4db42be9e1",
              "leftValue": "={{ $json.queries }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9aa16022-ea1e-4e79-becc-ed912008c7a4",
      "name": "If queries",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2420,
        100
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nif (json.chatInput) {\n  json.query = json.chatInput;\n  json.kinDemandeur = \"Un humain\";\n} else {\n  json.kinDemandeur = json.kin;\n}\n\nif (json.query) {\n  \n} else {\n  json.query =  \"Je souhaite faire des recherches pour améliorer l'équipe de Kin. Etudes après 2020. Mes requêtes :\\n\\n\\\"Multi-Agent Systems LLM\\\",\\n\\\"multi_agent collaboration GPT\\\",\\n\\\"Complex systems agents LLM\\\".\";\n}\n\njson.date = \"2019\";\nlet regexDate = /\\s\\b\\d{4}\\b/; // C'est votre expression régulière\nif (regexDate.test(json.query)) {\n    json.date = json.query.match(regexDate)[0].substring(1);\n    json.query = json.query.replace(regexDate, '');\n}\n\njson.queries = [];\nlet regexQueries = /\"([^\"]*)\"/g;\n// Récupérer toutes les correspondances\nwhile ((matches = regexQueries.exec(json.query)) !== null) {\n    json.queries.push(matches[1]);\n}\n\nreturn {\"json\": json};"
      },
      "id": "429441ac-cfd8-4e87-9c39-07d44d33af5a",
      "name": "queries",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3700,
        -100
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\n\nif (json.document) {\n  json.query = json.document;\n} else {\n  json.query = json.thread;\n}\n\njson.document = $node[\"entree\"].json.document;\njson.thread = $node[\"entree\"].json.thread;\n\nreturn {\"json\": json};"
      },
      "id": "cb05a919-b866-4e6a-a2a9-f48889bb5f65",
      "name": "entree queries",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3500,
        -100
      ]
    },
    {
      "parameters": {
        "workflowId": "xyhDvFnHl8aCE9hV",
        "options": {}
      },
      "id": "ab710038-e9f9-4bcc-a326-bff338daad60",
      "name": "Convert thread to document",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3300,
        -100
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "response",
              "renameField": true,
              "outputFieldName": "output"
            }
          ]
        },
        "options": {
          "mergeLists": false
        }
      },
      "id": "597ec3f3-ad11-4280-8666-475afe988598",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3700,
        100
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nlet outputs = \"\";\n\njson.output.forEach(match => {\n    outputs += match + \"\\n\\n\";\n});\n\nreturn {\"json\": {\"outputs\": outputs}};"
      },
      "id": "f0e26ac0-5801-4723-957f-84642f391960",
      "name": "outputs",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        100
      ]
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "=# Informatif - Fonction Questionneur de la base d'études\n\nLe \"questionneur_de_la_base_d_etudes\" retourne une réponse issue d'études pertinentes à partir d'un objectif à démontrer ou une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage : où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.\n\n===\n\n# Contexte - Intérieur de la fonction \"questionneur_de_la_base_d_etudes\"\n\nTu es dans le workflow de la fonction GPT \"questionneur_de_la_base_d_etudes\". Tu aides le Kin à forumler les texte de requêtes à faire à la base de donnée vectorielle contenant les extraits d'études. Il est normal que tu n'aies pas à accès à \"questionneur_de_la_base_d_etudes\", car tu es dans la fonction en elle-même.\n\n===\n\n[PROCESSUS - Formulation de requêtes]\n\n- Clarté : Formuler des requêtes précises et directes, évitant toute ambigüité.\n- Pertinence des Mots-Clés : Utiliser des termes spécifiques et pertinents au sujet de recherche.\n- Contextualisation : Inclure le contexte spécifique pour affiner la recherche (domaine, application, etc.).\n- Exactitude : S'assurer que les termes utilisés sont exacts et appropriés pour le sujet en question.\n- Structure : Formuler des requêtes bien structurées et grammaticalement correctes.\n\n[/PROCESSUS - Formulation de requêtes]\n\n## Mission Globale\n\n{{ $node[\"entree\"].json.mission?$node[\"queries\"].json.mission:\"Découverte & exploration générale\" }}\n\n===\n\n# Besoin informationnel forumulé par {{ $node[\"entree\"].json.kin }} (Query)\n\n\"{{ $node[\"entree\"].json.query }}\"\n\n===\n\n# Mission Globale\n\n{{ $node[\"entree\"].json.mission }}\n\n===\n\n# Besoin informationnel forumulé par {{ $node[\"entree\"].json.kin }} (Query)\n\n\"{{ $node[\"entree\"].json.query }}\"\n\n===\n\n# Instructions - Questionneur de la base d'études - Formulation des Requêtes\n\n- REFLEXION - Besoin Informationnel: Réformule le besoin informationnel et le contexte, et la référence de l'étude si pertinent.\n- REFLEXION Stratégie de requêtage - : Réfléchis à 3 stratégies de requêtage pour trouver ces infos dans une base de dconnées d'Embedding LLM contenant les extraits d'études.\n- CONTENU : Formule  les 3 textes de requête, en Anglais, entre guillemets dans des balises CONTENU.",
        "options": {}
      },
      "id": "cf235237-b97b-4478-b9d1-8aea92a83c72",
      "name": "kinchercheur - Forumation de Queries",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        2680,
        -100
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assistantId": "asst_rYxwavLJhgSLiKO3cHUzsmnt",
        "text": "=# Informatif - Fonction Questionneur de la base d'études\n\nLe \"questionneur_de_la_base_d_etudes\" retourne une réponse issue d'études pertinentes à partir d'un objectif à démontrer ou une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage : où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.\n\n===\n\n# Contexte - Intérieur de la fonction \"questionneur_de_la_base_d_etudes\"\n\nTu es dans le workflow de la fonction GPT \"questionneur_de_la_base_d_etudes\". Tu aides le Kin à répondre au besoin informationnel à partir des extraits  proposés. Il est normal que tu n'aies pas à accès à \"questionneur_de_la_base_d_etudes\", car tu es dans la fonction en elle-même.\n\n===\n\n# Mission Globale\n\n{{ $item(0).$node[\"entree\"].json.mission?$item(0).$node[\"entree\"].json.mission:\"Découverte & exploration générale\" }}\n\n===\n\n# Extraits proposés\n\n{{ $node[\"outputs\"].json.outputs }}\n\n===\n\n# Besoin informationnel forumulé par {{ $item(0).$node[\"entree\"].json.kin }} (Query)\n\n\"{{ $item(0).$node[\"entree\"].json.query }}\"\n\n===\n\n# Instructions - Questionneur de la base d'études\n\nTon objectif est de répondre de manière détaillée au besoin informationnel à partir des extraits proposés. Réponds toujours au mieux.\n\nPour chaque information, précise la provenance de l'information (nom auteur principal, année de publication -Exemple : (Yan et al., 2020) ou Yan et al., (2020)). Donne ta réponse entre balises RETOUR.",
        "options": {}
      },
      "id": "692f9f2d-6167-4783-a6c6-b705cbfa5d36",
      "name": "kinchercheur - Synthèse de l'information",
      "type": "@n8n/n8n-nodes-langchain.openAiAssistant",
      "typeVersion": 1,
      "position": [
        4120,
        100
      ],
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let response = \"RETOUR :Format des queries incorrect : à formuler entre balises contenu et entre guillemets.\";\n\nif ($node[\"entree\"].json.chatInput != null) {\n  return {\"output\": response};\n}\n\nreturn {\"json\": {\"response\": response}};"
      },
      "id": "e01caaac-9d14-4b30-9ce6-1760e5e13562",
      "name": "response1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2660,
        280
      ]
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Le \"questionneur_de_la_base_d_etudes\" retourne une réponse issue d'études pertinentes à partir d'un objectif à démontrer ou une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage :où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.\n\nExemple : Que disent les études disponibles sur les systèmes multi-agents ?",
        "options": {
          "inputPlaceholder": "Que disent les études disponibles sur les systèmes multi-agents ?",
          "responseMode": "lastNode",
          "subtitle": "=Le \"questionneur_de_la_base_d_etudes\" retourne une réponse issue d'études pertinentes à partir d'un objectif à démontrer ou une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage :où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.\n\nExemple : Que disent les études disponibles sur les systèmes multi-agents ?",
          "title": "={{ $workflow.name }}"
        }
      },
      "id": "15a18857-c374-4110-a881-e96b734b15a7",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [
        2180,
        -320
      ],
      "webhookId": "e7f6613b-97d8-43c1-bd79-e7d950a29cfe"
    },
    {
      "parameters": {
        "workflowId": "KIwwJYUhZR9Ve39x",
        "options": {}
      },
      "id": "183bcefd-1072-4829-ba7e-e739eb03019b",
      "name": "Requêteur direct de la base d'étude",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3300,
        100
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $item(0).$node[\"entree\"].json;\n\njson.query = $json.queries;\njson.date = $json.date;\n\nreturn {\"json\": json};"
      },
      "id": "a84a67a3-eef2-4a12-b572-a87c0958dc84",
      "name": "entree requeteur",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3080,
        100
      ]
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "query": "Disposons-nous dans notre base d'étude du contenu de l'étude suivante :\n\nCasalino, G.; Leo, P.; Mortello, M.; Perulli, P.; Varone, A. Effects of Laser Offset and Hybrid Welding on Microstructure and IMC in Fe–Al Dissimilar Welding. Metals 2017, 7, 282; doi:10.3390/met7080282.\n\nRéponds par une courte phrase explicative, puis \"DISPONIBLE\" ou \"INDISPONIBLE\""
        }
      }
    ],
    "kinchercheur - Forumation de Queries": [
      {
        "json": {
          "output": "[ANALYSE - Besoin Informationnel Initial]\nLe besoin informationnel spécifique est de vérifier la présence d'une étude particulièrement ciblée dans la base de données. L'étude en question est \"Effects of Laser Offset and Hybrid Welding on Microstructure and IMC in Fe–Al Dissimilar Welding\" par Casalino, G.; Leo, P.; Mortello, M.; Perulli, P.; Varone, A., publiée en 2017 dans la revue \"Metals\" avec le DOI 10.3390/met7080282. La précision de la demande, incluant le titre intégral, les auteurs, l'année de publication, et le DOI, suggère un besoin de confirmation sur la disponibilité de cette recherche spécifique dans notre base d'études.\n[/ANALYSE - Besoin Informationnel Initial]\n\n---\n\n[ANALYSE - Reformulation du Besoin]\nPour répondre efficacement à la demande, il est crucial de distinguer clairement la présence du contenu de cette étude particulière dans notre réserve d'informations. Cela implique la reconnaissance du titre complet de l'étude, la contribution des auteurs, et d'autres identifiants uniques comme le DOI.\n[/ANALYSE - Reformulation du Besoin]\n\n---\n\n[ANALYSE - Stratégie de Requêtage]\nTrois stratégies principales peuvent être adoptées pour localiser avec précision cette recherche dans la base de données :\n\n1. **Recherche par Identifiants Exactes** : Utiliser le DOI fourni comme terme de recherche principal, considérant que le DOI représente un identifiant unique pour les publications scientifiques.\n   \n2. **Recherche par Titre et Auteurs** : Combiner le titre complet de l'étude et les noms des auteurs dans la query de recherche pour augmenter la précision des résultats.\n   \n3. **Recherche par Titre et Date de Publication** : Associer le titre de la publication avec son année de publication pour affiner les résultats et éviter toute ambigüité avec d'autres travaux publiés à d'autres moments.\n\nCes stratégies ont été élaborées pour exploiter les informations spécifiques fournies et maximiser les chances de détecter précisément l'étude en question dans la base de données.\n[/ANALYSE - Stratégie de Requêtage]\n\n---\n\n[CONTENU - Formulation des Requêtes]\n\"Effects of Laser Offset and Hybrid Welding on Microstructure and IMC in Fe–Al Dissimilar Welding Casalino, G.; Leo, P.; Mortello, M.; Perulli, P.; Varone, A. 2017 Metals\"\n\"DOI 10.3390/met7080282\"\n\"Effects of Laser Offset and Hybrid Welding on Microstructure and IMC in Fe–Al Dissimilar Welding 2017\"\n[/CONTENU - Formulation des Requêtes]"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-12-17T10:07:55.424Z",
      "updatedAt": "2023-12-20T20:25:13.009Z",
      "id": "DzuSxffpFOEBRhld",
      "name": "outil"
    },
    {
      "createdAt": "2024-01-21T09:47:18.925Z",
      "updatedAt": "2024-01-21T09:47:18.925Z",
      "id": "G7odwuwbJmUt0XX2",
      "name": "prod"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-02-02T11:59:10.000Z",
  "versionId": "f05606d5-05f4-4c01-a412-2f45c236162b"
}