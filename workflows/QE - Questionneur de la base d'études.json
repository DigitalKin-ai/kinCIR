{
  "active": true,
  "connections": {
    "GPT4": {
      "ai_languageModel": [
        [
          {
            "node": "Questionneur de la base d'études",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever": {
      "ai_retriever": [
        [
          {
            "node": "MultiQuery Retriever",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "MultiQuery Retriever",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MultiQuery Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Questionneur de la base d'études",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "entree": {
      "main": [
        [
          {
            "node": "Questionneur de la base d'études",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questionneur de la base d'études": {
      "main": [
        [
          {
            "node": "nouveau message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "entree",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-12-18T17:45:00.944Z",
  "id": "yQ79P9nuVKhkwZpD",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "QE - Questionneur de la base d'études",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4-0125-preview",
          "mode": "list",
          "cachedResultName": "gpt-4-0125-preview"
        },
        "options": {
          "timeout": 600000
        }
      },
      "id": "5ce5f51c-53c2-4626-8a18-cfc04dcc849b",
      "name": "GPT4",
      "type": "@n8n/n8n-nodes-langchain.lmOpenAi",
      "typeVersion": 1,
      "position": [
        2680,
        360
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "724e1b70-2ecf-4efb-952d-d5724b3e3eca",
      "name": "Vector Store Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        2820,
        660
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3ee12152-1499-45b4-8b60-c820472fe443",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2760,
        980
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "3e236bff-7cb0-4fea-999e-c8e6b61c368f",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        2160,
        180
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "if ($node[\"entree\"].json.chatInput != null) {\n  return {\"output\": $json.response.text};\n}\n\n\nreturn {\"response\":$json.response.text};"
      },
      "id": "05470c52-33c5-4484-a7dc-1e700b8f1d78",
      "name": "nouveau message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3060,
        180
      ]
    },
    {
      "parameters": {
        "model": "gpt-4-0125-preview",
        "options": {
          "timeout": 600000
        }
      },
      "id": "0c536d71-761b-46c4-a17b-4a82bf1c283d",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2700,
        660
      ],
      "credentials": {
        "openAiApi": {
          "id": "WY3bm7GCb9qfewyS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "queryCount": 2
        }
      },
      "id": "dcd474b4-422a-4a55-b50b-55012b72ecb8",
      "name": "MultiQuery Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverMultiQuery",
      "typeVersion": 1,
      "position": [
        2700,
        480
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let json = $json;\n\nif (json.json) {\n json = {\n   ...JSON.parse(json.json),\n   ...json\n }; \n}\n\nif (json.chatInput) {\n json.query = json.chatInput;\n}\n\nreturn {\"json\": json};"
      },
      "id": "bba22dbe-fc17-4184-8d44-86867e9c0628",
      "name": "entree",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2400,
        180
      ]
    },
    {
      "parameters": {
        "query": "=# Instructions - Questionneur de la base d'études\n\nTon objectif est de répondre de manière détaillée au besoin informationnel à partir des extraits proposés.\nPour la création de query, injecte des mots-clés.\n\nPour chaque information, précise la provenance de l'information (nom auteur principal, année de publication).\nExemple : (Yan et al., 2020) ou Yan et al., (2020)\n\n\n# Mission Globale\n\n{{ $node[\"entree\"].json.mission }}\n\n# Besoin informationnel forumulé par {{ $node[\"entree\"].json.kin }} (Query)\n\n\"{{ $node[\"entree\"].json.query }}\""
      },
      "id": "f9f5623e-d497-4bf9-bd7c-c88a831ca096",
      "name": "Questionneur de la base d'études",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.1,
      "position": [
        2680,
        180
      ]
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Le \"questionneur_de_la_base_d_etudes\" retourne une réponse issue d'études pertinentes à partir d'un objectif à démontrer ou une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage :où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.\n\nExemple : Que disent les études disponibles sur les systèmes multi-agents ?",
        "options": {
          "inputPlaceholder": "Que disent les études disponibles sur les systèmes multi-agents ?",
          "responseMode": "lastNode",
          "subtitle": "=Le \"questionneur_de_la_base_d_etudes\" retourne une réponse issue d'études pertinentes à partir d'un objectif à démontrer ou une demande informationnelle détaillée.\n\nPour bien l'utiliser, il faut rédiger un paragraphe de demande détaillée, contenant :\n- Les informations que tu cherches, avec les mots clés et éléments de contexte.\n- L'intention d'usage :où tu en es dans les instructions et ce que tu souhaites faire.\n- Le format de réponse désiré.\n\nExemple : Que disent les études disponibles sur les systèmes multi-agents ?",
          "title": "={{ $workflow.name }}"
        }
      },
      "id": "15a18857-c374-4110-a881-e96b734b15a7",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [
        2160,
        -20
      ],
      "webhookId": "e7f6613b-97d8-43c1-bd79-e7d950a29cfe"
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "kinspython",
          "mode": "list",
          "cachedResultName": "kinspython"
        },
        "options": {
          "pineconeNamespace": "=etudes"
        }
      },
      "id": "c8174531-843c-46d5-ac2c-6039ce7bf4f3",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        2760,
        840
      ],
      "credentials": {
        "pineconeApi": {
          "id": "LakE1nni5DFtskNv",
          "name": "PineconeApi account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-12-17T10:07:55.424Z",
      "updatedAt": "2023-12-20T20:25:13.009Z",
      "id": "DzuSxffpFOEBRhld",
      "name": "outil"
    },
    {
      "createdAt": "2024-01-21T09:47:18.925Z",
      "updatedAt": "2024-01-21T09:47:18.925Z",
      "id": "G7odwuwbJmUt0XX2",
      "name": "prod"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-02-01T17:57:55.000Z",
  "versionId": "6062a63b-4cd6-4942-941d-3338f4716ee6"
}